Beginning Clickhouse Test

Current Query: SELECT visitParamExtractInt(Message, 'partitionhash') AS partitionhash, 
visitParamExtractString(Message, 'hashcode') AS hashcode, 
visitParamExtractString(Message, 'accountnumber') AS accountnumber, 
visitParamExtractInt(Message, 'airtimeclass') AS airtimeclass, 
visitParamExtractFloat(Message, 'airtimeunits') AS airtimeunits, 
visitParamExtractString(Message, 'allocationcompletedate') AS allocationcompletedate, 
visitParamExtractString(Message, 'apn') AS apn, 
visitParamExtractString(Message, 'callednumber') AS callednumber, 
visitParamExtractString(Message, 'callingnumber') AS callingnumber, 
visitParamExtractInt(Message, 'carrierid') AS carrierid, 
visitParamExtractString(Message, 'cellid') AS cellid, 
visitParamExtractString(Message, 'chargingid') AS chargingid, 
visitParamExtractInt(Message, 'costcenterid') AS costcenterid, 
visitParamExtractInt(Message, 'downlinkvol') AS downlinkvol, 
visitParamExtractFloat(Message, 'duration') AS duration, 
visitParamExtractString(Message, 'exactusagedateonly') AS exactusagedateonly, 
visitParamExtractString(Message, 'exactusagetime') AS exactusagetime, 
visitParamExtractInt(Message, 'fileid') AS fileid, 
visitParamExtractString(Message, 'iccid') AS iccid, 
visitParamExtractString(Message, 'imei') AS imei, 
visitParamExtractString(Message, 'imsi') AS imsi, 
visitParamExtractInt(Message, 'lineid') AS lineid, 
visitParamExtractInt(Message, 'linenumber') AS linenumber, 
visitParamExtractString(Message, 'mobilecountrycode') AS mobilecountrycode, 
visitParamExtractString(Message, 'mobilenetworkcode') AS mobilenetworkcode, 
visitParamExtractBool(Message, 'mobileoriginated') AS mobileoriginated, 
visitParamExtractString(Message, 'msisdn') AS msisdn, 
visitParamExtractString(Message, 'network') AS network, 
visitParamExtractInt(Message, 'orgid') AS orgid, 
visitParamExtractString(Message, 'orgurn') AS orgurn, 
visitParamExtractString(Message, 'plmn') AS plmn, 
visitParamExtractRaw(Message, 'propertybag') AS propertybag, 
visitParamExtractString(Message, 'recordtype') AS recordtype, 
visitParamExtractString(Message, 'roamingindicator') AS roamingindicator, 
visitParamExtractString(Message, 'roundingdate') AS roundingdate, 
visitParamExtractString(Message, 'sender') AS sender, 
visitParamExtractInt(Message, 'subscriptionid') AS subscriptionid, 
visitParamExtractString(Message, 'subscriptionurn') AS subscriptionurn, 
visitParamExtractInt(Message, 'surrecordtypeid') AS surrecordtypeid, 
visitParamExtractString(Message, 'tapcode') AS tapcode, 
visitParamExtractInt(Message, 'uplinkvol') AS uplinkvol, 
visitParamExtractInt(Message, 'usagetypeid') AS usagetypeid 
FROM radius.udr 
LIMIT 

Results for 5000 records:
Actual rows fetched: 5000
Time to execute select: 0.53 seconds
Time to put into dataframe: 0.03 seconds
Total time: 0.55 seconds

Results for 10000 records:
Actual rows fetched: 10000
Time to execute select: 0.69 seconds
Time to put into dataframe: 0.05 seconds
Total time: 0.74 seconds

Results for 100000 records:
Actual rows fetched: 100000
Time to execute select: 4.54 seconds
Time to put into dataframe: 0.70 seconds
Total time: 5.25 seconds

Results for 500000 records:
Actual rows fetched: 500000
Time to execute select: 20.69 seconds
Time to put into dataframe: 3.76 seconds
Total time: 24.45 seconds

Results for 1000000 records:
Actual rows fetched: 1000000
Time to execute select: 45.04 seconds
Time to put into dataframe: 7.13 seconds
Total time: 52.17 seconds

Current Query: SELECT visitParamExtractInt(Message, 'partitionhash') AS partitionhash, 
visitParamExtractString(Message, 'hashcode') AS hashcode, 
visitParamExtractString(Message, 'accountnumber') AS accountnumber, 
visitParamExtractInt(Message, 'airtimeclass') AS airtimeclass, 
visitParamExtractFloat(Message, 'airtimeunits') AS airtimeunits, 
visitParamExtractString(Message, 'allocationcompletedate') AS allocationcompletedate, 
visitParamExtractString(Message, 'apn') AS apn, 
visitParamExtractString(Message, 'callednumber') AS callednumber, 
visitParamExtractString(Message, 'callingnumber') AS callingnumber, 
visitParamExtractInt(Message, 'carrierid') AS carrierid, 
visitParamExtractString(Message, 'cellid') AS cellid, 
visitParamExtractString(Message, 'chargingid') AS chargingid, 
visitParamExtractInt(Message, 'costcenterid') AS costcenterid, 
visitParamExtractInt(Message, 'downlinkvol') AS downlinkvol, 
visitParamExtractFloat(Message, 'duration') AS duration, 
visitParamExtractString(Message, 'exactusagedateonly') AS exactusagedateonly, 
visitParamExtractString(Message, 'exactusagetime') AS exactusagetime, 
visitParamExtractInt(Message, 'fileid') AS fileid, 
visitParamExtractString(Message, 'iccid') AS iccid, 
visitParamExtractString(Message, 'imei') AS imei, 
visitParamExtractString(Message, 'imsi') AS imsi, 
visitParamExtractInt(Message, 'lineid') AS lineid, 
visitParamExtractInt(Message, 'linenumber') AS linenumber, 
visitParamExtractString(Message, 'mobilecountrycode') AS mobilecountrycode, 
visitParamExtractString(Message, 'mobilenetworkcode') AS mobilenetworkcode, 
visitParamExtractBool(Message, 'mobileoriginated') AS mobileoriginated, 
visitParamExtractString(Message, 'msisdn') AS msisdn, 
visitParamExtractString(Message, 'network') AS network, 
visitParamExtractInt(Message, 'orgid') AS orgid, 
visitParamExtractString(Message, 'orgurn') AS orgurn, 
visitParamExtractString(Message, 'plmn') AS plmn, 
visitParamExtractRaw(Message, 'propertybag') AS propertybag, 
visitParamExtractString(Message, 'recordtype') AS recordtype, 
visitParamExtractString(Message, 'roamingindicator') AS roamingindicator, 
visitParamExtractString(Message, 'roundingdate') AS roundingdate, 
visitParamExtractString(Message, 'sender') AS sender, 
visitParamExtractInt(Message, 'subscriptionid') AS subscriptionid, 
visitParamExtractString(Message, 'subscriptionurn') AS subscriptionurn, 
visitParamExtractInt(Message, 'surrecordtypeid') AS surrecordtypeid, 
visitParamExtractString(Message, 'tapcode') AS tapcode, 
visitParamExtractInt(Message, 'uplinkvol') AS uplinkvol, 
visitParamExtractInt(Message, 'usagetypeid') AS usagetypeid 
FROM radius.udr 
WHERE carrierid = 18000 
LIMIT 

Results for 5000 records:
Actual rows fetched: 5000
Time to execute select: 0.87 seconds
Time to put into dataframe: 0.62 seconds
Total time: 1.49 seconds

Results for 10000 records:
Actual rows fetched: 9997
Time to execute select: 1.44 seconds
Time to put into dataframe: 0.09 seconds
Total time: 1.53 seconds

Current Query: SELECT visitParamExtractInt(Message, 'partitionhash') AS partitionhash, 
visitParamExtractString(Message, 'hashcode') AS hashcode, 
visitParamExtractString(Message, 'accountnumber') AS accountnumber, 
visitParamExtractInt(Message, 'airtimeclass') AS airtimeclass, 
visitParamExtractFloat(Message, 'airtimeunits') AS airtimeunits, 
visitParamExtractString(Message, 'allocationcompletedate') AS allocationcompletedate, 
visitParamExtractString(Message, 'apn') AS apn, 
visitParamExtractString(Message, 'callednumber') AS callednumber, 
visitParamExtractString(Message, 'callingnumber') AS callingnumber, 
visitParamExtractInt(Message, 'carrierid') AS carrierid, 
visitParamExtractString(Message, 'cellid') AS cellid, 
visitParamExtractString(Message, 'chargingid') AS chargingid, 
visitParamExtractInt(Message, 'costcenterid') AS costcenterid, 
visitParamExtractInt(Message, 'downlinkvol') AS downlinkvol, 
visitParamExtractFloat(Message, 'duration') AS duration, 
visitParamExtractString(Message, 'exactusagedateonly') AS exactusagedateonly, 
visitParamExtractString(Message, 'exactusagetime') AS exactusagetime, 
visitParamExtractInt(Message, 'fileid') AS fileid, 
visitParamExtractString(Message, 'iccid') AS iccid, 
visitParamExtractString(Message, 'imei') AS imei, 
visitParamExtractString(Message, 'imsi') AS imsi, 
visitParamExtractInt(Message, 'lineid') AS lineid, 
visitParamExtractInt(Message, 'linenumber') AS linenumber, 
visitParamExtractString(Message, 'mobilecountrycode') AS mobilecountrycode, 
visitParamExtractString(Message, 'mobilenetworkcode') AS mobilenetworkcode, 
visitParamExtractBool(Message, 'mobileoriginated') AS mobileoriginated, 
visitParamExtractString(Message, 'msisdn') AS msisdn, 
visitParamExtractString(Message, 'network') AS network, 
visitParamExtractInt(Message, 'orgid') AS orgid, 
visitParamExtractString(Message, 'orgurn') AS orgurn, 
visitParamExtractString(Message, 'plmn') AS plmn, 
visitParamExtractRaw(Message, 'propertybag') AS propertybag, 
visitParamExtractString(Message, 'recordtype') AS recordtype, 
visitParamExtractString(Message, 'roamingindicator') AS roamingindicator, 
visitParamExtractString(Message, 'roundingdate') AS roundingdate, 
visitParamExtractString(Message, 'sender') AS sender, 
visitParamExtractInt(Message, 'subscriptionid') AS subscriptionid, 
visitParamExtractString(Message, 'subscriptionurn') AS subscriptionurn, 
visitParamExtractInt(Message, 'surrecordtypeid') AS surrecordtypeid, 
visitParamExtractString(Message, 'tapcode') AS tapcode, 
visitParamExtractInt(Message, 'uplinkvol') AS uplinkvol, 
visitParamExtractInt(Message, 'usagetypeid') AS usagetypeid 
FROM radius.udr 
WHERE fileid = 278 
LIMIT 

Results for 5000 records:
Actual rows fetched: 5000
Time to execute select: 0.32 seconds
Time to put into dataframe: 0.02 seconds
Total time: 0.34 seconds

Results for 10000 records:
Actual rows fetched: 10000
Time to execute select: 0.50 seconds
Time to put into dataframe: 0.06 seconds
Total time: 0.56 seconds

Results for 100000 records:
Actual rows fetched: 100000
Time to execute select: 4.66 seconds
Time to put into dataframe: 0.69 seconds
Total time: 5.35 seconds

Results for 500000 records:
Actual rows fetched: 500000
Time to execute select: 20.55 seconds
Time to put into dataframe: 3.48 seconds
Total time: 24.04 seconds

Results for 1000000 records:
Actual rows fetched: 1000000
Time to execute select: 43.26 seconds
Time to put into dataframe: 6.96 seconds
Total time: 50.22 seconds

Current Query: SELECT visitParamExtractInt(Message, 'partitionhash') AS partitionhash, 
visitParamExtractString(Message, 'hashcode') AS hashcode, 
visitParamExtractString(Message, 'accountnumber') AS accountnumber, 
visitParamExtractInt(Message, 'airtimeclass') AS airtimeclass, 
visitParamExtractFloat(Message, 'airtimeunits') AS airtimeunits, 
visitParamExtractString(Message, 'allocationcompletedate') AS allocationcompletedate, 
visitParamExtractString(Message, 'apn') AS apn, 
visitParamExtractString(Message, 'callednumber') AS callednumber, 
visitParamExtractString(Message, 'callingnumber') AS callingnumber, 
visitParamExtractInt(Message, 'carrierid') AS carrierid, 
visitParamExtractString(Message, 'cellid') AS cellid, 
visitParamExtractString(Message, 'chargingid') AS chargingid, 
visitParamExtractInt(Message, 'costcenterid') AS costcenterid, 
visitParamExtractInt(Message, 'downlinkvol') AS downlinkvol, 
visitParamExtractFloat(Message, 'duration') AS duration, 
visitParamExtractString(Message, 'exactusagedateonly') AS exactusagedateonly, 
visitParamExtractString(Message, 'exactusagetime') AS exactusagetime, 
visitParamExtractInt(Message, 'fileid') AS fileid, 
visitParamExtractString(Message, 'iccid') AS iccid, 
visitParamExtractString(Message, 'imei') AS imei, 
visitParamExtractString(Message, 'imsi') AS imsi, 
visitParamExtractInt(Message, 'lineid') AS lineid, 
visitParamExtractInt(Message, 'linenumber') AS linenumber, 
visitParamExtractString(Message, 'mobilecountrycode') AS mobilecountrycode, 
visitParamExtractString(Message, 'mobilenetworkcode') AS mobilenetworkcode, 
visitParamExtractBool(Message, 'mobileoriginated') AS mobileoriginated, 
visitParamExtractString(Message, 'msisdn') AS msisdn, 
visitParamExtractString(Message, 'network') AS network, 
visitParamExtractInt(Message, 'orgid') AS orgid, 
visitParamExtractString(Message, 'orgurn') AS orgurn, 
visitParamExtractString(Message, 'plmn') AS plmn, 
visitParamExtractRaw(Message, 'propertybag') AS propertybag, 
visitParamExtractString(Message, 'recordtype') AS recordtype, 
visitParamExtractString(Message, 'roamingindicator') AS roamingindicator, 
visitParamExtractString(Message, 'roundingdate') AS roundingdate, 
visitParamExtractString(Message, 'sender') AS sender, 
visitParamExtractInt(Message, 'subscriptionid') AS subscriptionid, 
visitParamExtractString(Message, 'subscriptionurn') AS subscriptionurn, 
visitParamExtractInt(Message, 'surrecordtypeid') AS surrecordtypeid, 
visitParamExtractString(Message, 'tapcode') AS tapcode, 
visitParamExtractInt(Message, 'uplinkvol') AS uplinkvol, 
visitParamExtractInt(Message, 'usagetypeid') AS usagetypeid 
FROM radius.udr 
WHERE usagetypeid = 0 
LIMIT 

Results for 5000 records:
Actual rows fetched: 5000
Time to execute select: 0.82 seconds
Time to put into dataframe: 0.60 seconds
Total time: 1.42 seconds

Results for 10000 records:
Actual rows fetched: 10000
Time to execute select: 0.49 seconds
Time to put into dataframe: 0.07 seconds
Total time: 0.56 seconds

Results for 100000 records:
Actual rows fetched: 100000
Time to execute select: 4.55 seconds
Time to put into dataframe: 0.68 seconds
Total time: 5.24 seconds

Results for 500000 records:
Actual rows fetched: 500000
Time to execute select: 19.82 seconds
Time to put into dataframe: 3.50 seconds
Total time: 23.31 seconds

Results for 1000000 records:
Actual rows fetched: 1000000
Time to execute select: 39.52 seconds
Time to put into dataframe: 7.03 seconds
Total time: 46.54 seconds


Beginning Cassandra Test

Current Query: SELECT * FROM "udr" LIMIT 

Results for 5000 records:
Actual rows fetched: 5000
Time to execute select: 1.63 seconds
Time to put into dataframe: 0.04 seconds
Total time: 1.68 seconds

Results for 10000 records:
Actual rows fetched: 10000
Time to execute select: 2.71 seconds
Time to put into dataframe: 0.09 seconds
Total time: 2.80 seconds

Results for 100000 records:
Actual rows fetched: 100000
Time to execute select: 15.96 seconds
Time to put into dataframe: 1.09 seconds
Total time: 17.06 seconds

Results for 500000 records:
Actual rows fetched: 500000
Time to execute select: 90.86 seconds
Time to put into dataframe: 6.34 seconds
Total time: 97.20 seconds

Results for 1000000 records:
Actual rows fetched: 1000000
Time to execute select: 173.92 seconds
Time to put into dataframe: 14.72 seconds
Total time: 188.64 seconds

Current Query: SELECT * FROM "udr" WHERE carrierid = 18000 LIMIT 

Results for 5000 records:
Actual rows fetched: 5000
Time to execute select: 1.33 seconds
Time to put into dataframe: 3.12 seconds
Total time: 4.45 seconds

Results for 10000 records:
Actual rows fetched: 9998
Time to execute select: 2.10 seconds
Time to put into dataframe: 0.15 seconds
Total time: 2.24 seconds

Current Query: SELECT * FROM "udr" WHERE fileid = 278 LIMIT 
Coordinator Node Timeout

Current Query: SELECT * FROM "udr" WHERE usagetypeid = 0 LIMIT 
Coordinator Node Timeout
