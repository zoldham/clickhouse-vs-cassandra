2019-07-10 14:31:16.594429: Systems Information:
2019-07-10 14:31:16.594900: 
2019-07-10 14:31:16.594909: Clickhouse Instance: 192.168.5.60:9000
2019-07-10 14:31:16.595278: 
2019-07-10 14:31:16.595299: Cassandra Instance: dev-cassandra.ksg.int:9042
2019-07-10 14:31:16.595684: 
2019-07-10 14:31:16.595691: Clickhouse Table Definition:
2019-07-10 14:31:16.595691: CREATE TABLE radius.udr ( 
2019-07-10 14:31:16.595691:    CreateDate DateTime default now(), 
2019-07-10 14:31:16.595691:    Message String 
2019-07-10 14:31:16.595691: ) ENGINE = MergeTree() 
2019-07-10 14:31:16.595691: PARTITION BY toYYYYMM(CreateDate) 
2019-07-10 14:31:16.595691: ORDER BY tuple()
2019-07-10 14:31:16.597195: 
2019-07-10 14:31:16.597202: Cassandra Table Definition:
2019-07-10 14:31:16.597202: CREATE TABLE "CassandraPractice".udr_copy1 (
2019-07-10 14:31:16.597202: 	partitionhash int,
2019-07-10 14:31:16.597202: 	hashcode text,
2019-07-10 14:31:16.597202: 	accountnumber text,
2019-07-10 14:31:16.597202: 	airtimeclass int,
2019-07-10 14:31:16.597202: 	airtimeunits double,
2019-07-10 14:31:16.597202: 	allocationcompletedate text,
2019-07-10 14:31:16.597202: 	apn text,
2019-07-10 14:31:16.597202: 	callednumber text,
2019-07-10 14:31:16.597202: 	callingnumber text,
2019-07-10 14:31:16.597202: 	carrierid int,
2019-07-10 14:31:16.597202: 	cellid text,
2019-07-10 14:31:16.597202: 	chargingid text,
2019-07-10 14:31:16.597202: 	costcenterid int,
2019-07-10 14:31:16.597202: 	downlinkvol bigint,
2019-07-10 14:31:16.597202: 	duration double,
2019-07-10 14:31:16.597202: 	exactusagedateonly date,
2019-07-10 14:31:16.597202: 	exactusagetime text,
2019-07-10 14:31:16.597202: 	fileid int,
2019-07-10 14:31:16.597202: 	iccid text,
2019-07-10 14:31:16.597202: 	imei text,
2019-07-10 14:31:16.597202: 	imsi text,
2019-07-10 14:31:16.597202: 	lineid bigint,
2019-07-10 14:31:16.597202: 	linenumber int,
2019-07-10 14:31:16.597202: 	mobilecountrycode text,
2019-07-10 14:31:16.597202: 	mobilenetworkcode text,
2019-07-10 14:31:16.597202: 	mobileoriginated boolean,
2019-07-10 14:31:16.597202: 	msisdn text,
2019-07-10 14:31:16.597202: 	network text,
2019-07-10 14:31:16.597202: 	orgid int,
2019-07-10 14:31:16.597202: 	orgurn text,
2019-07-10 14:31:16.597202: 	plmn text,
2019-07-10 14:31:16.597202: 	propertybag MAP<text, text>,
2019-07-10 14:31:16.597202: 	recordtype text,
2019-07-10 14:31:16.597202: 	roamingindicator text,
2019-07-10 14:31:16.597202: 	roundingdate text,
2019-07-10 14:31:16.597202: 	sender text,
2019-07-10 14:31:16.597202: 	subscriptionid int,
2019-07-10 14:31:16.597202: 	subscriptionurn text,
2019-07-10 14:31:16.597202: 	surrecordtypeid int,
2019-07-10 14:31:16.597202: 	tapcode text,
2019-07-10 14:31:16.597202: 	uplinkvol bigint,
2019-07-10 14:31:16.597202: 	usagetypeid int,
2019-07-10 14:31:16.597202: 	PRIMARY KEY (partitionhash, hashcode)
2019-07-10 14:31:16.597202: ) WITH bloom_filter_fp_chance = 0.01
2019-07-10 14:31:16.597202: AND comment = ''
2019-07-10 14:31:16.597202: AND crc_check_chance = 1.0
2019-07-10 14:31:16.597202: AND dclocal_read_repair_chance = 0.1
2019-07-10 14:31:16.597202: AND default_time_to_live = 0
2019-07-10 14:31:16.597202: AND gc_grace_seconds = 864000
2019-07-10 14:31:16.597202: AND max_index_interval = 2048
2019-07-10 14:31:16.597202: AND memtable_flush_period_in_ms = 0
2019-07-10 14:31:16.597202: AND min_index_interval = 128
2019-07-10 14:31:16.597202: AND read_repair_chance = 0.0
2019-07-10 14:31:16.597202: AND speculative_retry = '99.0PERCENTILE'
2019-07-10 14:31:16.597202: AND caching = {
2019-07-10 14:31:16.597202: 	'keys' : 'NONE',
2019-07-10 14:31:16.597202: 	'rows_per_partition' : 'NONE'
2019-07-10 14:31:16.597202: }
2019-07-10 14:31:16.597202: AND compression = {
2019-07-10 14:31:16.597202: 	'chunk_length_in_kb' : 64,
2019-07-10 14:31:16.597202: 	'class' : 'LZ4Compressor',
2019-07-10 14:31:16.597202: 	'enabled' : true
2019-07-10 14:31:16.597202: }
2019-07-10 14:31:16.597202: AND compaction = {
2019-07-10 14:31:16.597202: 	'class' : 'SizeTieredCompactionStrategy',
2019-07-10 14:31:16.597202: 	'max_threshold' : 32,
2019-07-10 14:31:16.597202: 	'min_threshold' : 4
2019-07-10 14:31:16.597202: };
2019-07-10 14:31:16.602177: 
2019-07-10 14:31:16.602184: 
2019-07-10 14:31:16.602465: Beginning Clickhouse Test
2019-07-10 14:31:16.650371: Thread 140338980980480 starting
2019-07-10 14:31:16.651001: Thread 140338980980480 starting background query: select direction,forwarding_statusstatus,icmp_type,count(*) as connections,sum(in_pkts),avg(in_pkts),quantiles(.25,.5,.75)(in_pkts),median(in_pkts) from netflow.netflow_raw group by direction,forwarding_statusstatus,icmp_type order by connections desc limit 50
2019-07-10 14:31:17.650690: Thread 140339022989056 starting
2019-07-10 14:31:17.651081: Thread 140339022989056 starting background query: select tcp_flags,icmp_type,count(*) as connections,sum(in_pkts),avg(in_pkts),quantiles(.25,.5,.75)(in_pkts),median(in_pkts) from netflow.netflow_raw group by tcp_flags,icmp_type order by connections desc limit 50
2019-07-10 14:31:18.651724: Thread 140339031443200 starting
2019-07-10 14:31:18.652288: Thread 140339031443200 starting background query: select protocolname,ipv4_src_addr,count(*) as connections,sum(in_pkts),avg(in_pkts),quantiles(.25,.5,.75)(in_pkts),median(in_pkts) from netflow.netflow_raw group by protocolname,ipv4_src_addr order by connections desc limit 50
2019-07-10 14:31:19.652548: Thread 140338719557376 starting
2019-07-10 14:31:19.653349: Thread 140338719557376 starting background query: select dst_mask,ipv4_next_hop,in_dst_mac,count(*) as connections,sum(in_pkts),avg(in_pkts),quantiles(.25,.5,.75)(in_pkts),median(in_pkts) from netflow.netflow_raw group by dst_mask,ipv4_next_hop,in_dst_mac order by connections desc limit 50
2019-07-10 14:31:20.652485: 
2019-07-10 14:31:20.652504: Current Query: SELECT visitParamExtractInt(Message, 'partitionhash') AS partitionhash, 
2019-07-10 14:31:20.652504: visitParamExtractString(Message, 'hashcode') AS hashcode, 
2019-07-10 14:31:20.652504: visitParamExtractString(Message, 'accountnumber') AS accountnumber, 
2019-07-10 14:31:20.652504: visitParamExtractInt(Message, 'airtimeclass') AS airtimeclass, 
2019-07-10 14:31:20.652504: visitParamExtractFloat(Message, 'airtimeunits') AS airtimeunits, 
2019-07-10 14:31:20.652504: visitParamExtractString(Message, 'allocationcompletedate') AS allocationcompletedate, 
2019-07-10 14:31:20.652504: visitParamExtractString(Message, 'apn') AS apn, 
2019-07-10 14:31:20.652504: visitParamExtractString(Message, 'callednumber') AS callednumber, 
2019-07-10 14:31:20.652504: visitParamExtractString(Message, 'callingnumber') AS callingnumber, 
2019-07-10 14:31:20.652504: visitParamExtractInt(Message, 'carrierid') AS carrierid, 
2019-07-10 14:31:20.652504: visitParamExtractString(Message, 'cellid') AS cellid, 
2019-07-10 14:31:20.652504: visitParamExtractString(Message, 'chargingid') AS chargingid, 
2019-07-10 14:31:20.652504: visitParamExtractInt(Message, 'costcenterid') AS costcenterid, 
2019-07-10 14:31:20.652504: visitParamExtractInt(Message, 'downlinkvol') AS downlinkvol, 
2019-07-10 14:31:20.652504: visitParamExtractFloat(Message, 'duration') AS duration, 
2019-07-10 14:31:20.652504: visitParamExtractString(Message, 'exactusagedateonly') AS exactusagedateonly, 
2019-07-10 14:31:20.652504: visitParamExtractString(Message, 'exactusagetime') AS exactusagetime, 
2019-07-10 14:31:20.652504: visitParamExtractInt(Message, 'fileid') AS fileid, 
2019-07-10 14:31:20.652504: visitParamExtractString(Message, 'iccid') AS iccid, 
2019-07-10 14:31:20.652504: visitParamExtractString(Message, 'imei') AS imei, 
2019-07-10 14:31:20.652504: visitParamExtractString(Message, 'imsi') AS imsi, 
2019-07-10 14:31:20.652504: visitParamExtractInt(Message, 'lineid') AS lineid, 
2019-07-10 14:31:20.652504: visitParamExtractInt(Message, 'linenumber') AS linenumber, 
2019-07-10 14:31:20.652504: visitParamExtractString(Message, 'mobilecountrycode') AS mobilecountrycode, 
2019-07-10 14:31:20.652504: visitParamExtractString(Message, 'mobilenetworkcode') AS mobilenetworkcode, 
2019-07-10 14:31:20.652504: visitParamExtractBool(Message, 'mobileoriginated') AS mobileoriginated, 
2019-07-10 14:31:20.652504: visitParamExtractString(Message, 'msisdn') AS msisdn, 
2019-07-10 14:31:20.652504: visitParamExtractString(Message, 'network') AS network, 
2019-07-10 14:31:20.652504: visitParamExtractInt(Message, 'orgid') AS orgid, 
2019-07-10 14:31:20.652504: visitParamExtractString(Message, 'orgurn') AS orgurn, 
2019-07-10 14:31:20.652504: visitParamExtractString(Message, 'plmn') AS plmn, 
2019-07-10 14:31:20.652504: visitParamExtractRaw(Message, 'propertybag') AS propertybag, 
2019-07-10 14:31:20.652504: visitParamExtractString(Message, 'recordtype') AS recordtype, 
2019-07-10 14:31:20.652504: visitParamExtractString(Message, 'roamingindicator') AS roamingindicator, 
2019-07-10 14:31:20.652504: visitParamExtractString(Message, 'roundingdate') AS roundingdate, 
2019-07-10 14:31:20.652504: visitParamExtractString(Message, 'sender') AS sender, 
2019-07-10 14:31:20.652504: visitParamExtractInt(Message, 'subscriptionid') AS subscriptionid, 
2019-07-10 14:31:20.652504: visitParamExtractString(Message, 'subscriptionurn') AS subscriptionurn, 
2019-07-10 14:31:20.652504: visitParamExtractInt(Message, 'surrecordtypeid') AS surrecordtypeid, 
2019-07-10 14:31:20.652504: visitParamExtractString(Message, 'tapcode') AS tapcode, 
2019-07-10 14:31:20.652504: visitParamExtractInt(Message, 'uplinkvol') AS uplinkvol, 
2019-07-10 14:31:20.652504: visitParamExtractInt(Message, 'usagetypeid') AS usagetypeid 
2019-07-10 14:31:20.652504: FROM radius.udr 
2019-07-10 14:31:20.652504: LIMIT 
2019-07-10 14:31:20.704367: Iteration 0: 0.05
2019-07-10 14:31:20.735649: Iteration 1: 0.03
2019-07-10 14:31:20.821730: Iteration 2: 0.09
2019-07-10 14:31:20.872044: Iteration 3: 0.05
2019-07-10 14:31:20.913409: Iteration 4: 0.04
2019-07-10 14:31:20.966703: Iteration 5: 0.05
2019-07-10 14:31:20.998068: Iteration 6: 0.03
2019-07-10 14:31:21.035887: Iteration 7: 0.04
2019-07-10 14:31:21.100564: Iteration 8: 0.06
2019-07-10 14:31:21.162733: Iteration 9: 0.06
2019-07-10 14:31:21.208744: Iteration 10: 0.05
2019-07-10 14:31:21.209345: 
2019-07-10 14:31:21.209355: Results for 5 records averaged over 11 repetitions:
2019-07-10 14:31:21.209788: Actual rows fetched: 5
2019-07-10 14:31:21.209957: Time to execute select: 0.04 seconds
2019-07-10 14:31:21.210338: Time to put into dataframe: 0.01 seconds
2019-07-10 14:31:21.210550: Total time: 0.05 seconds
2019-07-10 14:31:21.240179: Iteration 0: 0.03
2019-07-10 14:31:21.312701: Iteration 1: 0.07
2019-07-10 14:31:21.338620: Iteration 2: 0.03
2019-07-10 14:31:21.392065: Iteration 3: 0.05
2019-07-10 14:31:21.418137: Iteration 4: 0.03
2019-07-10 14:31:21.474971: Iteration 5: 0.06
2019-07-10 14:31:21.523947: Iteration 6: 0.05
2019-07-10 14:31:21.564628: Iteration 7: 0.04
2019-07-10 14:31:21.604134: Iteration 8: 0.04
2019-07-10 14:31:21.671981: Iteration 9: 0.07
2019-07-10 14:31:21.722846: Iteration 10: 0.05
2019-07-10 14:31:21.723650: 
2019-07-10 14:31:21.723665: Results for 10 records averaged over 11 repetitions:
2019-07-10 14:31:21.724611: Actual rows fetched: 10
2019-07-10 14:31:21.725084: Time to execute select: 0.04 seconds
2019-07-10 14:31:21.725559: Time to put into dataframe: 0.01 seconds
2019-07-10 14:31:21.726034: Total time: 0.05 seconds
2019-07-10 14:31:21.785514: Iteration 0: 0.06
2019-07-10 14:31:21.842365: Iteration 1: 0.06
2019-07-10 14:31:21.902548: Iteration 2: 0.06
2019-07-10 14:31:21.929167: Iteration 3: 0.03
2019-07-10 14:31:21.990100: Iteration 4: 0.06
2019-07-10 14:31:22.037004: Iteration 5: 0.05
2019-07-10 14:31:22.070328: Iteration 6: 0.03
2019-07-10 14:31:22.105200: Iteration 7: 0.03
2019-07-10 14:31:22.165075: Iteration 8: 0.06
2019-07-10 14:31:22.213354: Iteration 9: 0.05
2019-07-10 14:31:22.280482: Iteration 10: 0.07
2019-07-10 14:31:22.281138: 
2019-07-10 14:31:22.281149: Results for 100 records averaged over 11 repetitions:
2019-07-10 14:31:22.281956: Actual rows fetched: 100
2019-07-10 14:31:22.282365: Time to execute select: 0.04 seconds
2019-07-10 14:31:22.282775: Time to put into dataframe: 0.01 seconds
2019-07-10 14:31:22.283181: Total time: 0.05 seconds
2019-07-10 14:31:22.334953: Iteration 0: 0.05
2019-07-10 14:31:22.402396: Iteration 1: 0.07
2019-07-10 14:31:22.455996: Iteration 2: 0.05
2019-07-10 14:31:22.532093: Iteration 3: 0.08
2019-07-10 14:31:22.575955: Iteration 4: 0.04
2019-07-10 14:31:22.630534: Iteration 5: 0.05
2019-07-10 14:31:22.696982: Iteration 6: 0.07
2019-07-10 14:31:22.763235: Iteration 7: 0.07
2019-07-10 14:31:22.831437: Iteration 8: 0.07
2019-07-10 14:31:22.887968: Iteration 9: 0.06
2019-07-10 14:31:22.966928: Iteration 10: 0.08
2019-07-10 14:31:22.967559: 
2019-07-10 14:31:22.967567: Results for 500 records averaged over 11 repetitions:
2019-07-10 14:31:22.968344: Actual rows fetched: 500
2019-07-10 14:31:22.968735: Time to execute select: 0.06 seconds
2019-07-10 14:31:22.969123: Time to put into dataframe: 0.01 seconds
2019-07-10 14:31:22.969511: Total time: 0.06 seconds
2019-07-10 14:31:23.044454: Iteration 0: 0.07
2019-07-10 14:31:23.148312: Iteration 1: 0.10
2019-07-10 14:31:23.217538: Iteration 2: 0.07
2019-07-10 14:31:23.302252: Iteration 3: 0.08
2019-07-10 14:31:23.385185: Iteration 4: 0.08
2019-07-10 14:31:23.450661: Iteration 5: 0.06
2019-07-10 14:31:23.543977: Iteration 6: 0.09
2019-07-10 14:31:23.638020: Iteration 7: 0.09
2019-07-10 14:31:23.719193: Iteration 8: 0.08
2019-07-10 14:31:23.801935: Iteration 9: 0.08
2019-07-10 14:31:23.881718: Iteration 10: 0.08
2019-07-10 14:31:23.882367: 
2019-07-10 14:31:23.882379: Results for 1000 records averaged over 11 repetitions:
2019-07-10 14:31:23.883150: Actual rows fetched: 1000
2019-07-10 14:31:23.883543: Time to execute select: 0.07 seconds
2019-07-10 14:31:23.883938: Time to put into dataframe: 0.01 seconds
2019-07-10 14:31:23.884204: Total time: 0.08 seconds
2019-07-10 14:31:23.884612: 
2019-07-10 14:31:23.884620: Current Query: SELECT visitParamExtractInt(Message, 'partitionhash') AS partitionhash, 
2019-07-10 14:31:23.884620: visitParamExtractString(Message, 'hashcode') AS hashcode, 
2019-07-10 14:31:23.884620: visitParamExtractString(Message, 'accountnumber') AS accountnumber, 
2019-07-10 14:31:23.884620: visitParamExtractInt(Message, 'airtimeclass') AS airtimeclass, 
2019-07-10 14:31:23.884620: visitParamExtractFloat(Message, 'airtimeunits') AS airtimeunits, 
2019-07-10 14:31:23.884620: visitParamExtractString(Message, 'allocationcompletedate') AS allocationcompletedate, 
2019-07-10 14:31:23.884620: visitParamExtractString(Message, 'apn') AS apn, 
2019-07-10 14:31:23.884620: visitParamExtractString(Message, 'callednumber') AS callednumber, 
2019-07-10 14:31:23.884620: visitParamExtractString(Message, 'callingnumber') AS callingnumber, 
2019-07-10 14:31:23.884620: visitParamExtractInt(Message, 'carrierid') AS carrierid, 
2019-07-10 14:31:23.884620: visitParamExtractString(Message, 'cellid') AS cellid, 
2019-07-10 14:31:23.884620: visitParamExtractString(Message, 'chargingid') AS chargingid, 
2019-07-10 14:31:23.884620: visitParamExtractInt(Message, 'costcenterid') AS costcenterid, 
2019-07-10 14:31:23.884620: visitParamExtractInt(Message, 'downlinkvol') AS downlinkvol, 
2019-07-10 14:31:23.884620: visitParamExtractFloat(Message, 'duration') AS duration, 
2019-07-10 14:31:23.884620: visitParamExtractString(Message, 'exactusagedateonly') AS exactusagedateonly, 
2019-07-10 14:31:23.884620: visitParamExtractString(Message, 'exactusagetime') AS exactusagetime, 
2019-07-10 14:31:23.884620: visitParamExtractInt(Message, 'fileid') AS fileid, 
2019-07-10 14:31:23.884620: visitParamExtractString(Message, 'iccid') AS iccid, 
2019-07-10 14:31:23.884620: visitParamExtractString(Message, 'imei') AS imei, 
2019-07-10 14:31:23.884620: visitParamExtractString(Message, 'imsi') AS imsi, 
2019-07-10 14:31:23.884620: visitParamExtractInt(Message, 'lineid') AS lineid, 
2019-07-10 14:31:23.884620: visitParamExtractInt(Message, 'linenumber') AS linenumber, 
2019-07-10 14:31:23.884620: visitParamExtractString(Message, 'mobilecountrycode') AS mobilecountrycode, 
2019-07-10 14:31:23.884620: visitParamExtractString(Message, 'mobilenetworkcode') AS mobilenetworkcode, 
2019-07-10 14:31:23.884620: visitParamExtractBool(Message, 'mobileoriginated') AS mobileoriginated, 
2019-07-10 14:31:23.884620: visitParamExtractString(Message, 'msisdn') AS msisdn, 
2019-07-10 14:31:23.884620: visitParamExtractString(Message, 'network') AS network, 
2019-07-10 14:31:23.884620: visitParamExtractInt(Message, 'orgid') AS orgid, 
2019-07-10 14:31:23.884620: visitParamExtractString(Message, 'orgurn') AS orgurn, 
2019-07-10 14:31:23.884620: visitParamExtractString(Message, 'plmn') AS plmn, 
2019-07-10 14:31:23.884620: visitParamExtractRaw(Message, 'propertybag') AS propertybag, 
2019-07-10 14:31:23.884620: visitParamExtractString(Message, 'recordtype') AS recordtype, 
2019-07-10 14:31:23.884620: visitParamExtractString(Message, 'roamingindicator') AS roamingindicator, 
2019-07-10 14:31:23.884620: visitParamExtractString(Message, 'roundingdate') AS roundingdate, 
2019-07-10 14:31:23.884620: visitParamExtractString(Message, 'sender') AS sender, 
2019-07-10 14:31:23.884620: visitParamExtractInt(Message, 'subscriptionid') AS subscriptionid, 
2019-07-10 14:31:23.884620: visitParamExtractString(Message, 'subscriptionurn') AS subscriptionurn, 
2019-07-10 14:31:23.884620: visitParamExtractInt(Message, 'surrecordtypeid') AS surrecordtypeid, 
2019-07-10 14:31:23.884620: visitParamExtractString(Message, 'tapcode') AS tapcode, 
2019-07-10 14:31:23.884620: visitParamExtractInt(Message, 'uplinkvol') AS uplinkvol, 
2019-07-10 14:31:23.884620: visitParamExtractInt(Message, 'usagetypeid') AS usagetypeid 
2019-07-10 14:31:23.884620: FROM radius.udr 
2019-07-10 14:31:23.884620: WHERE partitionhash = -1 
2019-07-10 14:31:23.884620: LIMIT 
2019-07-10 14:31:25.690790: Iteration 0: 1.80
2019-07-10 14:31:27.489588: Iteration 1: 1.80
2019-07-10 14:31:29.257908: Iteration 2: 1.77
2019-07-10 14:31:31.137635: Iteration 3: 1.88
2019-07-10 14:31:32.988162: Iteration 4: 1.85
2019-07-10 14:31:34.693208: Iteration 5: 1.70
2019-07-10 14:31:36.494909: Iteration 6: 1.80
2019-07-10 14:31:38.276354: Iteration 7: 1.78
2019-07-10 14:31:40.067805: Iteration 8: 1.79
2019-07-10 14:31:41.810571: Iteration 9: 1.74
2019-07-10 14:31:43.595597: Iteration 10: 1.78
2019-07-10 14:31:43.596671: 
2019-07-10 14:31:43.596694: Results for 5 records averaged over 11 repetitions:
2019-07-10 14:31:43.597933: Actual rows fetched: 0
2019-07-10 14:31:43.598567: Time to execute select: 1.79 seconds
2019-07-10 14:31:43.599198: Time to put into dataframe: 0.00 seconds
2019-07-10 14:31:43.599849: Total time: 1.79 seconds
2019-07-10 14:31:43.600501: 
2019-07-10 14:31:43.600526: Current Query: SELECT visitParamExtractInt(Message, 'partitionhash') AS partitionhash, 
2019-07-10 14:31:43.600526: visitParamExtractString(Message, 'hashcode') AS hashcode, 
2019-07-10 14:31:43.600526: visitParamExtractString(Message, 'accountnumber') AS accountnumber, 
2019-07-10 14:31:43.600526: visitParamExtractInt(Message, 'airtimeclass') AS airtimeclass, 
2019-07-10 14:31:43.600526: visitParamExtractFloat(Message, 'airtimeunits') AS airtimeunits, 
2019-07-10 14:31:43.600526: visitParamExtractString(Message, 'allocationcompletedate') AS allocationcompletedate, 
2019-07-10 14:31:43.600526: visitParamExtractString(Message, 'apn') AS apn, 
2019-07-10 14:31:43.600526: visitParamExtractString(Message, 'callednumber') AS callednumber, 
2019-07-10 14:31:43.600526: visitParamExtractString(Message, 'callingnumber') AS callingnumber, 
2019-07-10 14:31:43.600526: visitParamExtractInt(Message, 'carrierid') AS carrierid, 
2019-07-10 14:31:43.600526: visitParamExtractString(Message, 'cellid') AS cellid, 
2019-07-10 14:31:43.600526: visitParamExtractString(Message, 'chargingid') AS chargingid, 
2019-07-10 14:31:43.600526: visitParamExtractInt(Message, 'costcenterid') AS costcenterid, 
2019-07-10 14:31:43.600526: visitParamExtractInt(Message, 'downlinkvol') AS downlinkvol, 
2019-07-10 14:31:43.600526: visitParamExtractFloat(Message, 'duration') AS duration, 
2019-07-10 14:31:43.600526: visitParamExtractString(Message, 'exactusagedateonly') AS exactusagedateonly, 
2019-07-10 14:31:43.600526: visitParamExtractString(Message, 'exactusagetime') AS exactusagetime, 
2019-07-10 14:31:43.600526: visitParamExtractInt(Message, 'fileid') AS fileid, 
2019-07-10 14:31:43.600526: visitParamExtractString(Message, 'iccid') AS iccid, 
2019-07-10 14:31:43.600526: visitParamExtractString(Message, 'imei') AS imei, 
2019-07-10 14:31:43.600526: visitParamExtractString(Message, 'imsi') AS imsi, 
2019-07-10 14:31:43.600526: visitParamExtractInt(Message, 'lineid') AS lineid, 
2019-07-10 14:31:43.600526: visitParamExtractInt(Message, 'linenumber') AS linenumber, 
2019-07-10 14:31:43.600526: visitParamExtractString(Message, 'mobilecountrycode') AS mobilecountrycode, 
2019-07-10 14:31:43.600526: visitParamExtractString(Message, 'mobilenetworkcode') AS mobilenetworkcode, 
2019-07-10 14:31:43.600526: visitParamExtractBool(Message, 'mobileoriginated') AS mobileoriginated, 
2019-07-10 14:31:43.600526: visitParamExtractString(Message, 'msisdn') AS msisdn, 
2019-07-10 14:31:43.600526: visitParamExtractString(Message, 'network') AS network, 
2019-07-10 14:31:43.600526: visitParamExtractInt(Message, 'orgid') AS orgid, 
2019-07-10 14:31:43.600526: visitParamExtractString(Message, 'orgurn') AS orgurn, 
2019-07-10 14:31:43.600526: visitParamExtractString(Message, 'plmn') AS plmn, 
2019-07-10 14:31:43.600526: visitParamExtractRaw(Message, 'propertybag') AS propertybag, 
2019-07-10 14:31:43.600526: visitParamExtractString(Message, 'recordtype') AS recordtype, 
2019-07-10 14:31:43.600526: visitParamExtractString(Message, 'roamingindicator') AS roamingindicator, 
2019-07-10 14:31:43.600526: visitParamExtractString(Message, 'roundingdate') AS roundingdate, 
2019-07-10 14:31:43.600526: visitParamExtractString(Message, 'sender') AS sender, 
2019-07-10 14:31:43.600526: visitParamExtractInt(Message, 'subscriptionid') AS subscriptionid, 
2019-07-10 14:31:43.600526: visitParamExtractString(Message, 'subscriptionurn') AS subscriptionurn, 
2019-07-10 14:31:43.600526: visitParamExtractInt(Message, 'surrecordtypeid') AS surrecordtypeid, 
2019-07-10 14:31:43.600526: visitParamExtractString(Message, 'tapcode') AS tapcode, 
2019-07-10 14:31:43.600526: visitParamExtractInt(Message, 'uplinkvol') AS uplinkvol, 
2019-07-10 14:31:43.600526: visitParamExtractInt(Message, 'usagetypeid') AS usagetypeid 
2019-07-10 14:31:43.600526: FROM radius.udr 
2019-07-10 14:31:43.600526: WHERE carrierid = 18000 
2019-07-10 14:31:43.600526: LIMIT 
2019-07-10 14:31:43.815639: Iteration 0: 0.20
2019-07-10 14:31:43.941680: Iteration 1: 0.13
2019-07-10 14:31:44.033857: Iteration 2: 0.09
2019-07-10 14:31:44.169869: Iteration 3: 0.14
2019-07-10 14:31:44.303639: Iteration 4: 0.13
2019-07-10 14:31:44.408659: Iteration 5: 0.10
2019-07-10 14:31:44.563172: Iteration 6: 0.15
2019-07-10 14:31:44.646785: Iteration 7: 0.08
2019-07-10 14:31:44.784102: Iteration 8: 0.14
2019-07-10 14:31:44.974132: Iteration 9: 0.19
2019-07-10 14:31:45.050526: Iteration 10: 0.08
2019-07-10 14:31:45.051536: 
2019-07-10 14:31:45.051558: Results for 5 records averaged over 11 repetitions:
2019-07-10 14:31:45.052632: Actual rows fetched: 5
2019-07-10 14:31:45.053166: Time to execute select: 0.12 seconds
2019-07-10 14:31:45.053780: Time to put into dataframe: 0.01 seconds
2019-07-10 14:31:45.054380: Total time: 0.13 seconds
2019-07-10 14:31:45.241997: Iteration 0: 0.19
2019-07-10 14:31:45.400106: Iteration 1: 0.16
2019-07-10 14:31:45.478161: Iteration 2: 0.08
2019-07-10 14:31:45.624769: Iteration 3: 0.15
2019-07-10 14:31:45.742828: Iteration 4: 0.12
2019-07-10 14:31:46.026471: Iteration 5: 0.28
2019-07-10 14:31:46.137696: Iteration 6: 0.11
2019-07-10 14:31:46.226606: Iteration 7: 0.09
2019-07-10 14:31:46.358441: Iteration 8: 0.13
2019-07-10 14:31:46.447429: Iteration 9: 0.09
2019-07-10 14:31:46.520684: Iteration 10: 0.07
2019-07-10 14:31:46.521626: 
2019-07-10 14:31:46.521646: Results for 10 records averaged over 11 repetitions:
2019-07-10 14:31:46.522769: Actual rows fetched: 10
2019-07-10 14:31:46.523283: Time to execute select: 0.12 seconds
2019-07-10 14:31:46.523718: Time to put into dataframe: 0.01 seconds
2019-07-10 14:31:46.524222: Total time: 0.13 seconds
2019-07-10 14:31:46.625043: Iteration 0: 0.10
2019-07-10 14:31:46.724081: Iteration 1: 0.10
2019-07-10 14:31:46.861938: Iteration 2: 0.14
2019-07-10 14:31:46.963752: Iteration 3: 0.10
2019-07-10 14:31:47.091192: Iteration 4: 0.13
2019-07-10 14:31:47.252406: Iteration 5: 0.16
2019-07-10 14:31:47.353243: Iteration 6: 0.10
2019-07-10 14:31:47.505616: Iteration 7: 0.15
2019-07-10 14:31:47.611002: Iteration 8: 0.10
2019-07-10 14:31:47.723878: Iteration 9: 0.11
2019-07-10 14:31:47.921360: Iteration 10: 0.20
2019-07-10 14:31:47.922190: 
2019-07-10 14:31:47.922208: Results for 100 records averaged over 11 repetitions:
2019-07-10 14:31:47.923267: Actual rows fetched: 100
2019-07-10 14:31:47.923803: Time to execute select: 0.12 seconds
2019-07-10 14:31:47.924219: Time to put into dataframe: 0.01 seconds
2019-07-10 14:31:47.924783: Total time: 0.13 seconds
2019-07-10 14:31:48.025474: Iteration 0: 0.10
2019-07-10 14:31:48.118956: Iteration 1: 0.09
2019-07-10 14:31:48.239444: Iteration 2: 0.12
2019-07-10 14:31:48.376807: Iteration 3: 0.14
2019-07-10 14:31:48.508043: Iteration 4: 0.13
2019-07-10 14:31:48.641078: Iteration 5: 0.13
2019-07-10 14:31:48.726715: Iteration 6: 0.09
2019-07-10 14:31:48.936504: Iteration 7: 0.21
2019-07-10 14:31:49.074524: Iteration 8: 0.14
2019-07-10 14:31:49.213778: Iteration 9: 0.14
2019-07-10 14:31:49.390157: Iteration 10: 0.18
2019-07-10 14:31:49.390751: 
2019-07-10 14:31:49.390764: Results for 500 records averaged over 11 repetitions:
2019-07-10 14:31:49.391585: Actual rows fetched: 500
2019-07-10 14:31:49.392083: Time to execute select: 0.13 seconds
2019-07-10 14:31:49.392481: Time to put into dataframe: 0.01 seconds
2019-07-10 14:31:49.392872: Total time: 0.13 seconds
2019-07-10 14:31:49.560005: Iteration 0: 0.17
2019-07-10 14:31:49.691925: Iteration 1: 0.13
2019-07-10 14:31:49.881107: Iteration 2: 0.19
2019-07-10 14:31:50.145077: Iteration 3: 0.26
2019-07-10 14:31:50.336173: Iteration 4: 0.19
2019-07-10 14:31:50.523303: Iteration 5: 0.19
2019-07-10 14:31:50.767642: Iteration 6: 0.24
2019-07-10 14:31:50.871898: Iteration 7: 0.10
2019-07-10 14:31:51.055226: Iteration 8: 0.18
2019-07-10 14:31:51.238011: Iteration 9: 0.18
2019-07-10 14:31:51.450168: Iteration 10: 0.21
2019-07-10 14:31:51.450634: 
2019-07-10 14:31:51.450642: Results for 1000 records averaged over 11 repetitions:
2019-07-10 14:31:51.451044: Actual rows fetched: 1000
2019-07-10 14:31:51.451250: Time to execute select: 0.17 seconds
2019-07-10 14:31:51.451456: Time to put into dataframe: 0.01 seconds
2019-07-10 14:31:51.451691: Total time: 0.19 seconds
2019-07-10 14:31:51.451882: 
2019-07-10 14:31:51.451889: Current Query: SELECT visitParamExtractInt(Message, 'partitionhash') AS partitionhash, 
2019-07-10 14:31:51.451889: visitParamExtractString(Message, 'hashcode') AS hashcode, 
2019-07-10 14:31:51.451889: visitParamExtractString(Message, 'accountnumber') AS accountnumber, 
2019-07-10 14:31:51.451889: visitParamExtractInt(Message, 'airtimeclass') AS airtimeclass, 
2019-07-10 14:31:51.451889: visitParamExtractFloat(Message, 'airtimeunits') AS airtimeunits, 
2019-07-10 14:31:51.451889: visitParamExtractString(Message, 'allocationcompletedate') AS allocationcompletedate, 
2019-07-10 14:31:51.451889: visitParamExtractString(Message, 'apn') AS apn, 
2019-07-10 14:31:51.451889: visitParamExtractString(Message, 'callednumber') AS callednumber, 
2019-07-10 14:31:51.451889: visitParamExtractString(Message, 'callingnumber') AS callingnumber, 
2019-07-10 14:31:51.451889: visitParamExtractInt(Message, 'carrierid') AS carrierid, 
2019-07-10 14:31:51.451889: visitParamExtractString(Message, 'cellid') AS cellid, 
2019-07-10 14:31:51.451889: visitParamExtractString(Message, 'chargingid') AS chargingid, 
2019-07-10 14:31:51.451889: visitParamExtractInt(Message, 'costcenterid') AS costcenterid, 
2019-07-10 14:31:51.451889: visitParamExtractInt(Message, 'downlinkvol') AS downlinkvol, 
2019-07-10 14:31:51.451889: visitParamExtractFloat(Message, 'duration') AS duration, 
2019-07-10 14:31:51.451889: visitParamExtractString(Message, 'exactusagedateonly') AS exactusagedateonly, 
2019-07-10 14:31:51.451889: visitParamExtractString(Message, 'exactusagetime') AS exactusagetime, 
2019-07-10 14:31:51.451889: visitParamExtractInt(Message, 'fileid') AS fileid, 
2019-07-10 14:31:51.451889: visitParamExtractString(Message, 'iccid') AS iccid, 
2019-07-10 14:31:51.451889: visitParamExtractString(Message, 'imei') AS imei, 
2019-07-10 14:31:51.451889: visitParamExtractString(Message, 'imsi') AS imsi, 
2019-07-10 14:31:51.451889: visitParamExtractInt(Message, 'lineid') AS lineid, 
2019-07-10 14:31:51.451889: visitParamExtractInt(Message, 'linenumber') AS linenumber, 
2019-07-10 14:31:51.451889: visitParamExtractString(Message, 'mobilecountrycode') AS mobilecountrycode, 
2019-07-10 14:31:51.451889: visitParamExtractString(Message, 'mobilenetworkcode') AS mobilenetworkcode, 
2019-07-10 14:31:51.451889: visitParamExtractBool(Message, 'mobileoriginated') AS mobileoriginated, 
2019-07-10 14:31:51.451889: visitParamExtractString(Message, 'msisdn') AS msisdn, 
2019-07-10 14:31:51.451889: visitParamExtractString(Message, 'network') AS network, 
2019-07-10 14:31:51.451889: visitParamExtractInt(Message, 'orgid') AS orgid, 
2019-07-10 14:31:51.451889: visitParamExtractString(Message, 'orgurn') AS orgurn, 
2019-07-10 14:31:51.451889: visitParamExtractString(Message, 'plmn') AS plmn, 
2019-07-10 14:31:51.451889: visitParamExtractRaw(Message, 'propertybag') AS propertybag, 
2019-07-10 14:31:51.451889: visitParamExtractString(Message, 'recordtype') AS recordtype, 
2019-07-10 14:31:51.451889: visitParamExtractString(Message, 'roamingindicator') AS roamingindicator, 
2019-07-10 14:31:51.451889: visitParamExtractString(Message, 'roundingdate') AS roundingdate, 
2019-07-10 14:31:51.451889: visitParamExtractString(Message, 'sender') AS sender, 
2019-07-10 14:31:51.451889: visitParamExtractInt(Message, 'subscriptionid') AS subscriptionid, 
2019-07-10 14:31:51.451889: visitParamExtractString(Message, 'subscriptionurn') AS subscriptionurn, 
2019-07-10 14:31:51.451889: visitParamExtractInt(Message, 'surrecordtypeid') AS surrecordtypeid, 
2019-07-10 14:31:51.451889: visitParamExtractString(Message, 'tapcode') AS tapcode, 
2019-07-10 14:31:51.451889: visitParamExtractInt(Message, 'uplinkvol') AS uplinkvol, 
2019-07-10 14:31:51.451889: visitParamExtractInt(Message, 'usagetypeid') AS usagetypeid 
2019-07-10 14:31:51.451889: FROM radius.udr 
2019-07-10 14:31:51.451889: WHERE fileid = 278 
2019-07-10 14:31:51.451889: LIMIT 
2019-07-10 14:31:51.697904: Iteration 0: 0.24
2019-07-10 14:31:51.991628: Iteration 1: 0.29
2019-07-10 14:31:52.200039: Iteration 2: 0.21
2019-07-10 14:31:52.366692: Iteration 3: 0.17
2019-07-10 14:31:52.640327: Iteration 4: 0.27
2019-07-10 14:31:52.796004: Iteration 5: 0.16
2019-07-10 14:31:52.957842: Iteration 6: 0.16
2019-07-10 14:31:53.126624: Iteration 7: 0.17
2019-07-10 14:31:53.352383: Iteration 8: 0.22
2019-07-10 14:31:53.557577: Iteration 9: 0.20
2019-07-10 14:31:53.769143: Iteration 10: 0.21
2019-07-10 14:31:53.770169: 
2019-07-10 14:31:53.770194: Results for 5 records averaged over 11 repetitions:
2019-07-10 14:31:53.771124: Actual rows fetched: 5
2019-07-10 14:31:53.771692: Time to execute select: 0.20 seconds
2019-07-10 14:31:53.772205: Time to put into dataframe: 0.01 seconds
2019-07-10 14:31:53.772713: Total time: 0.21 seconds
2019-07-10 14:31:53.968688: Iteration 0: 0.20
2019-07-10 14:31:54.201259: Iteration 1: 0.23
2019-07-10 14:31:54.466245: Iteration 2: 0.26
2019-07-10 14:31:54.667242: Iteration 3: 0.20
2019-07-10 14:31:54.862592: Iteration 4: 0.19
2019-07-10 14:31:55.051101: Iteration 5: 0.19
2019-07-10 14:31:55.296877: Iteration 6: 0.24
2019-07-10 14:31:55.529752: Iteration 7: 0.23
2019-07-10 14:31:55.756397: Iteration 8: 0.23
2019-07-10 14:31:55.977165: Iteration 9: 0.22
2019-07-10 14:31:56.203242: Iteration 10: 0.22
2019-07-10 14:31:56.204262: 
2019-07-10 14:31:56.204286: Results for 10 records averaged over 11 repetitions:
2019-07-10 14:31:56.205270: Actual rows fetched: 10
2019-07-10 14:31:56.205777: Time to execute select: 0.21 seconds
2019-07-10 14:31:56.206325: Time to put into dataframe: 0.01 seconds
2019-07-10 14:31:56.206955: Total time: 0.22 seconds
2019-07-10 14:31:56.401460: Iteration 0: 0.19
2019-07-10 14:31:56.636710: Iteration 1: 0.23
2019-07-10 14:31:56.843908: Iteration 2: 0.21
2019-07-10 14:31:57.044247: Iteration 3: 0.20
2019-07-10 14:31:57.304435: Iteration 4: 0.26
2019-07-10 14:31:57.500546: Iteration 5: 0.20
2019-07-10 14:31:57.688136: Iteration 6: 0.19
2019-07-10 14:31:57.869412: Iteration 7: 0.18
2019-07-10 14:31:58.167966: Iteration 8: 0.30
2019-07-10 14:31:58.378366: Iteration 9: 0.21
2019-07-10 14:31:58.609176: Iteration 10: 0.23
2019-07-10 14:31:58.610201: 
2019-07-10 14:31:58.610225: Results for 100 records averaged over 11 repetitions:
2019-07-10 14:31:58.611213: Actual rows fetched: 100
2019-07-10 14:31:58.611720: Time to execute select: 0.21 seconds
2019-07-10 14:31:58.612231: Time to put into dataframe: 0.01 seconds
2019-07-10 14:31:58.612644: Total time: 0.22 seconds
2019-07-10 14:31:58.829062: Iteration 0: 0.22
2019-07-10 14:31:59.028097: Iteration 1: 0.20
2019-07-10 14:31:59.196895: Iteration 2: 0.17
2019-07-10 14:31:59.405468: Iteration 3: 0.21
2019-07-10 14:31:59.648741: Iteration 4: 0.24
2019-07-10 14:31:59.870676: Iteration 5: 0.22
2019-07-10 14:32:00.061037: Iteration 6: 0.19
2019-07-10 14:32:00.286025: Iteration 7: 0.22
2019-07-10 14:32:00.487749: Iteration 8: 0.20
2019-07-10 14:32:00.734959: Iteration 9: 0.25
2019-07-10 14:32:00.943334: Iteration 10: 0.21
2019-07-10 14:32:00.943807: 
2019-07-10 14:32:00.943815: Results for 500 records averaged over 11 repetitions:
2019-07-10 14:32:00.944222: Actual rows fetched: 500
2019-07-10 14:32:00.944441: Time to execute select: 0.20 seconds
2019-07-10 14:32:00.944646: Time to put into dataframe: 0.01 seconds
2019-07-10 14:32:00.944856: Total time: 0.21 seconds
2019-07-10 14:32:01.144867: Iteration 0: 0.20
2019-07-10 14:32:01.320096: Iteration 1: 0.17
2019-07-10 14:32:01.501048: Iteration 2: 0.18
2019-07-10 14:32:01.730390: Iteration 3: 0.23
2019-07-10 14:32:01.911195: Iteration 4: 0.18
2019-07-10 14:32:02.084848: Iteration 5: 0.17
2019-07-10 14:32:02.265921: Iteration 6: 0.18
2019-07-10 14:32:02.497051: Iteration 7: 0.23
2019-07-10 14:32:02.758765: Iteration 8: 0.26
2019-07-10 14:32:02.954496: Iteration 9: 0.20
2019-07-10 14:32:03.266248: Iteration 10: 0.31
2019-07-10 14:32:03.266693: 
2019-07-10 14:32:03.266701: Results for 1000 records averaged over 11 repetitions:
2019-07-10 14:32:03.267001: Actual rows fetched: 1000
2019-07-10 14:32:03.267145: Time to execute select: 0.20 seconds
2019-07-10 14:32:03.267303: Time to put into dataframe: 0.01 seconds
2019-07-10 14:32:03.267443: Total time: 0.21 seconds
2019-07-10 14:32:03.267597: 
2019-07-10 14:32:03.267603: Current Query: SELECT visitParamExtractInt(Message, 'partitionhash') AS partitionhash, 
2019-07-10 14:32:03.267603: visitParamExtractString(Message, 'hashcode') AS hashcode, 
2019-07-10 14:32:03.267603: visitParamExtractString(Message, 'accountnumber') AS accountnumber, 
2019-07-10 14:32:03.267603: visitParamExtractInt(Message, 'airtimeclass') AS airtimeclass, 
2019-07-10 14:32:03.267603: visitParamExtractFloat(Message, 'airtimeunits') AS airtimeunits, 
2019-07-10 14:32:03.267603: visitParamExtractString(Message, 'allocationcompletedate') AS allocationcompletedate, 
2019-07-10 14:32:03.267603: visitParamExtractString(Message, 'apn') AS apn, 
2019-07-10 14:32:03.267603: visitParamExtractString(Message, 'callednumber') AS callednumber, 
2019-07-10 14:32:03.267603: visitParamExtractString(Message, 'callingnumber') AS callingnumber, 
2019-07-10 14:32:03.267603: visitParamExtractInt(Message, 'carrierid') AS carrierid, 
2019-07-10 14:32:03.267603: visitParamExtractString(Message, 'cellid') AS cellid, 
2019-07-10 14:32:03.267603: visitParamExtractString(Message, 'chargingid') AS chargingid, 
2019-07-10 14:32:03.267603: visitParamExtractInt(Message, 'costcenterid') AS costcenterid, 
2019-07-10 14:32:03.267603: visitParamExtractInt(Message, 'downlinkvol') AS downlinkvol, 
2019-07-10 14:32:03.267603: visitParamExtractFloat(Message, 'duration') AS duration, 
2019-07-10 14:32:03.267603: visitParamExtractString(Message, 'exactusagedateonly') AS exactusagedateonly, 
2019-07-10 14:32:03.267603: visitParamExtractString(Message, 'exactusagetime') AS exactusagetime, 
2019-07-10 14:32:03.267603: visitParamExtractInt(Message, 'fileid') AS fileid, 
2019-07-10 14:32:03.267603: visitParamExtractString(Message, 'iccid') AS iccid, 
2019-07-10 14:32:03.267603: visitParamExtractString(Message, 'imei') AS imei, 
2019-07-10 14:32:03.267603: visitParamExtractString(Message, 'imsi') AS imsi, 
2019-07-10 14:32:03.267603: visitParamExtractInt(Message, 'lineid') AS lineid, 
2019-07-10 14:32:03.267603: visitParamExtractInt(Message, 'linenumber') AS linenumber, 
2019-07-10 14:32:03.267603: visitParamExtractString(Message, 'mobilecountrycode') AS mobilecountrycode, 
2019-07-10 14:32:03.267603: visitParamExtractString(Message, 'mobilenetworkcode') AS mobilenetworkcode, 
2019-07-10 14:32:03.267603: visitParamExtractBool(Message, 'mobileoriginated') AS mobileoriginated, 
2019-07-10 14:32:03.267603: visitParamExtractString(Message, 'msisdn') AS msisdn, 
2019-07-10 14:32:03.267603: visitParamExtractString(Message, 'network') AS network, 
2019-07-10 14:32:03.267603: visitParamExtractInt(Message, 'orgid') AS orgid, 
2019-07-10 14:32:03.267603: visitParamExtractString(Message, 'orgurn') AS orgurn, 
2019-07-10 14:32:03.267603: visitParamExtractString(Message, 'plmn') AS plmn, 
2019-07-10 14:32:03.267603: visitParamExtractRaw(Message, 'propertybag') AS propertybag, 
2019-07-10 14:32:03.267603: visitParamExtractString(Message, 'recordtype') AS recordtype, 
2019-07-10 14:32:03.267603: visitParamExtractString(Message, 'roamingindicator') AS roamingindicator, 
2019-07-10 14:32:03.267603: visitParamExtractString(Message, 'roundingdate') AS roundingdate, 
2019-07-10 14:32:03.267603: visitParamExtractString(Message, 'sender') AS sender, 
2019-07-10 14:32:03.267603: visitParamExtractInt(Message, 'subscriptionid') AS subscriptionid, 
2019-07-10 14:32:03.267603: visitParamExtractString(Message, 'subscriptionurn') AS subscriptionurn, 
2019-07-10 14:32:03.267603: visitParamExtractInt(Message, 'surrecordtypeid') AS surrecordtypeid, 
2019-07-10 14:32:03.267603: visitParamExtractString(Message, 'tapcode') AS tapcode, 
2019-07-10 14:32:03.267603: visitParamExtractInt(Message, 'uplinkvol') AS uplinkvol, 
2019-07-10 14:32:03.267603: visitParamExtractInt(Message, 'usagetypeid') AS usagetypeid 
2019-07-10 14:32:03.267603: FROM radius.udr 
2019-07-10 14:32:03.267603: WHERE usagetypeid = 0 
2019-07-10 14:32:03.267603: LIMIT 
2019-07-10 14:32:03.417459: Iteration 0: 0.15
2019-07-10 14:32:03.629803: Iteration 1: 0.21
2019-07-10 14:32:03.847023: Iteration 2: 0.22
2019-07-10 14:32:04.038703: Iteration 3: 0.19
2019-07-10 14:32:04.235723: Iteration 4: 0.20
2019-07-10 14:32:04.443533: Iteration 5: 0.21
2019-07-10 14:32:04.612558: Iteration 6: 0.17
2019-07-10 14:32:04.804974: Iteration 7: 0.19
2019-07-10 14:32:04.997650: Iteration 8: 0.19
2019-07-10 14:32:05.196574: Iteration 9: 0.20
2019-07-10 14:32:05.390732: Iteration 10: 0.19
2019-07-10 14:32:05.391805: 
2019-07-10 14:32:05.391829: Results for 5 records averaged over 11 repetitions:
2019-07-10 14:32:05.392813: Actual rows fetched: 5
2019-07-10 14:32:05.393360: Time to execute select: 0.18 seconds
2019-07-10 14:32:05.393866: Time to put into dataframe: 0.01 seconds
2019-07-10 14:32:05.394370: Total time: 0.19 seconds
2019-07-10 14:32:05.638611: Iteration 0: 0.24
2019-07-10 14:32:05.839456: Iteration 1: 0.20
2019-07-10 14:32:06.063940: Iteration 2: 0.22
2019-07-10 14:32:06.283168: Iteration 3: 0.22
2019-07-10 14:32:06.486403: Iteration 4: 0.20
2019-07-10 14:32:06.698189: Iteration 5: 0.21
2019-07-10 14:32:06.856205: Iteration 6: 0.16
2019-07-10 14:32:07.020132: Iteration 7: 0.16
2019-07-10 14:32:07.187603: Iteration 8: 0.17
2019-07-10 14:32:07.367889: Iteration 9: 0.18
2019-07-10 14:32:07.544685: Iteration 10: 0.18
2019-07-10 14:32:07.545679: 
2019-07-10 14:32:07.545703: Results for 10 records averaged over 11 repetitions:
2019-07-10 14:32:07.546688: Actual rows fetched: 10
2019-07-10 14:32:07.547197: Time to execute select: 0.18 seconds
2019-07-10 14:32:07.547713: Time to put into dataframe: 0.01 seconds
2019-07-10 14:32:07.548152: Total time: 0.19 seconds
2019-07-10 14:32:07.778905: Iteration 0: 0.23
2019-07-10 14:32:07.966587: Iteration 1: 0.19
2019-07-10 14:32:08.234005: Iteration 2: 0.27
2019-07-10 14:32:08.500283: Iteration 3: 0.27
2019-07-10 14:32:08.675313: Iteration 4: 0.17
2019-07-10 14:32:08.857835: Iteration 5: 0.18
2019-07-10 14:32:09.082444: Iteration 6: 0.22
2019-07-10 14:32:09.308609: Iteration 7: 0.23
2019-07-10 14:32:09.571562: Iteration 8: 0.26
2019-07-10 14:32:09.757805: Iteration 9: 0.19
2019-07-10 14:32:09.935675: Iteration 10: 0.18
2019-07-10 14:32:09.936498: 
2019-07-10 14:32:09.936516: Results for 100 records averaged over 11 repetitions:
2019-07-10 14:32:09.937470: Actual rows fetched: 100
2019-07-10 14:32:09.937919: Time to execute select: 0.20 seconds
2019-07-10 14:32:09.938368: Time to put into dataframe: 0.01 seconds
2019-07-10 14:32:09.938819: Total time: 0.22 seconds
2019-07-10 14:32:10.156712: Iteration 0: 0.22
2019-07-10 14:32:10.401240: Iteration 1: 0.24
2019-07-10 14:32:10.598670: Iteration 2: 0.20
2019-07-10 14:32:10.787634: Iteration 3: 0.19
2019-07-10 14:32:10.988056: Iteration 4: 0.20
2019-07-10 14:32:11.210451: Iteration 5: 0.22
2019-07-10 14:32:11.412672: Iteration 6: 0.20
2019-07-10 14:32:11.593384: Iteration 7: 0.18
2019-07-10 14:32:11.753344: Iteration 8: 0.16
2019-07-10 14:32:11.971662: Iteration 9: 0.22
2019-07-10 14:32:12.169727: Iteration 10: 0.20
2019-07-10 14:32:12.170351: 
2019-07-10 14:32:12.170358: Results for 500 records averaged over 11 repetitions:
2019-07-10 14:32:12.171122: Actual rows fetched: 500
2019-07-10 14:32:12.171498: Time to execute select: 0.19 seconds
2019-07-10 14:32:12.171879: Time to put into dataframe: 0.01 seconds
2019-07-10 14:32:12.172256: Total time: 0.20 seconds
2019-07-10 14:32:12.392972: Iteration 0: 0.22
2019-07-10 14:32:12.486530: Thread 140339031443200 encountered an exception:
2019-07-10 14:32:12.487551: Code: 241.
2019-07-10 14:32:12.487655: DB::Exception: Memory limit (for query) exceeded: would use 9.31 GiB (attempt to allocate chunk of 8192 bytes), maximum: 9.31 GiB. Stack trace:
2019-07-10 14:32:12.487655: 
2019-07-10 14:32:12.487655: 0. clickhouse-server(StackTrace::StackTrace()+0x16) [0x66bee66]
2019-07-10 14:32:12.487655: 1. clickhouse-server(MemoryTracker::alloc(long)+0x799) [0x66b7fc9]
2019-07-10 14:32:12.487655: 2. clickhouse-server(MemoryTracker::alloc(long)+0xa8) [0x66b78d8]
2019-07-10 14:32:12.487655: 3. clickhouse-server(Allocator<false>::realloc(void*, unsigned long, unsigned long, unsigned long)+0xb3) [0x66a3043]
2019-07-10 14:32:12.487655: 4. clickhouse-server(ReservoirSampler<int, (ReservoirSamplerOnEmpty::Enum)1, std::less<int> >::insert(int const&)+0x145) [0x5944785]
2019-07-10 14:32:12.487655: 5. clickhouse-server(void DB::Aggregator::executeImplCase<false, DB::AggregationMethodSerialized<TwoLevelHashMapTable<StringRef, HashMapCellWithSavedHash<StringRef, char*, DefaultHash<StringRef>, HashTableNoState>, DefaultHash<StringRef>, TwoLevelHashTableGrower<8ul>, Allocator<true>, HashMapTable> > >(DB::AggregationMethodSerialized<TwoLevelHashMapTable<StringRef, HashMapCellWithSavedHash<StringRef, char*, DefaultHash<StringRef>, HashTableNoState>, DefaultHash<StringRef>, TwoLevelHashTableGrower<8ul>, Allocator<true>, HashMapTable> >&, DB::AggregationMethodSerialized<TwoLevelHashMapTable<StringRef, HashMapCellWithSavedHash<StringRef, char*, DefaultHash<StringRef>, HashTableNoState>, DefaultHash<StringRef>, TwoLevelHashTableGrower<8ul>, Allocator<true>, HashMapTable> >::State&, DB::Arena*, unsigned long, std::vector<DB::IColumn const*, std::allocator<DB::IColumn const*> >&, DB::Aggregator::AggregateFunctionInstruction*, std::vector<StringRef, std::allocator<StringRef> >&, char*) const+0x1d8) [0x627a438]
2019-07-10 14:32:12.487655: 6. clickhouse-server(void DB::Aggregator::executeImpl<DB::AggregationMethodSerialized<TwoLevelHashMapTable<StringRef, HashMapCellWithSavedHash<StringRef, char*, DefaultHash<StringRef>, HashTableNoState>, DefaultHash<StringRef>, TwoLevelHashTableGrower<8ul>, Allocator<true>, HashMapTable> > >(DB::AggregationMethodSerialized<TwoLevelHashMapTable<StringRef, HashMapCellWithSavedHash<StringRef, char*, DefaultHash<StringRef>, HashTableNoState>, DefaultHash<StringRef>, TwoLevelHashTableGrower<8ul>, Allocator<true>, HashMapTable> >&, DB::Arena*, unsigned long, std::vector<DB::IColumn const*, std::allocator<DB::IColumn const*> >&, DB::Aggregator::AggregateFunctionInstruction*, std::vector<StringRef, std::allocator<StringRef> >&, bool, char*) const+0x154) [0x627a804]
2019-07-10 14:32:12.487655: 7. clickhouse-server(DB::Aggregator::executeOnBlock(DB::Block const&, DB::AggregatedDataVariants&, std::vector<DB::IColumn const*, std::allocator<DB::IColumn const*> >&, std::vector<std::vector<DB::IColumn const*, std::allocator<DB::IColumn const*> >, std::allocator<std::vector<DB::IColumn const*, std::allocator<DB::IColumn const*> > > >&, std::vector<StringRef, std::allocator<StringRef> >&, bool&)+0x18d7) [0x62264f7]
2019-07-10 14:32:12.487655: 8. clickhouse-server(DB::ParallelInputsProcessor<DB::ParallelAggregatingBlockInputStream::Handler>::thread(std::shared_ptr<DB::ThreadGroupStatus>, unsigned long)+0x3ba) [0x61da43a]
2019-07-10 14:32:12.487655: 9. clickhouse-server(_ZZN20ThreadFromGlobalPoolC4IZN2DB23ParallelInputsProcessorINS1_35ParallelAggregatingBlockInputStream7HandlerEE7processEvEUlvE_JEEEOT_DpOT0_ENKUlvE_clEv+0x5d) [0x61dab7d]
2019-07-10 14:32:12.487655: 10. clickhouse-server(ThreadPoolImpl<std::thread>::worker(std::_List_iterator<std::thread>)+0x187) [0x66c4bb7]
2019-07-10 14:32:12.487655: 11. clickhouse-server() [0x71eee5f]
2019-07-10 14:32:12.487655: 12. /lib64/libpthread.so.0(+0x7dd5) [0x7f717e4b6dd5]
2019-07-10 14:32:12.487655: 13. /lib64/libc.so.6(clone+0x6d) [0x7f717d7b8ead]
2019-07-10 14:32:12.487655: 
2019-07-10 14:32:12.572394: Iteration 1: 0.18
2019-07-10 14:32:12.725260: Iteration 2: 0.15
2019-07-10 14:32:12.935052: Iteration 3: 0.21
2019-07-10 14:32:13.135063: Iteration 4: 0.20
2019-07-10 14:32:13.303830: Iteration 5: 0.17
2019-07-10 14:32:13.540858: Iteration 6: 0.24
2019-07-10 14:32:13.788561: Iteration 7: 0.25
2019-07-10 14:32:13.955523: Iteration 8: 0.17
2019-07-10 14:32:14.243853: Iteration 9: 0.29
2019-07-10 14:32:14.419446: Iteration 10: 0.18
2019-07-10 14:32:14.420081: 
2019-07-10 14:32:14.420089: Results for 1000 records averaged over 11 repetitions:
2019-07-10 14:32:14.420845: Actual rows fetched: 1000
2019-07-10 14:32:14.421231: Time to execute select: 0.19 seconds
2019-07-10 14:32:14.421615: Time to put into dataframe: 0.01 seconds
2019-07-10 14:32:14.421998: Total time: 0.20 seconds
2019-07-10 14:32:14.422406: 
2019-07-10 14:32:14.422420: Current Query: SELECT visitParamExtractInt(Message, 'partitionhash') AS partitionhash, 
2019-07-10 14:32:14.422420: visitParamExtractString(Message, 'hashcode') AS hashcode, 
2019-07-10 14:32:14.422420: visitParamExtractString(Message, 'accountnumber') AS accountnumber, 
2019-07-10 14:32:14.422420: visitParamExtractInt(Message, 'airtimeclass') AS airtimeclass, 
2019-07-10 14:32:14.422420: visitParamExtractFloat(Message, 'airtimeunits') AS airtimeunits, 
2019-07-10 14:32:14.422420: visitParamExtractString(Message, 'allocationcompletedate') AS allocationcompletedate, 
2019-07-10 14:32:14.422420: visitParamExtractString(Message, 'apn') AS apn, 
2019-07-10 14:32:14.422420: visitParamExtractString(Message, 'callednumber') AS callednumber, 
2019-07-10 14:32:14.422420: visitParamExtractString(Message, 'callingnumber') AS callingnumber, 
2019-07-10 14:32:14.422420: visitParamExtractInt(Message, 'carrierid') AS carrierid, 
2019-07-10 14:32:14.422420: visitParamExtractString(Message, 'cellid') AS cellid, 
2019-07-10 14:32:14.422420: visitParamExtractString(Message, 'chargingid') AS chargingid, 
2019-07-10 14:32:14.422420: visitParamExtractInt(Message, 'costcenterid') AS costcenterid, 
2019-07-10 14:32:14.422420: visitParamExtractInt(Message, 'downlinkvol') AS downlinkvol, 
2019-07-10 14:32:14.422420: visitParamExtractFloat(Message, 'duration') AS duration, 
2019-07-10 14:32:14.422420: visitParamExtractString(Message, 'exactusagedateonly') AS exactusagedateonly, 
2019-07-10 14:32:14.422420: visitParamExtractString(Message, 'exactusagetime') AS exactusagetime, 
2019-07-10 14:32:14.422420: visitParamExtractInt(Message, 'fileid') AS fileid, 
2019-07-10 14:32:14.422420: visitParamExtractString(Message, 'iccid') AS iccid, 
2019-07-10 14:32:14.422420: visitParamExtractString(Message, 'imei') AS imei, 
2019-07-10 14:32:14.422420: visitParamExtractString(Message, 'imsi') AS imsi, 
2019-07-10 14:32:14.422420: visitParamExtractInt(Message, 'lineid') AS lineid, 
2019-07-10 14:32:14.422420: visitParamExtractInt(Message, 'linenumber') AS linenumber, 
2019-07-10 14:32:14.422420: visitParamExtractString(Message, 'mobilecountrycode') AS mobilecountrycode, 
2019-07-10 14:32:14.422420: visitParamExtractString(Message, 'mobilenetworkcode') AS mobilenetworkcode, 
2019-07-10 14:32:14.422420: visitParamExtractBool(Message, 'mobileoriginated') AS mobileoriginated, 
2019-07-10 14:32:14.422420: visitParamExtractString(Message, 'msisdn') AS msisdn, 
2019-07-10 14:32:14.422420: visitParamExtractString(Message, 'network') AS network, 
2019-07-10 14:32:14.422420: visitParamExtractInt(Message, 'orgid') AS orgid, 
2019-07-10 14:32:14.422420: visitParamExtractString(Message, 'orgurn') AS orgurn, 
2019-07-10 14:32:14.422420: visitParamExtractString(Message, 'plmn') AS plmn, 
2019-07-10 14:32:14.422420: visitParamExtractRaw(Message, 'propertybag') AS propertybag, 
2019-07-10 14:32:14.422420: visitParamExtractString(Message, 'recordtype') AS recordtype, 
2019-07-10 14:32:14.422420: visitParamExtractString(Message, 'roamingindicator') AS roamingindicator, 
2019-07-10 14:32:14.422420: visitParamExtractString(Message, 'roundingdate') AS roundingdate, 
2019-07-10 14:32:14.422420: visitParamExtractString(Message, 'sender') AS sender, 
2019-07-10 14:32:14.422420: visitParamExtractInt(Message, 'subscriptionid') AS subscriptionid, 
2019-07-10 14:32:14.422420: visitParamExtractString(Message, 'subscriptionurn') AS subscriptionurn, 
2019-07-10 14:32:14.422420: visitParamExtractInt(Message, 'surrecordtypeid') AS surrecordtypeid, 
2019-07-10 14:32:14.422420: visitParamExtractString(Message, 'tapcode') AS tapcode, 
2019-07-10 14:32:14.422420: visitParamExtractInt(Message, 'uplinkvol') AS uplinkvol, 
2019-07-10 14:32:14.422420: visitParamExtractInt(Message, 'usagetypeid') AS usagetypeid 
2019-07-10 14:32:14.422420: FROM radius.udr 
2019-07-10 14:32:14.422420: WHERE partitionhash < 190512005 
2019-07-10 14:32:14.422420: LIMIT 
2019-07-10 14:32:14.522589: Iteration 0: 0.10
2019-07-10 14:32:14.690834: Iteration 1: 0.17
2019-07-10 14:32:14.784246: Iteration 2: 0.09
2019-07-10 14:32:14.912637: Iteration 3: 0.13
2019-07-10 14:32:15.011241: Iteration 4: 0.10
2019-07-10 14:32:15.128735: Iteration 5: 0.12
2019-07-10 14:32:15.219580: Iteration 6: 0.09
2019-07-10 14:32:15.330514: Iteration 7: 0.11
2019-07-10 14:32:15.523251: Iteration 8: 0.19
2019-07-10 14:32:15.618181: Iteration 9: 0.09
2019-07-10 14:32:15.867310: Iteration 10: 0.25
2019-07-10 14:32:15.868380: 
2019-07-10 14:32:15.868404: Results for 5 records averaged over 11 repetitions:
2019-07-10 14:32:15.869449: Actual rows fetched: 5
2019-07-10 14:32:15.869988: Time to execute select: 0.12 seconds
2019-07-10 14:32:15.870482: Time to put into dataframe: 0.01 seconds
2019-07-10 14:32:15.871112: Total time: 0.13 seconds
2019-07-10 14:32:15.962562: Iteration 0: 0.09
2019-07-10 14:32:16.048189: Iteration 1: 0.08
2019-07-10 14:32:16.154523: Iteration 2: 0.11
2019-07-10 14:32:16.247536: Iteration 3: 0.09
2019-07-10 14:32:16.377148: Iteration 4: 0.13
2019-07-10 14:32:16.472085: Iteration 5: 0.09
2019-07-10 14:32:16.727533: Iteration 6: 0.25
2019-07-10 14:32:16.824427: Iteration 7: 0.10
2019-07-10 14:32:16.919200: Iteration 8: 0.09
2019-07-10 14:32:17.042558: Iteration 9: 0.12
2019-07-10 14:32:17.175720: Iteration 10: 0.13
2019-07-10 14:32:17.176880: 
2019-07-10 14:32:17.176907: Results for 10 records averaged over 11 repetitions:
2019-07-10 14:32:17.178259: Actual rows fetched: 10
2019-07-10 14:32:17.178921: Time to execute select: 0.11 seconds
2019-07-10 14:32:17.179633: Time to put into dataframe: 0.01 seconds
2019-07-10 14:32:17.180342: Total time: 0.12 seconds
2019-07-10 14:32:17.275967: Iteration 0: 0.09
2019-07-10 14:32:17.386693: Iteration 1: 0.11
2019-07-10 14:32:17.479845: Iteration 2: 0.09
2019-07-10 14:32:17.493774: Continuing after exception
2019-07-10 14:32:17.494346: Thread 140339031443200 starting background query: select in_dst_mac,count(*) as connections,sum(in_pkts),avg(in_pkts),quantiles(.25,.5,.75)(in_pkts),median(in_pkts) from netflow.netflow_raw group by in_dst_mac order by connections desc limit 50
2019-07-10 14:32:17.644654: Iteration 3: 0.16
2019-07-10 14:32:18.000945: Iteration 4: 0.36
2019-07-10 14:32:18.088176: Iteration 5: 0.09
2019-07-10 14:32:18.209594: Iteration 6: 0.12
2019-07-10 14:32:18.344826: Iteration 7: 0.13
2019-07-10 14:32:18.422544: Iteration 8: 0.08
2019-07-10 14:32:18.601824: Iteration 9: 0.18
2019-07-10 14:32:18.706798: Iteration 10: 0.10
2019-07-10 14:32:18.707357: 
2019-07-10 14:32:18.707367: Results for 100 records averaged over 11 repetitions:
2019-07-10 14:32:18.708151: Actual rows fetched: 100
2019-07-10 14:32:18.708545: Time to execute select: 0.13 seconds
2019-07-10 14:32:18.708939: Time to put into dataframe: 0.01 seconds
2019-07-10 14:32:18.709332: Total time: 0.14 seconds
2019-07-10 14:32:18.804158: Iteration 0: 0.09
2019-07-10 14:32:19.184688: Iteration 1: 0.38
2019-07-10 14:32:19.278230: Iteration 2: 0.09
2019-07-10 14:32:19.452051: Iteration 3: 0.17
2019-07-10 14:32:19.563964: Iteration 4: 0.11
2019-07-10 14:32:19.720898: Iteration 5: 0.16
2019-07-10 14:32:19.858750: Iteration 6: 0.14
2019-07-10 14:32:19.937476: Iteration 7: 0.08
2019-07-10 14:32:20.441719: Iteration 8: 0.50
2019-07-10 14:32:20.582893: Iteration 9: 0.14
2019-07-10 14:32:20.705537: Iteration 10: 0.12
2019-07-10 14:32:20.706147: 
2019-07-10 14:32:20.706154: Results for 500 records averaged over 11 repetitions:
2019-07-10 14:32:20.706920: Actual rows fetched: 500
2019-07-10 14:32:20.707301: Time to execute select: 0.17 seconds
2019-07-10 14:32:20.707683: Time to put into dataframe: 0.01 seconds
2019-07-10 14:32:20.708062: Total time: 0.18 seconds
2019-07-10 14:32:20.815303: Iteration 0: 0.11
2019-07-10 14:32:20.941854: Iteration 1: 0.13
2019-07-10 14:32:21.367648: Iteration 2: 0.43
2019-07-10 14:32:21.480413: Iteration 3: 0.11
2019-07-10 14:32:21.878747: Iteration 4: 0.40
2019-07-10 14:32:21.996499: Iteration 5: 0.12
2019-07-10 14:32:22.112050: Iteration 6: 0.11
2019-07-10 14:32:22.224989: Iteration 7: 0.11
2019-07-10 14:32:22.363015: Iteration 8: 0.14
2019-07-10 14:32:22.592677: Iteration 9: 0.23
2019-07-10 14:32:22.726133: Iteration 10: 0.13
2019-07-10 14:32:22.726654: 
2019-07-10 14:32:22.726662: Results for 1000 records averaged over 11 repetitions:
2019-07-10 14:32:22.727084: Actual rows fetched: 1000
2019-07-10 14:32:22.727290: Time to execute select: 0.17 seconds
2019-07-10 14:32:22.727503: Time to put into dataframe: 0.01 seconds
2019-07-10 14:32:22.727715: Total time: 0.18 seconds
2019-07-10 14:32:22.727909: 
2019-07-10 14:32:22.727917: Current Query: SELECT visitParamExtractInt(Message, 'partitionhash') AS partitionhash, 
2019-07-10 14:32:22.727917: visitParamExtractString(Message, 'hashcode') AS hashcode, 
2019-07-10 14:32:22.727917: visitParamExtractString(Message, 'accountnumber') AS accountnumber, 
2019-07-10 14:32:22.727917: visitParamExtractInt(Message, 'airtimeclass') AS airtimeclass, 
2019-07-10 14:32:22.727917: visitParamExtractFloat(Message, 'airtimeunits') AS airtimeunits, 
2019-07-10 14:32:22.727917: visitParamExtractString(Message, 'allocationcompletedate') AS allocationcompletedate, 
2019-07-10 14:32:22.727917: visitParamExtractString(Message, 'apn') AS apn, 
2019-07-10 14:32:22.727917: visitParamExtractString(Message, 'callednumber') AS callednumber, 
2019-07-10 14:32:22.727917: visitParamExtractString(Message, 'callingnumber') AS callingnumber, 
2019-07-10 14:32:22.727917: visitParamExtractInt(Message, 'carrierid') AS carrierid, 
2019-07-10 14:32:22.727917: visitParamExtractString(Message, 'cellid') AS cellid, 
2019-07-10 14:32:22.727917: visitParamExtractString(Message, 'chargingid') AS chargingid, 
2019-07-10 14:32:22.727917: visitParamExtractInt(Message, 'costcenterid') AS costcenterid, 
2019-07-10 14:32:22.727917: visitParamExtractInt(Message, 'downlinkvol') AS downlinkvol, 
2019-07-10 14:32:22.727917: visitParamExtractFloat(Message, 'duration') AS duration, 
2019-07-10 14:32:22.727917: visitParamExtractString(Message, 'exactusagedateonly') AS exactusagedateonly, 
2019-07-10 14:32:22.727917: visitParamExtractString(Message, 'exactusagetime') AS exactusagetime, 
2019-07-10 14:32:22.727917: visitParamExtractInt(Message, 'fileid') AS fileid, 
2019-07-10 14:32:22.727917: visitParamExtractString(Message, 'iccid') AS iccid, 
2019-07-10 14:32:22.727917: visitParamExtractString(Message, 'imei') AS imei, 
2019-07-10 14:32:22.727917: visitParamExtractString(Message, 'imsi') AS imsi, 
2019-07-10 14:32:22.727917: visitParamExtractInt(Message, 'lineid') AS lineid, 
2019-07-10 14:32:22.727917: visitParamExtractInt(Message, 'linenumber') AS linenumber, 
2019-07-10 14:32:22.727917: visitParamExtractString(Message, 'mobilecountrycode') AS mobilecountrycode, 
2019-07-10 14:32:22.727917: visitParamExtractString(Message, 'mobilenetworkcode') AS mobilenetworkcode, 
2019-07-10 14:32:22.727917: visitParamExtractBool(Message, 'mobileoriginated') AS mobileoriginated, 
2019-07-10 14:32:22.727917: visitParamExtractString(Message, 'msisdn') AS msisdn, 
2019-07-10 14:32:22.727917: visitParamExtractString(Message, 'network') AS network, 
2019-07-10 14:32:22.727917: visitParamExtractInt(Message, 'orgid') AS orgid, 
2019-07-10 14:32:22.727917: visitParamExtractString(Message, 'orgurn') AS orgurn, 
2019-07-10 14:32:22.727917: visitParamExtractString(Message, 'plmn') AS plmn, 
2019-07-10 14:32:22.727917: visitParamExtractRaw(Message, 'propertybag') AS propertybag, 
2019-07-10 14:32:22.727917: visitParamExtractString(Message, 'recordtype') AS recordtype, 
2019-07-10 14:32:22.727917: visitParamExtractString(Message, 'roamingindicator') AS roamingindicator, 
2019-07-10 14:32:22.727917: visitParamExtractString(Message, 'roundingdate') AS roundingdate, 
2019-07-10 14:32:22.727917: visitParamExtractString(Message, 'sender') AS sender, 
2019-07-10 14:32:22.727917: visitParamExtractInt(Message, 'subscriptionid') AS subscriptionid, 
2019-07-10 14:32:22.727917: visitParamExtractString(Message, 'subscriptionurn') AS subscriptionurn, 
2019-07-10 14:32:22.727917: visitParamExtractInt(Message, 'surrecordtypeid') AS surrecordtypeid, 
2019-07-10 14:32:22.727917: visitParamExtractString(Message, 'tapcode') AS tapcode, 
2019-07-10 14:32:22.727917: visitParamExtractInt(Message, 'uplinkvol') AS uplinkvol, 
2019-07-10 14:32:22.727917: visitParamExtractInt(Message, 'usagetypeid') AS usagetypeid 
2019-07-10 14:32:22.727917: FROM radius.udr 
2019-07-10 14:32:22.727917: WHERE subscriptionid < 11400 AND subscriptionid > 11360 
2019-07-10 14:32:22.727917: LIMIT 
2019-07-10 14:32:22.908134: Iteration 0: 0.18
2019-07-10 14:32:23.064858: Iteration 1: 0.16
2019-07-10 14:32:23.169419: Iteration 2: 0.10
2019-07-10 14:32:23.294163: Iteration 3: 0.12
2019-07-10 14:32:23.420749: Iteration 4: 0.13
2019-07-10 14:32:23.518714: Iteration 5: 0.10
2019-07-10 14:32:23.613460: Iteration 6: 0.09
2019-07-10 14:32:23.697260: Iteration 7: 0.08
2019-07-10 14:32:23.826833: Iteration 8: 0.13
2019-07-10 14:32:23.955424: Iteration 9: 0.13
2019-07-10 14:32:24.074530: Iteration 10: 0.12
2019-07-10 14:32:24.075405: 
2019-07-10 14:32:24.075424: Results for 5 records averaged over 11 repetitions:
2019-07-10 14:32:24.076488: Actual rows fetched: 5
2019-07-10 14:32:24.077025: Time to execute select: 0.11 seconds
2019-07-10 14:32:24.077566: Time to put into dataframe: 0.01 seconds
2019-07-10 14:32:24.078110: Total time: 0.12 seconds
2019-07-10 14:32:24.224966: Iteration 0: 0.15
2019-07-10 14:32:24.345440: Iteration 1: 0.12
2019-07-10 14:32:24.509580: Iteration 2: 0.16
2019-07-10 14:32:24.652488: Iteration 3: 0.14
2019-07-10 14:32:24.795225: Iteration 4: 0.14
2019-07-10 14:32:25.000282: Iteration 5: 0.20
2019-07-10 14:32:25.148889: Iteration 6: 0.15
2019-07-10 14:32:25.251353: Iteration 7: 0.10
2019-07-10 14:32:25.415975: Iteration 8: 0.16
2019-07-10 14:32:25.525187: Iteration 9: 0.11
2019-07-10 14:32:25.657632: Iteration 10: 0.13
2019-07-10 14:32:25.658631: 
2019-07-10 14:32:25.658685: Results for 10 records averaged over 11 repetitions:
2019-07-10 14:32:25.659648: Actual rows fetched: 10
2019-07-10 14:32:25.660196: Time to execute select: 0.13 seconds
2019-07-10 14:32:25.660734: Time to put into dataframe: 0.01 seconds
2019-07-10 14:32:25.661274: Total time: 0.14 seconds
2019-07-10 14:32:25.779301: Iteration 0: 0.12
2019-07-10 14:32:25.922176: Iteration 1: 0.14
2019-07-10 14:32:26.070960: Iteration 2: 0.15
2019-07-10 14:32:26.205037: Iteration 3: 0.13
2019-07-10 14:32:26.292889: Iteration 4: 0.09
2019-07-10 14:32:26.412635: Iteration 5: 0.12
2019-07-10 14:32:26.530408: Iteration 6: 0.12
2019-07-10 14:32:26.716456: Iteration 7: 0.19
2019-07-10 14:32:26.810828: Iteration 8: 0.09
2019-07-10 14:32:26.950908: Iteration 9: 0.14
2019-07-10 14:32:27.079432: Iteration 10: 0.13
2019-07-10 14:32:27.080120: 
2019-07-10 14:32:27.080137: Results for 100 records averaged over 11 repetitions:
2019-07-10 14:32:27.080654: Actual rows fetched: 100
2019-07-10 14:32:27.081066: Time to execute select: 0.12 seconds
2019-07-10 14:32:27.081476: Time to put into dataframe: 0.01 seconds
2019-07-10 14:32:27.081881: Total time: 0.13 seconds
2019-07-10 14:32:27.192052: Iteration 0: 0.11
2019-07-10 14:32:27.311677: Iteration 1: 0.12
2019-07-10 14:32:27.437213: Iteration 2: 0.12
2019-07-10 14:32:27.545569: Iteration 3: 0.11
2019-07-10 14:32:27.630214: Iteration 4: 0.08
2019-07-10 14:32:28.023426: Iteration 5: 0.39
2019-07-10 14:32:28.154799: Iteration 6: 0.13
2019-07-10 14:32:28.314872: Iteration 7: 0.16
2019-07-10 14:32:28.413915: Iteration 8: 0.10
2019-07-10 14:32:28.505875: Iteration 9: 0.09
2019-07-10 14:32:28.658766: Iteration 10: 0.15
2019-07-10 14:32:28.659209: 
2019-07-10 14:32:28.659218: Results for 500 records averaged over 11 repetitions:
2019-07-10 14:32:28.659652: Actual rows fetched: 500
2019-07-10 14:32:28.659935: Time to execute select: 0.14 seconds
2019-07-10 14:32:28.660101: Time to put into dataframe: 0.01 seconds
2019-07-10 14:32:28.660317: Total time: 0.14 seconds
2019-07-10 14:32:28.836505: Iteration 0: 0.18
2019-07-10 14:32:28.963850: Iteration 1: 0.13
2019-07-10 14:32:29.115026: Iteration 2: 0.15
2019-07-10 14:32:29.229268: Iteration 3: 0.11
2019-07-10 14:32:29.348699: Iteration 4: 0.12
2019-07-10 14:32:29.535660: Iteration 5: 0.19
2019-07-10 14:32:29.741441: Iteration 6: 0.21
2019-07-10 14:32:30.225586: Iteration 7: 0.48
2019-07-10 14:32:30.394929: Iteration 8: 0.17
2019-07-10 14:32:30.520890: Iteration 9: 0.13
2019-07-10 14:32:30.681237: Iteration 10: 0.16
2019-07-10 14:32:30.681854: 
2019-07-10 14:32:30.681862: Results for 1000 records averaged over 11 repetitions:
2019-07-10 14:32:30.682629: Actual rows fetched: 1000
2019-07-10 14:32:30.683020: Time to execute select: 0.18 seconds
2019-07-10 14:32:30.683415: Time to put into dataframe: 0.01 seconds
2019-07-10 14:32:30.683807: Total time: 0.18 seconds
2019-07-10 14:32:30.684202: 
2019-07-10 14:32:30.684210: Current Query: SELECT visitParamExtractInt(Message, 'partitionhash') AS partitionhash, 
2019-07-10 14:32:30.684210: visitParamExtractString(Message, 'hashcode') AS hashcode, 
2019-07-10 14:32:30.684210: visitParamExtractString(Message, 'accountnumber') AS accountnumber, 
2019-07-10 14:32:30.684210: visitParamExtractInt(Message, 'airtimeclass') AS airtimeclass, 
2019-07-10 14:32:30.684210: visitParamExtractFloat(Message, 'airtimeunits') AS airtimeunits, 
2019-07-10 14:32:30.684210: visitParamExtractString(Message, 'allocationcompletedate') AS allocationcompletedate, 
2019-07-10 14:32:30.684210: visitParamExtractString(Message, 'apn') AS apn, 
2019-07-10 14:32:30.684210: visitParamExtractString(Message, 'callednumber') AS callednumber, 
2019-07-10 14:32:30.684210: visitParamExtractString(Message, 'callingnumber') AS callingnumber, 
2019-07-10 14:32:30.684210: visitParamExtractInt(Message, 'carrierid') AS carrierid, 
2019-07-10 14:32:30.684210: visitParamExtractString(Message, 'cellid') AS cellid, 
2019-07-10 14:32:30.684210: visitParamExtractString(Message, 'chargingid') AS chargingid, 
2019-07-10 14:32:30.684210: visitParamExtractInt(Message, 'costcenterid') AS costcenterid, 
2019-07-10 14:32:30.684210: visitParamExtractInt(Message, 'downlinkvol') AS downlinkvol, 
2019-07-10 14:32:30.684210: visitParamExtractFloat(Message, 'duration') AS duration, 
2019-07-10 14:32:30.684210: visitParamExtractString(Message, 'exactusagedateonly') AS exactusagedateonly, 
2019-07-10 14:32:30.684210: visitParamExtractString(Message, 'exactusagetime') AS exactusagetime, 
2019-07-10 14:32:30.684210: visitParamExtractInt(Message, 'fileid') AS fileid, 
2019-07-10 14:32:30.684210: visitParamExtractString(Message, 'iccid') AS iccid, 
2019-07-10 14:32:30.684210: visitParamExtractString(Message, 'imei') AS imei, 
2019-07-10 14:32:30.684210: visitParamExtractString(Message, 'imsi') AS imsi, 
2019-07-10 14:32:30.684210: visitParamExtractInt(Message, 'lineid') AS lineid, 
2019-07-10 14:32:30.684210: visitParamExtractInt(Message, 'linenumber') AS linenumber, 
2019-07-10 14:32:30.684210: visitParamExtractString(Message, 'mobilecountrycode') AS mobilecountrycode, 
2019-07-10 14:32:30.684210: visitParamExtractString(Message, 'mobilenetworkcode') AS mobilenetworkcode, 
2019-07-10 14:32:30.684210: visitParamExtractBool(Message, 'mobileoriginated') AS mobileoriginated, 
2019-07-10 14:32:30.684210: visitParamExtractString(Message, 'msisdn') AS msisdn, 
2019-07-10 14:32:30.684210: visitParamExtractString(Message, 'network') AS network, 
2019-07-10 14:32:30.684210: visitParamExtractInt(Message, 'orgid') AS orgid, 
2019-07-10 14:32:30.684210: visitParamExtractString(Message, 'orgurn') AS orgurn, 
2019-07-10 14:32:30.684210: visitParamExtractString(Message, 'plmn') AS plmn, 
2019-07-10 14:32:30.684210: visitParamExtractRaw(Message, 'propertybag') AS propertybag, 
2019-07-10 14:32:30.684210: visitParamExtractString(Message, 'recordtype') AS recordtype, 
2019-07-10 14:32:30.684210: visitParamExtractString(Message, 'roamingindicator') AS roamingindicator, 
2019-07-10 14:32:30.684210: visitParamExtractString(Message, 'roundingdate') AS roundingdate, 
2019-07-10 14:32:30.684210: visitParamExtractString(Message, 'sender') AS sender, 
2019-07-10 14:32:30.684210: visitParamExtractInt(Message, 'subscriptionid') AS subscriptionid, 
2019-07-10 14:32:30.684210: visitParamExtractString(Message, 'subscriptionurn') AS subscriptionurn, 
2019-07-10 14:32:30.684210: visitParamExtractInt(Message, 'surrecordtypeid') AS surrecordtypeid, 
2019-07-10 14:32:30.684210: visitParamExtractString(Message, 'tapcode') AS tapcode, 
2019-07-10 14:32:30.684210: visitParamExtractInt(Message, 'uplinkvol') AS uplinkvol, 
2019-07-10 14:32:30.684210: visitParamExtractInt(Message, 'usagetypeid') AS usagetypeid 
2019-07-10 14:32:30.684210: FROM radius.udr 
2019-07-10 14:32:30.684210: WHERE partitionhash = 190512005 AND subscriptionid < 11400 AND subscriptionid > 11360 
2019-07-10 14:32:30.684210: LIMIT 
2019-07-10 14:32:30.855244: Iteration 0: 0.17
2019-07-10 14:32:30.988001: Iteration 1: 0.13
2019-07-10 14:32:31.127772: Iteration 2: 0.14
2019-07-10 14:32:31.266200: Iteration 3: 0.14
2019-07-10 14:32:31.418360: Iteration 4: 0.15
2019-07-10 14:32:31.522247: Iteration 5: 0.10
2019-07-10 14:32:31.740177: Iteration 6: 0.22
2019-07-10 14:32:31.915020: Iteration 7: 0.17
2019-07-10 14:32:32.067706: Iteration 8: 0.15
2019-07-10 14:32:32.244163: Iteration 9: 0.18
2019-07-10 14:32:32.600272: Iteration 10: 0.36
2019-07-10 14:32:32.600820: 
2019-07-10 14:32:32.600830: Results for 5 records averaged over 11 repetitions:
2019-07-10 14:32:32.601300: Actual rows fetched: 5
2019-07-10 14:32:32.601649: Time to execute select: 0.16 seconds
2019-07-10 14:32:32.601782: Time to put into dataframe: 0.01 seconds
2019-07-10 14:32:32.601898: Total time: 0.17 seconds
2019-07-10 14:32:32.749412: Iteration 0: 0.15
2019-07-10 14:32:32.835100: Iteration 1: 0.09
2019-07-10 14:32:32.986715: Iteration 2: 0.15
2019-07-10 14:32:33.074507: Iteration 3: 0.09
2019-07-10 14:32:33.256553: Iteration 4: 0.18
2019-07-10 14:32:33.384448: Iteration 5: 0.13
2019-07-10 14:32:33.834949: Iteration 6: 0.45
2019-07-10 14:32:33.993789: Iteration 7: 0.16
2019-07-10 14:32:34.164547: Iteration 8: 0.17
2019-07-10 14:32:34.293963: Iteration 9: 0.13
2019-07-10 14:32:34.479882: Iteration 10: 0.18
2019-07-10 14:32:34.480735: 
2019-07-10 14:32:34.480753: Results for 10 records averaged over 11 repetitions:
2019-07-10 14:32:34.481817: Actual rows fetched: 10
2019-07-10 14:32:34.482279: Time to execute select: 0.16 seconds
2019-07-10 14:32:34.482741: Time to put into dataframe: 0.01 seconds
2019-07-10 14:32:34.483186: Total time: 0.17 seconds
2019-07-10 14:32:34.621662: Iteration 0: 0.14
2019-07-10 14:32:34.730527: Iteration 1: 0.11
2019-07-10 14:32:34.872375: Iteration 2: 0.14
2019-07-10 14:32:35.035024: Iteration 3: 0.16
2019-07-10 14:32:35.226403: Iteration 4: 0.19
2019-07-10 14:32:35.371533: Iteration 5: 0.14
2019-07-10 14:32:35.493626: Iteration 6: 0.12
2019-07-10 14:32:35.689936: Iteration 7: 0.20
2019-07-10 14:32:35.845954: Iteration 8: 0.15
2019-07-10 14:32:35.979409: Iteration 9: 0.13
2019-07-10 14:32:36.110919: Iteration 10: 0.13
2019-07-10 14:32:36.111434: 
2019-07-10 14:32:36.111443: Results for 100 records averaged over 11 repetitions:
2019-07-10 14:32:36.112141: Actual rows fetched: 100
2019-07-10 14:32:36.112317: Time to execute select: 0.14 seconds
2019-07-10 14:32:36.112484: Time to put into dataframe: 0.01 seconds
2019-07-10 14:32:36.112603: Total time: 0.15 seconds
2019-07-10 14:32:36.220787: Iteration 0: 0.11
2019-07-10 14:32:36.390743: Iteration 1: 0.17
2019-07-10 14:32:36.694238: Iteration 2: 0.30
2019-07-10 14:32:36.867317: Iteration 3: 0.17
2019-07-10 14:32:37.107475: Iteration 4: 0.24
2019-07-10 14:32:37.207114: Iteration 5: 0.10
2019-07-10 14:32:37.347171: Iteration 6: 0.14
2019-07-10 14:32:37.523351: Iteration 7: 0.18
2019-07-10 14:32:37.638125: Iteration 8: 0.11
2019-07-10 14:32:37.763794: Iteration 9: 0.13
2019-07-10 14:32:37.932290: Iteration 10: 0.17
2019-07-10 14:32:37.932917: 
2019-07-10 14:32:37.932924: Results for 500 records averaged over 11 repetitions:
2019-07-10 14:32:37.933695: Actual rows fetched: 500
2019-07-10 14:32:37.934080: Time to execute select: 0.16 seconds
2019-07-10 14:32:37.934443: Time to put into dataframe: 0.01 seconds
2019-07-10 14:32:37.934810: Total time: 0.16 seconds
2019-07-10 14:32:38.076844: Iteration 0: 0.14
2019-07-10 14:32:38.218089: Iteration 1: 0.14
2019-07-10 14:32:38.439757: Iteration 2: 0.22
2019-07-10 14:32:38.596752: Iteration 3: 0.16
2019-07-10 14:32:38.710267: Iteration 4: 0.11
2019-07-10 14:32:38.826035: Iteration 5: 0.12
2019-07-10 14:32:38.945186: Iteration 6: 0.12
2019-07-10 14:32:39.064417: Iteration 7: 0.12
2019-07-10 14:32:39.207318: Iteration 8: 0.14
2019-07-10 14:32:39.342814: Iteration 9: 0.13
2019-07-10 14:32:39.482842: Iteration 10: 0.14
2019-07-10 14:32:39.483469: 
2019-07-10 14:32:39.483477: Results for 1000 records averaged over 11 repetitions:
2019-07-10 14:32:39.484247: Actual rows fetched: 1000
2019-07-10 14:32:39.484667: Time to execute select: 0.13 seconds
2019-07-10 14:32:39.484867: Time to put into dataframe: 0.01 seconds
2019-07-10 14:32:39.485169: Total time: 0.14 seconds
