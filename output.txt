2019-07-10 14:20:26.154885: Systems Information:
2019-07-10 14:20:26.155334: 
2019-07-10 14:20:26.155342: Clickhouse Instance: 192.168.5.60:9000
2019-07-10 14:20:26.155529: 
2019-07-10 14:20:26.155535: Cassandra Instance: dev-cassandra.ksg.int:9042
2019-07-10 14:20:26.155701: 
2019-07-10 14:20:26.155708: Clickhouse Table Definition:
2019-07-10 14:20:26.155708: CREATE TABLE radius.udr ( 
2019-07-10 14:20:26.155708:    CreateDate DateTime default now(), 
2019-07-10 14:20:26.155708:    Message String 
2019-07-10 14:20:26.155708: ) ENGINE = MergeTree() 
2019-07-10 14:20:26.155708: PARTITION BY toYYYYMM(CreateDate) 
2019-07-10 14:20:26.155708: ORDER BY tuple()
2019-07-10 14:20:26.156950: 
2019-07-10 14:20:26.156960: Cassandra Table Definition:
2019-07-10 14:20:26.156960: CREATE TABLE "CassandraPractice".udr_copy1 (
2019-07-10 14:20:26.156960: 	partitionhash int,
2019-07-10 14:20:26.156960: 	hashcode text,
2019-07-10 14:20:26.156960: 	accountnumber text,
2019-07-10 14:20:26.156960: 	airtimeclass int,
2019-07-10 14:20:26.156960: 	airtimeunits double,
2019-07-10 14:20:26.156960: 	allocationcompletedate text,
2019-07-10 14:20:26.156960: 	apn text,
2019-07-10 14:20:26.156960: 	callednumber text,
2019-07-10 14:20:26.156960: 	callingnumber text,
2019-07-10 14:20:26.156960: 	carrierid int,
2019-07-10 14:20:26.156960: 	cellid text,
2019-07-10 14:20:26.156960: 	chargingid text,
2019-07-10 14:20:26.156960: 	costcenterid int,
2019-07-10 14:20:26.156960: 	downlinkvol bigint,
2019-07-10 14:20:26.156960: 	duration double,
2019-07-10 14:20:26.156960: 	exactusagedateonly date,
2019-07-10 14:20:26.156960: 	exactusagetime text,
2019-07-10 14:20:26.156960: 	fileid int,
2019-07-10 14:20:26.156960: 	iccid text,
2019-07-10 14:20:26.156960: 	imei text,
2019-07-10 14:20:26.156960: 	imsi text,
2019-07-10 14:20:26.156960: 	lineid bigint,
2019-07-10 14:20:26.156960: 	linenumber int,
2019-07-10 14:20:26.156960: 	mobilecountrycode text,
2019-07-10 14:20:26.156960: 	mobilenetworkcode text,
2019-07-10 14:20:26.156960: 	mobileoriginated boolean,
2019-07-10 14:20:26.156960: 	msisdn text,
2019-07-10 14:20:26.156960: 	network text,
2019-07-10 14:20:26.156960: 	orgid int,
2019-07-10 14:20:26.156960: 	orgurn text,
2019-07-10 14:20:26.156960: 	plmn text,
2019-07-10 14:20:26.156960: 	propertybag MAP<text, text>,
2019-07-10 14:20:26.156960: 	recordtype text,
2019-07-10 14:20:26.156960: 	roamingindicator text,
2019-07-10 14:20:26.156960: 	roundingdate text,
2019-07-10 14:20:26.156960: 	sender text,
2019-07-10 14:20:26.156960: 	subscriptionid int,
2019-07-10 14:20:26.156960: 	subscriptionurn text,
2019-07-10 14:20:26.156960: 	surrecordtypeid int,
2019-07-10 14:20:26.156960: 	tapcode text,
2019-07-10 14:20:26.156960: 	uplinkvol bigint,
2019-07-10 14:20:26.156960: 	usagetypeid int,
2019-07-10 14:20:26.156960: 	PRIMARY KEY (partitionhash, hashcode)
2019-07-10 14:20:26.156960: ) WITH bloom_filter_fp_chance = 0.01
2019-07-10 14:20:26.156960: AND comment = ''
2019-07-10 14:20:26.156960: AND crc_check_chance = 1.0
2019-07-10 14:20:26.156960: AND dclocal_read_repair_chance = 0.1
2019-07-10 14:20:26.156960: AND default_time_to_live = 0
2019-07-10 14:20:26.156960: AND gc_grace_seconds = 864000
2019-07-10 14:20:26.156960: AND max_index_interval = 2048
2019-07-10 14:20:26.156960: AND memtable_flush_period_in_ms = 0
2019-07-10 14:20:26.156960: AND min_index_interval = 128
2019-07-10 14:20:26.156960: AND read_repair_chance = 0.0
2019-07-10 14:20:26.156960: AND speculative_retry = '99.0PERCENTILE'
2019-07-10 14:20:26.156960: AND caching = {
2019-07-10 14:20:26.156960: 	'keys' : 'NONE',
2019-07-10 14:20:26.156960: 	'rows_per_partition' : 'NONE'
2019-07-10 14:20:26.156960: }
2019-07-10 14:20:26.156960: AND compression = {
2019-07-10 14:20:26.156960: 	'chunk_length_in_kb' : 64,
2019-07-10 14:20:26.156960: 	'class' : 'LZ4Compressor',
2019-07-10 14:20:26.156960: 	'enabled' : true
2019-07-10 14:20:26.156960: }
2019-07-10 14:20:26.156960: AND compaction = {
2019-07-10 14:20:26.156960: 	'class' : 'SizeTieredCompactionStrategy',
2019-07-10 14:20:26.156960: 	'max_threshold' : 32,
2019-07-10 14:20:26.156960: 	'min_threshold' : 4
2019-07-10 14:20:26.156960: };
2019-07-10 14:20:26.164520: 
2019-07-10 14:20:26.164529: 
2019-07-10 14:20:26.164747: Beginning Clickhouse Test
2019-07-10 14:20:26.211979: Thread 140566998025984 starting
2019-07-10 14:20:26.212655: Thread 140566998025984 starting background query: select out_src_mac,tcp_flags,out_src_mac,count(*) as connections,sum(in_pkts),avg(in_pkts),quantiles(.25,.5,.75)(in_pkts),median(in_pkts) from netflow.netflow_raw group by out_src_mac,tcp_flags,out_src_mac order by connections desc limit 50
2019-07-10 14:20:27.212604: Thread 140567040034560 starting
2019-07-10 14:20:27.213624: Thread 140567040034560 starting background query: select in_dst_mac,count(*) as connections,sum(in_pkts),avg(in_pkts),quantiles(.25,.5,.75)(in_pkts),median(in_pkts) from netflow.netflow_raw group by in_dst_mac order by connections desc limit 50
2019-07-10 14:20:28.213669: Thread 140567048488704 starting
2019-07-10 14:20:28.214786: Thread 140567048488704 starting background query: select dst_mask,ipv4_next_hop,in_dst_mac,count(*) as connections,sum(in_pkts),avg(in_pkts),quantiles(.25,.5,.75)(in_pkts),median(in_pkts) from netflow.netflow_raw group by dst_mask,ipv4_next_hop,in_dst_mac order by connections desc limit 50
2019-07-10 14:20:29.214978: Thread 140566736602880 starting
2019-07-10 14:20:29.216206: Thread 140566736602880 starting background query: select tcp_flags,icmp_type,count(*) as connections,sum(in_pkts),avg(in_pkts),quantiles(.25,.5,.75)(in_pkts),median(in_pkts) from netflow.netflow_raw group by tcp_flags,icmp_type order by connections desc limit 50
2019-07-10 14:20:30.215879: 
2019-07-10 14:20:30.215929: Current Query: SELECT visitParamExtractInt(Message, 'partitionhash') AS partitionhash, 
2019-07-10 14:20:30.215929: visitParamExtractString(Message, 'hashcode') AS hashcode, 
2019-07-10 14:20:30.215929: visitParamExtractString(Message, 'accountnumber') AS accountnumber, 
2019-07-10 14:20:30.215929: visitParamExtractInt(Message, 'airtimeclass') AS airtimeclass, 
2019-07-10 14:20:30.215929: visitParamExtractFloat(Message, 'airtimeunits') AS airtimeunits, 
2019-07-10 14:20:30.215929: visitParamExtractString(Message, 'allocationcompletedate') AS allocationcompletedate, 
2019-07-10 14:20:30.215929: visitParamExtractString(Message, 'apn') AS apn, 
2019-07-10 14:20:30.215929: visitParamExtractString(Message, 'callednumber') AS callednumber, 
2019-07-10 14:20:30.215929: visitParamExtractString(Message, 'callingnumber') AS callingnumber, 
2019-07-10 14:20:30.215929: visitParamExtractInt(Message, 'carrierid') AS carrierid, 
2019-07-10 14:20:30.215929: visitParamExtractString(Message, 'cellid') AS cellid, 
2019-07-10 14:20:30.215929: visitParamExtractString(Message, 'chargingid') AS chargingid, 
2019-07-10 14:20:30.215929: visitParamExtractInt(Message, 'costcenterid') AS costcenterid, 
2019-07-10 14:20:30.215929: visitParamExtractInt(Message, 'downlinkvol') AS downlinkvol, 
2019-07-10 14:20:30.215929: visitParamExtractFloat(Message, 'duration') AS duration, 
2019-07-10 14:20:30.215929: visitParamExtractString(Message, 'exactusagedateonly') AS exactusagedateonly, 
2019-07-10 14:20:30.215929: visitParamExtractString(Message, 'exactusagetime') AS exactusagetime, 
2019-07-10 14:20:30.215929: visitParamExtractInt(Message, 'fileid') AS fileid, 
2019-07-10 14:20:30.215929: visitParamExtractString(Message, 'iccid') AS iccid, 
2019-07-10 14:20:30.215929: visitParamExtractString(Message, 'imei') AS imei, 
2019-07-10 14:20:30.215929: visitParamExtractString(Message, 'imsi') AS imsi, 
2019-07-10 14:20:30.215929: visitParamExtractInt(Message, 'lineid') AS lineid, 
2019-07-10 14:20:30.215929: visitParamExtractInt(Message, 'linenumber') AS linenumber, 
2019-07-10 14:20:30.215929: visitParamExtractString(Message, 'mobilecountrycode') AS mobilecountrycode, 
2019-07-10 14:20:30.215929: visitParamExtractString(Message, 'mobilenetworkcode') AS mobilenetworkcode, 
2019-07-10 14:20:30.215929: visitParamExtractBool(Message, 'mobileoriginated') AS mobileoriginated, 
2019-07-10 14:20:30.215929: visitParamExtractString(Message, 'msisdn') AS msisdn, 
2019-07-10 14:20:30.215929: visitParamExtractString(Message, 'network') AS network, 
2019-07-10 14:20:30.215929: visitParamExtractInt(Message, 'orgid') AS orgid, 
2019-07-10 14:20:30.215929: visitParamExtractString(Message, 'orgurn') AS orgurn, 
2019-07-10 14:20:30.215929: visitParamExtractString(Message, 'plmn') AS plmn, 
2019-07-10 14:20:30.215929: visitParamExtractRaw(Message, 'propertybag') AS propertybag, 
2019-07-10 14:20:30.215929: visitParamExtractString(Message, 'recordtype') AS recordtype, 
2019-07-10 14:20:30.215929: visitParamExtractString(Message, 'roamingindicator') AS roamingindicator, 
2019-07-10 14:20:30.215929: visitParamExtractString(Message, 'roundingdate') AS roundingdate, 
2019-07-10 14:20:30.215929: visitParamExtractString(Message, 'sender') AS sender, 
2019-07-10 14:20:30.215929: visitParamExtractInt(Message, 'subscriptionid') AS subscriptionid, 
2019-07-10 14:20:30.215929: visitParamExtractString(Message, 'subscriptionurn') AS subscriptionurn, 
2019-07-10 14:20:30.215929: visitParamExtractInt(Message, 'surrecordtypeid') AS surrecordtypeid, 
2019-07-10 14:20:30.215929: visitParamExtractString(Message, 'tapcode') AS tapcode, 
2019-07-10 14:20:30.215929: visitParamExtractInt(Message, 'uplinkvol') AS uplinkvol, 
2019-07-10 14:20:30.215929: visitParamExtractInt(Message, 'usagetypeid') AS usagetypeid 
2019-07-10 14:20:30.215929: FROM radius.udr 
2019-07-10 14:20:30.215929: LIMIT 
2019-07-10 14:20:30.304826: Iteration 0: 0.07
2019-07-10 14:20:30.358547: Iteration 1: 0.05
2019-07-10 14:20:30.380769: Iteration 2: 0.02
2019-07-10 14:20:30.447288: Iteration 3: 0.07
2019-07-10 14:20:30.501880: Iteration 4: 0.05
2019-07-10 14:20:30.554238: Iteration 5: 0.05
2019-07-10 14:20:30.577047: Iteration 6: 0.02
2019-07-10 14:20:30.661428: Iteration 7: 0.08
2019-07-10 14:20:30.688369: Iteration 8: 0.03
2019-07-10 14:20:30.714419: Iteration 9: 0.03
2019-07-10 14:20:30.773709: Iteration 10: 0.06
2019-07-10 14:20:30.774268: 
2019-07-10 14:20:30.774277: Results for 5 records averaged over 11 repetitions:
2019-07-10 14:20:30.775007: Actual rows fetched: 5
2019-07-10 14:20:30.775404: Time to execute select: 0.04 seconds
2019-07-10 14:20:30.775791: Time to put into dataframe: 0.01 seconds
2019-07-10 14:20:30.776052: Total time: 0.05 seconds
2019-07-10 14:20:30.802079: Iteration 0: 0.03
2019-07-10 14:20:30.831739: Iteration 1: 0.03
2019-07-10 14:20:30.900087: Iteration 2: 0.07
2019-07-10 14:20:30.956222: Iteration 3: 0.06
2019-07-10 14:20:31.012084: Iteration 4: 0.06
2019-07-10 14:20:31.079027: Iteration 5: 0.07
2019-07-10 14:20:31.109296: Iteration 6: 0.03
2019-07-10 14:20:31.161059: Iteration 7: 0.05
2019-07-10 14:20:31.191587: Iteration 8: 0.03
2019-07-10 14:20:31.229231: Iteration 9: 0.04
2019-07-10 14:20:31.290024: Iteration 10: 0.06
2019-07-10 14:20:31.290456: 
2019-07-10 14:20:31.290463: Results for 10 records averaged over 11 repetitions:
2019-07-10 14:20:31.290760: Actual rows fetched: 10
2019-07-10 14:20:31.290963: Time to execute select: 0.04 seconds
2019-07-10 14:20:31.291101: Time to put into dataframe: 0.01 seconds
2019-07-10 14:20:31.291230: Total time: 0.05 seconds
2019-07-10 14:20:31.332902: Iteration 0: 0.04
2019-07-10 14:20:31.400803: Iteration 1: 0.07
2019-07-10 14:20:31.447953: Iteration 2: 0.05
2019-07-10 14:20:31.520930: Iteration 3: 0.07
2019-07-10 14:20:31.576406: Iteration 4: 0.05
2019-07-10 14:20:31.624480: Iteration 5: 0.05
2019-07-10 14:20:31.681838: Iteration 6: 0.06
2019-07-10 14:20:31.726491: Iteration 7: 0.04
2019-07-10 14:20:31.763073: Iteration 8: 0.04
2019-07-10 14:20:31.814612: Iteration 9: 0.05
2019-07-10 14:20:31.859286: Iteration 10: 0.04
2019-07-10 14:20:31.859898: 
2019-07-10 14:20:31.859911: Results for 100 records averaged over 11 repetitions:
2019-07-10 14:20:31.860165: Actual rows fetched: 100
2019-07-10 14:20:31.860292: Time to execute select: 0.05 seconds
2019-07-10 14:20:31.860505: Time to put into dataframe: 0.01 seconds
2019-07-10 14:20:31.860639: Total time: 0.05 seconds
2019-07-10 14:20:31.933399: Iteration 0: 0.07
2019-07-10 14:20:32.014283: Iteration 1: 0.08
2019-07-10 14:20:32.068284: Iteration 2: 0.05
2019-07-10 14:20:32.151150: Iteration 3: 0.08
2019-07-10 14:20:32.198564: Iteration 4: 0.05
2019-07-10 14:20:32.280357: Iteration 5: 0.08
2019-07-10 14:20:32.340992: Iteration 6: 0.06
2019-07-10 14:20:32.388401: Iteration 7: 0.05
2019-07-10 14:20:32.465587: Iteration 8: 0.08
2019-07-10 14:20:32.519824: Iteration 9: 0.05
2019-07-10 14:20:32.568159: Iteration 10: 0.05
2019-07-10 14:20:32.568588: 
2019-07-10 14:20:32.568597: Results for 500 records averaged over 11 repetitions:
2019-07-10 14:20:32.568886: Actual rows fetched: 500
2019-07-10 14:20:32.569032: Time to execute select: 0.06 seconds
2019-07-10 14:20:32.569133: Time to put into dataframe: 0.01 seconds
2019-07-10 14:20:32.569257: Total time: 0.06 seconds
2019-07-10 14:20:32.630918: Iteration 0: 0.06
2019-07-10 14:20:32.728050: Iteration 1: 0.10
2019-07-10 14:20:32.811713: Iteration 2: 0.08
2019-07-10 14:20:32.885823: Iteration 3: 0.07
2019-07-10 14:20:32.975490: Iteration 4: 0.09
2019-07-10 14:20:33.059743: Iteration 5: 0.08
2019-07-10 14:20:33.133422: Iteration 6: 0.07
2019-07-10 14:20:33.202745: Iteration 7: 0.07
2019-07-10 14:20:33.281130: Iteration 8: 0.08
2019-07-10 14:20:33.357988: Iteration 9: 0.08
2019-07-10 14:20:33.423812: Iteration 10: 0.07
2019-07-10 14:20:33.424167: 
2019-07-10 14:20:33.424175: Results for 1000 records averaged over 11 repetitions:
2019-07-10 14:20:33.425294: Actual rows fetched: 1000
2019-07-10 14:20:33.425686: Time to execute select: 0.07 seconds
2019-07-10 14:20:33.426067: Time to put into dataframe: 0.01 seconds
2019-07-10 14:20:33.426281: Total time: 0.08 seconds
2019-07-10 14:20:33.426406: 
2019-07-10 14:20:33.426413: Current Query: SELECT visitParamExtractInt(Message, 'partitionhash') AS partitionhash, 
2019-07-10 14:20:33.426413: visitParamExtractString(Message, 'hashcode') AS hashcode, 
2019-07-10 14:20:33.426413: visitParamExtractString(Message, 'accountnumber') AS accountnumber, 
2019-07-10 14:20:33.426413: visitParamExtractInt(Message, 'airtimeclass') AS airtimeclass, 
2019-07-10 14:20:33.426413: visitParamExtractFloat(Message, 'airtimeunits') AS airtimeunits, 
2019-07-10 14:20:33.426413: visitParamExtractString(Message, 'allocationcompletedate') AS allocationcompletedate, 
2019-07-10 14:20:33.426413: visitParamExtractString(Message, 'apn') AS apn, 
2019-07-10 14:20:33.426413: visitParamExtractString(Message, 'callednumber') AS callednumber, 
2019-07-10 14:20:33.426413: visitParamExtractString(Message, 'callingnumber') AS callingnumber, 
2019-07-10 14:20:33.426413: visitParamExtractInt(Message, 'carrierid') AS carrierid, 
2019-07-10 14:20:33.426413: visitParamExtractString(Message, 'cellid') AS cellid, 
2019-07-10 14:20:33.426413: visitParamExtractString(Message, 'chargingid') AS chargingid, 
2019-07-10 14:20:33.426413: visitParamExtractInt(Message, 'costcenterid') AS costcenterid, 
2019-07-10 14:20:33.426413: visitParamExtractInt(Message, 'downlinkvol') AS downlinkvol, 
2019-07-10 14:20:33.426413: visitParamExtractFloat(Message, 'duration') AS duration, 
2019-07-10 14:20:33.426413: visitParamExtractString(Message, 'exactusagedateonly') AS exactusagedateonly, 
2019-07-10 14:20:33.426413: visitParamExtractString(Message, 'exactusagetime') AS exactusagetime, 
2019-07-10 14:20:33.426413: visitParamExtractInt(Message, 'fileid') AS fileid, 
2019-07-10 14:20:33.426413: visitParamExtractString(Message, 'iccid') AS iccid, 
2019-07-10 14:20:33.426413: visitParamExtractString(Message, 'imei') AS imei, 
2019-07-10 14:20:33.426413: visitParamExtractString(Message, 'imsi') AS imsi, 
2019-07-10 14:20:33.426413: visitParamExtractInt(Message, 'lineid') AS lineid, 
2019-07-10 14:20:33.426413: visitParamExtractInt(Message, 'linenumber') AS linenumber, 
2019-07-10 14:20:33.426413: visitParamExtractString(Message, 'mobilecountrycode') AS mobilecountrycode, 
2019-07-10 14:20:33.426413: visitParamExtractString(Message, 'mobilenetworkcode') AS mobilenetworkcode, 
2019-07-10 14:20:33.426413: visitParamExtractBool(Message, 'mobileoriginated') AS mobileoriginated, 
2019-07-10 14:20:33.426413: visitParamExtractString(Message, 'msisdn') AS msisdn, 
2019-07-10 14:20:33.426413: visitParamExtractString(Message, 'network') AS network, 
2019-07-10 14:20:33.426413: visitParamExtractInt(Message, 'orgid') AS orgid, 
2019-07-10 14:20:33.426413: visitParamExtractString(Message, 'orgurn') AS orgurn, 
2019-07-10 14:20:33.426413: visitParamExtractString(Message, 'plmn') AS plmn, 
2019-07-10 14:20:33.426413: visitParamExtractRaw(Message, 'propertybag') AS propertybag, 
2019-07-10 14:20:33.426413: visitParamExtractString(Message, 'recordtype') AS recordtype, 
2019-07-10 14:20:33.426413: visitParamExtractString(Message, 'roamingindicator') AS roamingindicator, 
2019-07-10 14:20:33.426413: visitParamExtractString(Message, 'roundingdate') AS roundingdate, 
2019-07-10 14:20:33.426413: visitParamExtractString(Message, 'sender') AS sender, 
2019-07-10 14:20:33.426413: visitParamExtractInt(Message, 'subscriptionid') AS subscriptionid, 
2019-07-10 14:20:33.426413: visitParamExtractString(Message, 'subscriptionurn') AS subscriptionurn, 
2019-07-10 14:20:33.426413: visitParamExtractInt(Message, 'surrecordtypeid') AS surrecordtypeid, 
2019-07-10 14:20:33.426413: visitParamExtractString(Message, 'tapcode') AS tapcode, 
2019-07-10 14:20:33.426413: visitParamExtractInt(Message, 'uplinkvol') AS uplinkvol, 
2019-07-10 14:20:33.426413: visitParamExtractInt(Message, 'usagetypeid') AS usagetypeid 
2019-07-10 14:20:33.426413: FROM radius.udr 
2019-07-10 14:20:33.426413: WHERE partitionhash = -1 
2019-07-10 14:20:33.426413: LIMIT 
2019-07-10 14:20:35.250891: Iteration 0: 1.82
2019-07-10 14:20:37.156393: Iteration 1: 1.91
2019-07-10 14:20:39.006573: Iteration 2: 1.85
2019-07-10 14:20:40.845160: Iteration 3: 1.84
2019-07-10 14:20:42.672943: Iteration 4: 1.83
2019-07-10 14:20:44.586176: Iteration 5: 1.91
2019-07-10 14:20:46.418342: Iteration 6: 1.83
2019-07-10 14:20:48.338222: Iteration 7: 1.92
2019-07-10 14:20:50.213815: Iteration 8: 1.88
2019-07-10 14:20:52.075163: Iteration 9: 1.86
2019-07-10 14:20:53.857018: Iteration 10: 1.78
2019-07-10 14:20:53.857456: 
2019-07-10 14:20:53.857470: Results for 5 records averaged over 11 repetitions:
2019-07-10 14:20:53.857930: Actual rows fetched: 0
2019-07-10 14:20:53.858131: Time to execute select: 1.86 seconds
2019-07-10 14:20:53.858333: Time to put into dataframe: 0.00 seconds
2019-07-10 14:20:53.858576: Total time: 1.86 seconds
2019-07-10 14:20:53.858788: 
2019-07-10 14:20:53.858810: Current Query: SELECT visitParamExtractInt(Message, 'partitionhash') AS partitionhash, 
2019-07-10 14:20:53.858810: visitParamExtractString(Message, 'hashcode') AS hashcode, 
2019-07-10 14:20:53.858810: visitParamExtractString(Message, 'accountnumber') AS accountnumber, 
2019-07-10 14:20:53.858810: visitParamExtractInt(Message, 'airtimeclass') AS airtimeclass, 
2019-07-10 14:20:53.858810: visitParamExtractFloat(Message, 'airtimeunits') AS airtimeunits, 
2019-07-10 14:20:53.858810: visitParamExtractString(Message, 'allocationcompletedate') AS allocationcompletedate, 
2019-07-10 14:20:53.858810: visitParamExtractString(Message, 'apn') AS apn, 
2019-07-10 14:20:53.858810: visitParamExtractString(Message, 'callednumber') AS callednumber, 
2019-07-10 14:20:53.858810: visitParamExtractString(Message, 'callingnumber') AS callingnumber, 
2019-07-10 14:20:53.858810: visitParamExtractInt(Message, 'carrierid') AS carrierid, 
2019-07-10 14:20:53.858810: visitParamExtractString(Message, 'cellid') AS cellid, 
2019-07-10 14:20:53.858810: visitParamExtractString(Message, 'chargingid') AS chargingid, 
2019-07-10 14:20:53.858810: visitParamExtractInt(Message, 'costcenterid') AS costcenterid, 
2019-07-10 14:20:53.858810: visitParamExtractInt(Message, 'downlinkvol') AS downlinkvol, 
2019-07-10 14:20:53.858810: visitParamExtractFloat(Message, 'duration') AS duration, 
2019-07-10 14:20:53.858810: visitParamExtractString(Message, 'exactusagedateonly') AS exactusagedateonly, 
2019-07-10 14:20:53.858810: visitParamExtractString(Message, 'exactusagetime') AS exactusagetime, 
2019-07-10 14:20:53.858810: visitParamExtractInt(Message, 'fileid') AS fileid, 
2019-07-10 14:20:53.858810: visitParamExtractString(Message, 'iccid') AS iccid, 
2019-07-10 14:20:53.858810: visitParamExtractString(Message, 'imei') AS imei, 
2019-07-10 14:20:53.858810: visitParamExtractString(Message, 'imsi') AS imsi, 
2019-07-10 14:20:53.858810: visitParamExtractInt(Message, 'lineid') AS lineid, 
2019-07-10 14:20:53.858810: visitParamExtractInt(Message, 'linenumber') AS linenumber, 
2019-07-10 14:20:53.858810: visitParamExtractString(Message, 'mobilecountrycode') AS mobilecountrycode, 
2019-07-10 14:20:53.858810: visitParamExtractString(Message, 'mobilenetworkcode') AS mobilenetworkcode, 
2019-07-10 14:20:53.858810: visitParamExtractBool(Message, 'mobileoriginated') AS mobileoriginated, 
2019-07-10 14:20:53.858810: visitParamExtractString(Message, 'msisdn') AS msisdn, 
2019-07-10 14:20:53.858810: visitParamExtractString(Message, 'network') AS network, 
2019-07-10 14:20:53.858810: visitParamExtractInt(Message, 'orgid') AS orgid, 
2019-07-10 14:20:53.858810: visitParamExtractString(Message, 'orgurn') AS orgurn, 
2019-07-10 14:20:53.858810: visitParamExtractString(Message, 'plmn') AS plmn, 
2019-07-10 14:20:53.858810: visitParamExtractRaw(Message, 'propertybag') AS propertybag, 
2019-07-10 14:20:53.858810: visitParamExtractString(Message, 'recordtype') AS recordtype, 
2019-07-10 14:20:53.858810: visitParamExtractString(Message, 'roamingindicator') AS roamingindicator, 
2019-07-10 14:20:53.858810: visitParamExtractString(Message, 'roundingdate') AS roundingdate, 
2019-07-10 14:20:53.858810: visitParamExtractString(Message, 'sender') AS sender, 
2019-07-10 14:20:53.858810: visitParamExtractInt(Message, 'subscriptionid') AS subscriptionid, 
2019-07-10 14:20:53.858810: visitParamExtractString(Message, 'subscriptionurn') AS subscriptionurn, 
2019-07-10 14:20:53.858810: visitParamExtractInt(Message, 'surrecordtypeid') AS surrecordtypeid, 
2019-07-10 14:20:53.858810: visitParamExtractString(Message, 'tapcode') AS tapcode, 
2019-07-10 14:20:53.858810: visitParamExtractInt(Message, 'uplinkvol') AS uplinkvol, 
2019-07-10 14:20:53.858810: visitParamExtractInt(Message, 'usagetypeid') AS usagetypeid 
2019-07-10 14:20:53.858810: FROM radius.udr 
2019-07-10 14:20:53.858810: WHERE carrierid = 18000 
2019-07-10 14:20:53.858810: LIMIT 
2019-07-10 14:20:54.019028: Iteration 0: 0.16
2019-07-10 14:20:54.201709: Iteration 1: 0.18
2019-07-10 14:20:54.363812: Iteration 2: 0.16
2019-07-10 14:20:54.452487: Iteration 3: 0.09
2019-07-10 14:20:54.577269: Iteration 4: 0.12
2019-07-10 14:20:54.682288: Iteration 5: 0.10
2019-07-10 14:20:54.829739: Iteration 6: 0.15
2019-07-10 14:20:54.918803: Iteration 7: 0.09
2019-07-10 14:20:55.035209: Iteration 8: 0.12
2019-07-10 14:20:55.173007: Iteration 9: 0.14
2019-07-10 14:20:55.366650: Iteration 10: 0.19
2019-07-10 14:20:55.367311: 
2019-07-10 14:20:55.367343: Results for 5 records averaged over 11 repetitions:
2019-07-10 14:20:55.368117: Actual rows fetched: 5
2019-07-10 14:20:55.368496: Time to execute select: 0.13 seconds
2019-07-10 14:20:55.368910: Time to put into dataframe: 0.01 seconds
2019-07-10 14:20:55.369113: Total time: 0.14 seconds
2019-07-10 14:20:55.555056: Iteration 0: 0.19
2019-07-10 14:20:55.757451: Iteration 1: 0.20
2019-07-10 14:20:55.916758: Iteration 2: 0.16
2019-07-10 14:20:55.991960: Iteration 3: 0.07
2019-07-10 14:20:56.070414: Iteration 4: 0.08
2019-07-10 14:20:56.238707: Iteration 5: 0.17
2019-07-10 14:20:56.355273: Iteration 6: 0.12
2019-07-10 14:20:56.520294: Iteration 7: 0.16
2019-07-10 14:20:56.657850: Iteration 8: 0.14
2019-07-10 14:20:56.751223: Iteration 9: 0.09
2019-07-10 14:20:56.894073: Iteration 10: 0.14
2019-07-10 14:20:56.895013: 
2019-07-10 14:20:56.895032: Results for 10 records averaged over 11 repetitions:
2019-07-10 14:20:56.895954: Actual rows fetched: 10
2019-07-10 14:20:56.896957: Time to execute select: 0.12 seconds
2019-07-10 14:20:56.897500: Time to put into dataframe: 0.01 seconds
2019-07-10 14:20:56.898035: Total time: 0.14 seconds
2019-07-10 14:20:57.027878: Iteration 0: 0.13
2019-07-10 14:20:57.117004: Iteration 1: 0.09
2019-07-10 14:20:57.225827: Iteration 2: 0.11
2019-07-10 14:20:57.352856: Iteration 3: 0.13
2019-07-10 14:20:57.460329: Iteration 4: 0.11
2019-07-10 14:20:57.592082: Iteration 5: 0.13
2019-07-10 14:20:57.699445: Iteration 6: 0.11
2019-07-10 14:20:57.764086: Iteration 7: 0.06
2019-07-10 14:20:57.956651: Iteration 8: 0.19
2019-07-10 14:20:58.054553: Iteration 9: 0.10
2019-07-10 14:20:58.151796: Iteration 10: 0.10
2019-07-10 14:20:58.152564: 
2019-07-10 14:20:58.152579: Results for 100 records averaged over 11 repetitions:
2019-07-10 14:20:58.153541: Actual rows fetched: 100
2019-07-10 14:20:58.154080: Time to execute select: 0.10 seconds
2019-07-10 14:20:58.154373: Time to put into dataframe: 0.01 seconds
2019-07-10 14:20:58.154847: Total time: 0.11 seconds
2019-07-10 14:20:58.235426: Iteration 0: 0.08
2019-07-10 14:20:58.312091: Iteration 1: 0.08
2019-07-10 14:20:58.475867: Iteration 2: 0.16
2019-07-10 14:20:58.658494: Iteration 3: 0.18
2019-07-10 14:20:58.751955: Iteration 4: 0.09
2019-07-10 14:20:58.866833: Iteration 5: 0.11
2019-07-10 14:20:59.044388: Iteration 6: 0.18
2019-07-10 14:20:59.307624: Iteration 7: 0.26
2019-07-10 14:20:59.458078: Iteration 8: 0.15
2019-07-10 14:20:59.607322: Iteration 9: 0.15
2019-07-10 14:20:59.778684: Iteration 10: 0.17
2019-07-10 14:20:59.779113: 
2019-07-10 14:20:59.779120: Results for 500 records averaged over 11 repetitions:
2019-07-10 14:20:59.779450: Actual rows fetched: 500
2019-07-10 14:20:59.779605: Time to execute select: 0.14 seconds
2019-07-10 14:20:59.779760: Time to put into dataframe: 0.01 seconds
2019-07-10 14:20:59.779913: Total time: 0.15 seconds
2019-07-10 14:20:59.933056: Iteration 0: 0.15
2019-07-10 14:21:00.150939: Iteration 1: 0.22
2019-07-10 14:21:00.392078: Iteration 2: 0.24
2019-07-10 14:21:00.597337: Iteration 3: 0.20
2019-07-10 14:21:00.838102: Iteration 4: 0.24
2019-07-10 14:21:01.041598: Iteration 5: 0.20
2019-07-10 14:21:01.176810: Iteration 6: 0.13
2019-07-10 14:21:01.313184: Iteration 7: 0.14
2019-07-10 14:21:01.460343: Iteration 8: 0.15
2019-07-10 14:21:01.582000: Iteration 9: 0.12
2019-07-10 14:21:01.753012: Iteration 10: 0.17
2019-07-10 14:21:01.753519: 
2019-07-10 14:21:01.753526: Results for 1000 records averaged over 11 repetitions:
2019-07-10 14:21:01.754209: Actual rows fetched: 1000
2019-07-10 14:21:01.754598: Time to execute select: 0.17 seconds
2019-07-10 14:21:01.754764: Time to put into dataframe: 0.01 seconds
2019-07-10 14:21:01.754886: Total time: 0.18 seconds
2019-07-10 14:21:01.755363: 
2019-07-10 14:21:01.755372: Current Query: SELECT visitParamExtractInt(Message, 'partitionhash') AS partitionhash, 
2019-07-10 14:21:01.755372: visitParamExtractString(Message, 'hashcode') AS hashcode, 
2019-07-10 14:21:01.755372: visitParamExtractString(Message, 'accountnumber') AS accountnumber, 
2019-07-10 14:21:01.755372: visitParamExtractInt(Message, 'airtimeclass') AS airtimeclass, 
2019-07-10 14:21:01.755372: visitParamExtractFloat(Message, 'airtimeunits') AS airtimeunits, 
2019-07-10 14:21:01.755372: visitParamExtractString(Message, 'allocationcompletedate') AS allocationcompletedate, 
2019-07-10 14:21:01.755372: visitParamExtractString(Message, 'apn') AS apn, 
2019-07-10 14:21:01.755372: visitParamExtractString(Message, 'callednumber') AS callednumber, 
2019-07-10 14:21:01.755372: visitParamExtractString(Message, 'callingnumber') AS callingnumber, 
2019-07-10 14:21:01.755372: visitParamExtractInt(Message, 'carrierid') AS carrierid, 
2019-07-10 14:21:01.755372: visitParamExtractString(Message, 'cellid') AS cellid, 
2019-07-10 14:21:01.755372: visitParamExtractString(Message, 'chargingid') AS chargingid, 
2019-07-10 14:21:01.755372: visitParamExtractInt(Message, 'costcenterid') AS costcenterid, 
2019-07-10 14:21:01.755372: visitParamExtractInt(Message, 'downlinkvol') AS downlinkvol, 
2019-07-10 14:21:01.755372: visitParamExtractFloat(Message, 'duration') AS duration, 
2019-07-10 14:21:01.755372: visitParamExtractString(Message, 'exactusagedateonly') AS exactusagedateonly, 
2019-07-10 14:21:01.755372: visitParamExtractString(Message, 'exactusagetime') AS exactusagetime, 
2019-07-10 14:21:01.755372: visitParamExtractInt(Message, 'fileid') AS fileid, 
2019-07-10 14:21:01.755372: visitParamExtractString(Message, 'iccid') AS iccid, 
2019-07-10 14:21:01.755372: visitParamExtractString(Message, 'imei') AS imei, 
2019-07-10 14:21:01.755372: visitParamExtractString(Message, 'imsi') AS imsi, 
2019-07-10 14:21:01.755372: visitParamExtractInt(Message, 'lineid') AS lineid, 
2019-07-10 14:21:01.755372: visitParamExtractInt(Message, 'linenumber') AS linenumber, 
2019-07-10 14:21:01.755372: visitParamExtractString(Message, 'mobilecountrycode') AS mobilecountrycode, 
2019-07-10 14:21:01.755372: visitParamExtractString(Message, 'mobilenetworkcode') AS mobilenetworkcode, 
2019-07-10 14:21:01.755372: visitParamExtractBool(Message, 'mobileoriginated') AS mobileoriginated, 
2019-07-10 14:21:01.755372: visitParamExtractString(Message, 'msisdn') AS msisdn, 
2019-07-10 14:21:01.755372: visitParamExtractString(Message, 'network') AS network, 
2019-07-10 14:21:01.755372: visitParamExtractInt(Message, 'orgid') AS orgid, 
2019-07-10 14:21:01.755372: visitParamExtractString(Message, 'orgurn') AS orgurn, 
2019-07-10 14:21:01.755372: visitParamExtractString(Message, 'plmn') AS plmn, 
2019-07-10 14:21:01.755372: visitParamExtractRaw(Message, 'propertybag') AS propertybag, 
2019-07-10 14:21:01.755372: visitParamExtractString(Message, 'recordtype') AS recordtype, 
2019-07-10 14:21:01.755372: visitParamExtractString(Message, 'roamingindicator') AS roamingindicator, 
2019-07-10 14:21:01.755372: visitParamExtractString(Message, 'roundingdate') AS roundingdate, 
2019-07-10 14:21:01.755372: visitParamExtractString(Message, 'sender') AS sender, 
2019-07-10 14:21:01.755372: visitParamExtractInt(Message, 'subscriptionid') AS subscriptionid, 
2019-07-10 14:21:01.755372: visitParamExtractString(Message, 'subscriptionurn') AS subscriptionurn, 
2019-07-10 14:21:01.755372: visitParamExtractInt(Message, 'surrecordtypeid') AS surrecordtypeid, 
2019-07-10 14:21:01.755372: visitParamExtractString(Message, 'tapcode') AS tapcode, 
2019-07-10 14:21:01.755372: visitParamExtractInt(Message, 'uplinkvol') AS uplinkvol, 
2019-07-10 14:21:01.755372: visitParamExtractInt(Message, 'usagetypeid') AS usagetypeid 
2019-07-10 14:21:01.755372: FROM radius.udr 
2019-07-10 14:21:01.755372: WHERE fileid = 278 
2019-07-10 14:21:01.755372: LIMIT 
2019-07-10 14:21:02.026500: Iteration 0: 0.27
2019-07-10 14:21:02.267449: Iteration 1: 0.24
2019-07-10 14:21:02.500636: Iteration 2: 0.23
2019-07-10 14:21:02.675810: Iteration 3: 0.17
2019-07-10 14:21:02.892493: Iteration 4: 0.22
2019-07-10 14:21:03.105355: Iteration 5: 0.21
2019-07-10 14:21:03.372823: Iteration 6: 0.27
2019-07-10 14:21:03.572822: Iteration 7: 0.20
2019-07-10 14:21:03.871965: Iteration 8: 0.30
2019-07-10 14:21:04.155884: Iteration 9: 0.28
2019-07-10 14:21:04.383488: Iteration 10: 0.23
2019-07-10 14:21:04.384610: 
2019-07-10 14:21:04.384637: Results for 5 records averaged over 11 repetitions:
2019-07-10 14:21:04.385817: Actual rows fetched: 5
2019-07-10 14:21:04.386441: Time to execute select: 0.22 seconds
2019-07-10 14:21:04.387061: Time to put into dataframe: 0.01 seconds
2019-07-10 14:21:04.387629: Total time: 0.24 seconds
2019-07-10 14:21:04.595716: Iteration 0: 0.21
2019-07-10 14:21:04.840266: Iteration 1: 0.24
2019-07-10 14:21:05.029874: Iteration 2: 0.19
2019-07-10 14:21:05.200345: Iteration 3: 0.17
2019-07-10 14:21:05.382306: Iteration 4: 0.18
2019-07-10 14:21:05.538082: Iteration 5: 0.16
2019-07-10 14:21:05.729678: Iteration 6: 0.19
2019-07-10 14:21:05.910563: Iteration 7: 0.18
2019-07-10 14:21:06.124916: Iteration 8: 0.21
2019-07-10 14:21:06.383628: Iteration 9: 0.26
2019-07-10 14:21:06.581405: Iteration 10: 0.20
2019-07-10 14:21:06.582175: 
2019-07-10 14:21:06.582194: Results for 10 records averaged over 11 repetitions:
2019-07-10 14:21:06.582628: Actual rows fetched: 10
2019-07-10 14:21:06.582850: Time to execute select: 0.19 seconds
2019-07-10 14:21:06.583032: Time to put into dataframe: 0.01 seconds
2019-07-10 14:21:06.583198: Total time: 0.20 seconds
2019-07-10 14:21:06.792543: Iteration 0: 0.21
2019-07-10 14:21:06.954659: Iteration 1: 0.16
2019-07-10 14:21:07.134303: Iteration 2: 0.18
2019-07-10 14:21:07.346426: Iteration 3: 0.21
2019-07-10 14:21:07.534471: Iteration 4: 0.19
2019-07-10 14:21:07.745832: Iteration 5: 0.21
2019-07-10 14:21:07.924529: Iteration 6: 0.18
2019-07-10 14:21:08.100368: Iteration 7: 0.18
2019-07-10 14:21:08.305792: Iteration 8: 0.20
2019-07-10 14:21:08.470355: Iteration 9: 0.16
2019-07-10 14:21:08.695155: Iteration 10: 0.22
2019-07-10 14:21:08.695978: 
2019-07-10 14:21:08.696005: Results for 100 records averaged over 11 repetitions:
2019-07-10 14:21:08.696698: Actual rows fetched: 100
2019-07-10 14:21:08.696949: Time to execute select: 0.18 seconds
2019-07-10 14:21:08.697199: Time to put into dataframe: 0.02 seconds
2019-07-10 14:21:08.697443: Total time: 0.19 seconds
2019-07-10 14:21:08.888508: Iteration 0: 0.19
2019-07-10 14:21:09.111871: Iteration 1: 0.22
2019-07-10 14:21:09.539756: Main thread encountered an exception:
2019-07-10 14:21:09.568300: Unexpected EOF while reading bytes
2019-07-10 14:21:09.557403: Thread 140566736602880 encountered an exception:
2019-07-10 14:21:09.550450: Thread 140567048488704 encountered an exception:
2019-07-10 14:21:09.560911: Thread 140566998025984 encountered an exception:
2019-07-10 14:21:09.588943: Unexpected EOF while reading bytes
2019-07-10 14:21:09.588509: Unexpected EOF while reading bytes
2019-07-10 14:21:09.588749: Unexpected EOF while reading bytes
2019-07-10 14:21:09.550523: Thread 140567040034560 encountered an exception:
2019-07-10 14:21:09.589427: Unexpected EOF while reading bytes
2019-07-10 14:21:14.581305: Main thread continuing
2019-07-10 14:21:14.587196: Continuing after exception
2019-07-10 14:21:14.587361: Continuing after exception
2019-07-10 14:21:14.588519: Thread 140566998025984 starting background query: select out_src_mac,tcp_flags,out_src_mac,count(*) as connections,sum(in_pkts),avg(in_pkts),quantiles(.25,.5,.75)(in_pkts),median(in_pkts) from netflow.netflow_raw group by out_src_mac,tcp_flags,out_src_mac order by connections desc limit 50
2019-07-10 14:21:14.588804: Continuing after exception
2019-07-10 14:21:14.589491: Thread 140566736602880 starting background query: select tcp_flags,count(*) as connections,sum(in_pkts),avg(in_pkts),quantiles(.25,.5,.75)(in_pkts),median(in_pkts) from netflow.netflow_raw group by tcp_flags order by connections desc limit 50
2019-07-10 14:21:14.588693: Continuing after exception
2019-07-10 14:21:14.590739: Thread 140567040034560 starting background query: select in_bytes,ipv4_next_hop,last_switched,count(*) as connections,sum(in_pkts),avg(in_pkts),quantiles(.25,.5,.75)(in_pkts),median(in_pkts) from netflow.netflow_raw group by in_bytes,ipv4_next_hop,last_switched order by connections desc limit 50
2019-07-10 14:21:14.595071: Thread 140567048488704 starting background query: select flowset_id,count(*) as connections,sum(in_pkts),avg(in_pkts),quantiles(.25,.5,.75)(in_pkts),median(in_pkts) from netflow.netflow_raw group by flowset_id order by connections desc limit 50
2019-07-10 14:21:35.602137: Thread 140566736602880 encountered an exception:
2019-07-10 14:21:35.602500: Main thread encountered an exception:
2019-07-10 14:21:35.602978: Thread 140566998025984 encountered an exception:
2019-07-10 14:21:35.603422: Code: 210. Connection refused (192.168.5.60:9000)
2019-07-10 14:21:35.603639: Code: 210. Connection refused (192.168.5.60:9000)
2019-07-10 14:21:35.603892: Code: 210. Connection refused (192.168.5.60:9000)
2019-07-10 14:21:35.602658: Thread 140567040034560 encountered an exception:
2019-07-10 14:21:35.604850: Code: 210. Connection refused (192.168.5.60:9000)
2019-07-10 14:21:35.617622: Thread 140567048488704 encountered an exception:
2019-07-10 14:21:35.619461: Code: 210. Connection refused (192.168.5.60:9000)
2019-07-10 14:21:40.602960: Continuing after exception
2019-07-10 14:21:40.603130: Continuing after exception
2019-07-10 14:21:40.603722: Continuing after exception
2019-07-10 14:21:40.603962: Thread 140566998025984 starting background query: select in_bytes,ipv4_next_hop,last_switched,count(*) as connections,sum(in_pkts),avg(in_pkts),quantiles(.25,.5,.75)(in_pkts),median(in_pkts) from netflow.netflow_raw group by in_bytes,ipv4_next_hop,last_switched order by connections desc limit 50
2019-07-10 14:21:40.603254: Main thread continuing
2019-07-10 14:21:40.605096: Thread 140567040034560 starting background query: select tcp_flags,count(*) as connections,sum(in_pkts),avg(in_pkts),quantiles(.25,.5,.75)(in_pkts),median(in_pkts) from netflow.netflow_raw group by tcp_flags order by connections desc limit 50
2019-07-10 14:21:40.604388: Thread 140566736602880 starting background query: select out_src_mac,count(*) as connections,sum(in_pkts),avg(in_pkts),quantiles(.25,.5,.75)(in_pkts),median(in_pkts) from netflow.netflow_raw group by out_src_mac order by connections desc limit 50
2019-07-10 14:21:40.620400: Continuing after exception
2019-07-10 14:21:40.626152: Thread 140567048488704 starting background query: select in_bytes,ipv4_next_hop,last_switched,count(*) as connections,sum(in_pkts),avg(in_pkts),quantiles(.25,.5,.75)(in_pkts),median(in_pkts) from netflow.netflow_raw group by in_bytes,ipv4_next_hop,last_switched order by connections desc limit 50
2019-07-10 14:21:41.047144: Iteration 2: 0.44
2019-07-10 14:21:41.413524: Iteration 3: 0.37
2019-07-10 14:21:41.832204: Iteration 4: 0.42
2019-07-10 14:21:42.833664: Iteration 5: 1.00
2019-07-10 14:21:43.134807: Iteration 6: 0.30
2019-07-10 14:21:43.600404: Iteration 7: 0.47
2019-07-10 14:21:43.879936: Iteration 8: 0.28
2019-07-10 14:21:44.182827: Iteration 9: 0.30
2019-07-10 14:21:44.452986: Iteration 10: 0.27
2019-07-10 14:21:44.453694: 
2019-07-10 14:21:44.453713: Results for 500 records averaged over 11 repetitions:
2019-07-10 14:21:44.454214: Actual rows fetched: 500
2019-07-10 14:21:44.454497: Time to execute select: 0.37 seconds
2019-07-10 14:21:44.454775: Time to put into dataframe: 0.01 seconds
2019-07-10 14:21:44.455031: Total time: 0.39 seconds
2019-07-10 14:21:44.711597: Iteration 0: 0.26
2019-07-10 14:21:44.984821: Iteration 1: 0.27
2019-07-10 14:21:45.190113: Iteration 2: 0.20
2019-07-10 14:21:45.408360: Iteration 3: 0.22
2019-07-10 14:21:45.635905: Iteration 4: 0.23
2019-07-10 14:21:46.249630: Iteration 5: 0.61
2019-07-10 14:21:46.728149: Iteration 6: 0.48
2019-07-10 14:21:46.973813: Iteration 7: 0.25
2019-07-10 14:21:47.223468: Iteration 8: 0.25
2019-07-10 14:21:47.481386: Iteration 9: 0.26
2019-07-10 14:21:47.698687: Iteration 10: 0.22
2019-07-10 14:21:47.698946: 
2019-07-10 14:21:47.698955: Results for 1000 records averaged over 11 repetitions:
2019-07-10 14:21:47.700083: Actual rows fetched: 1000
2019-07-10 14:21:47.700473: Time to execute select: 0.28 seconds
2019-07-10 14:21:47.700862: Time to put into dataframe: 0.01 seconds
2019-07-10 14:21:47.701246: Total time: 0.29 seconds
2019-07-10 14:21:47.701648: 
2019-07-10 14:21:47.701659: Current Query: SELECT visitParamExtractInt(Message, 'partitionhash') AS partitionhash, 
2019-07-10 14:21:47.701659: visitParamExtractString(Message, 'hashcode') AS hashcode, 
2019-07-10 14:21:47.701659: visitParamExtractString(Message, 'accountnumber') AS accountnumber, 
2019-07-10 14:21:47.701659: visitParamExtractInt(Message, 'airtimeclass') AS airtimeclass, 
2019-07-10 14:21:47.701659: visitParamExtractFloat(Message, 'airtimeunits') AS airtimeunits, 
2019-07-10 14:21:47.701659: visitParamExtractString(Message, 'allocationcompletedate') AS allocationcompletedate, 
2019-07-10 14:21:47.701659: visitParamExtractString(Message, 'apn') AS apn, 
2019-07-10 14:21:47.701659: visitParamExtractString(Message, 'callednumber') AS callednumber, 
2019-07-10 14:21:47.701659: visitParamExtractString(Message, 'callingnumber') AS callingnumber, 
2019-07-10 14:21:47.701659: visitParamExtractInt(Message, 'carrierid') AS carrierid, 
2019-07-10 14:21:47.701659: visitParamExtractString(Message, 'cellid') AS cellid, 
2019-07-10 14:21:47.701659: visitParamExtractString(Message, 'chargingid') AS chargingid, 
2019-07-10 14:21:47.701659: visitParamExtractInt(Message, 'costcenterid') AS costcenterid, 
2019-07-10 14:21:47.701659: visitParamExtractInt(Message, 'downlinkvol') AS downlinkvol, 
2019-07-10 14:21:47.701659: visitParamExtractFloat(Message, 'duration') AS duration, 
2019-07-10 14:21:47.701659: visitParamExtractString(Message, 'exactusagedateonly') AS exactusagedateonly, 
2019-07-10 14:21:47.701659: visitParamExtractString(Message, 'exactusagetime') AS exactusagetime, 
2019-07-10 14:21:47.701659: visitParamExtractInt(Message, 'fileid') AS fileid, 
2019-07-10 14:21:47.701659: visitParamExtractString(Message, 'iccid') AS iccid, 
2019-07-10 14:21:47.701659: visitParamExtractString(Message, 'imei') AS imei, 
2019-07-10 14:21:47.701659: visitParamExtractString(Message, 'imsi') AS imsi, 
2019-07-10 14:21:47.701659: visitParamExtractInt(Message, 'lineid') AS lineid, 
2019-07-10 14:21:47.701659: visitParamExtractInt(Message, 'linenumber') AS linenumber, 
2019-07-10 14:21:47.701659: visitParamExtractString(Message, 'mobilecountrycode') AS mobilecountrycode, 
2019-07-10 14:21:47.701659: visitParamExtractString(Message, 'mobilenetworkcode') AS mobilenetworkcode, 
2019-07-10 14:21:47.701659: visitParamExtractBool(Message, 'mobileoriginated') AS mobileoriginated, 
2019-07-10 14:21:47.701659: visitParamExtractString(Message, 'msisdn') AS msisdn, 
2019-07-10 14:21:47.701659: visitParamExtractString(Message, 'network') AS network, 
2019-07-10 14:21:47.701659: visitParamExtractInt(Message, 'orgid') AS orgid, 
2019-07-10 14:21:47.701659: visitParamExtractString(Message, 'orgurn') AS orgurn, 
2019-07-10 14:21:47.701659: visitParamExtractString(Message, 'plmn') AS plmn, 
2019-07-10 14:21:47.701659: visitParamExtractRaw(Message, 'propertybag') AS propertybag, 
2019-07-10 14:21:47.701659: visitParamExtractString(Message, 'recordtype') AS recordtype, 
2019-07-10 14:21:47.701659: visitParamExtractString(Message, 'roamingindicator') AS roamingindicator, 
2019-07-10 14:21:47.701659: visitParamExtractString(Message, 'roundingdate') AS roundingdate, 
2019-07-10 14:21:47.701659: visitParamExtractString(Message, 'sender') AS sender, 
2019-07-10 14:21:47.701659: visitParamExtractInt(Message, 'subscriptionid') AS subscriptionid, 
2019-07-10 14:21:47.701659: visitParamExtractString(Message, 'subscriptionurn') AS subscriptionurn, 
2019-07-10 14:21:47.701659: visitParamExtractInt(Message, 'surrecordtypeid') AS surrecordtypeid, 
2019-07-10 14:21:47.701659: visitParamExtractString(Message, 'tapcode') AS tapcode, 
2019-07-10 14:21:47.701659: visitParamExtractInt(Message, 'uplinkvol') AS uplinkvol, 
2019-07-10 14:21:47.701659: visitParamExtractInt(Message, 'usagetypeid') AS usagetypeid 
2019-07-10 14:21:47.701659: FROM radius.udr 
2019-07-10 14:21:47.701659: WHERE usagetypeid = 0 
2019-07-10 14:21:47.701659: LIMIT 
2019-07-10 14:21:47.997984: Iteration 0: 0.29
2019-07-10 14:21:48.413353: Iteration 1: 0.41
2019-07-10 14:21:48.845308: Iteration 2: 0.43
2019-07-10 14:21:49.110459: Iteration 3: 0.26
2019-07-10 14:21:49.453363: Iteration 4: 0.34
2019-07-10 14:21:49.696597: Iteration 5: 0.24
2019-07-10 14:21:49.977623: Iteration 6: 0.28
2019-07-10 14:21:50.236566: Iteration 7: 0.26
2019-07-10 14:21:50.522661: Iteration 8: 0.29
2019-07-10 14:21:50.846989: Iteration 9: 0.32
2019-07-10 14:21:51.130544: Iteration 10: 0.28
2019-07-10 14:21:51.131616: 
2019-07-10 14:21:51.131642: Results for 5 records averaged over 11 repetitions:
2019-07-10 14:21:51.132757: Actual rows fetched: 5
2019-07-10 14:21:51.133308: Time to execute select: 0.30 seconds
2019-07-10 14:21:51.133850: Time to put into dataframe: 0.01 seconds
2019-07-10 14:21:51.134397: Total time: 0.31 seconds
2019-07-10 14:21:51.552336: Iteration 0: 0.42
2019-07-10 14:21:51.772022: Iteration 1: 0.22
2019-07-10 14:21:52.132626: Iteration 2: 0.36
2019-07-10 14:21:52.353722: Iteration 3: 0.22
2019-07-10 14:21:52.621393: Iteration 4: 0.27
2019-07-10 14:21:52.854059: Iteration 5: 0.23
2019-07-10 14:21:53.064347: Iteration 6: 0.21
2019-07-10 14:21:53.382963: Iteration 7: 0.32
2019-07-10 14:21:53.680751: Iteration 8: 0.30
2019-07-10 14:21:53.988752: Iteration 9: 0.31
2019-07-10 14:21:54.346348: Iteration 10: 0.36
2019-07-10 14:21:54.347271: 
2019-07-10 14:21:54.347289: Results for 10 records averaged over 11 repetitions:
2019-07-10 14:21:54.348361: Actual rows fetched: 10
2019-07-10 14:21:54.348901: Time to execute select: 0.28 seconds
2019-07-10 14:21:54.349436: Time to put into dataframe: 0.01 seconds
2019-07-10 14:21:54.349967: Total time: 0.29 seconds
2019-07-10 14:21:54.567883: Iteration 0: 0.22
2019-07-10 14:21:54.865843: Iteration 1: 0.30
2019-07-10 14:21:55.152752: Iteration 2: 0.29
2019-07-10 14:21:55.480154: Iteration 3: 0.33
2019-07-10 14:21:55.741229: Iteration 4: 0.26
2019-07-10 14:21:56.082394: Iteration 5: 0.34
2019-07-10 14:21:56.360144: Iteration 6: 0.28
2019-07-10 14:21:56.610002: Thread 140566998025984 encountered an exception:
2019-07-10 14:21:56.610990: Code: 241.
2019-07-10 14:21:56.611042: DB::Exception: Memory limit (for query) exceeded: would use 9.33 GiB (attempt to allocate chunk of 134217728 bytes), maximum: 9.31 GiB. Stack trace:
2019-07-10 14:21:56.611042: 
2019-07-10 14:21:56.611042: 0. clickhouse-server(StackTrace::StackTrace()+0x16) [0x66bee66]
2019-07-10 14:21:56.611042: 1. clickhouse-server(MemoryTracker::alloc(long)+0x799) [0x66b7fc9]
2019-07-10 14:21:56.611042: 2. clickhouse-server(MemoryTracker::alloc(long)+0xa8) [0x66b78d8]
2019-07-10 14:21:56.611042: 3. clickhouse-server(Allocator<false>::alloc(unsigned long, unsigned long)+0x22) [0x66a29b2]
2019-07-10 14:21:56.611042: 4. clickhouse-server(DB::Arena::addChunk(unsigned long)+0x89) [0x31e4289]
2019-07-10 14:21:56.611042: 5. clickhouse-server(DB::Arena::alignedAlloc(unsigned long, unsigned long)+0x3b) [0x57cf0cb]
2019-07-10 14:21:56.611042: 6. clickhouse-server(void DB::Aggregator::executeImplCase<false, DB::AggregationMethodSerialized<TwoLevelHashMapTable<StringRef, HashMapCellWithSavedHash<StringRef, char*, DefaultHash<StringRef>, HashTableNoState>, DefaultHash<StringRef>, TwoLevelHashTableGrower<8ul>, Allocator<true>, HashMapTable> > >(DB::AggregationMethodSerialized<TwoLevelHashMapTable<StringRef, HashMapCellWithSavedHash<StringRef, char*, DefaultHash<StringRef>, HashTableNoState>, DefaultHash<StringRef>, TwoLevelHashTableGrower<8ul>, Allocator<true>, HashMapTable> >&, DB::AggregationMethodSerialized<TwoLevelHashMapTable<StringRef, HashMapCellWithSavedHash<StringRef, char*, DefaultHash<StringRef>, HashTableNoState>, DefaultHash<StringRef>, TwoLevelHashTableGrower<8ul>, Allocator<true>, HashMapTable> >::State&, DB::Arena*, unsigned long, std::vector<DB::IColumn const*, std::allocator<DB::IColumn const*> >&, DB::Aggregator::AggregateFunctionInstruction*, std::vector<StringRef, std::allocator<StringRef> >&, char*) const+0x29b) [0x627a4fb]
2019-07-10 14:21:56.611042: 7. clickhouse-server(void DB::Aggregator::executeImpl<DB::AggregationMethodSerialized<TwoLevelHashMapTable<StringRef, HashMapCellWithSavedHash<StringRef, char*, DefaultHash<StringRef>, HashTableNoState>, DefaultHash<StringRef>, TwoLevelHashTableGrower<8ul>, Allocator<true>, HashMapTable> > >(DB::AggregationMethodSerialized<TwoLevelHashMapTable<StringRef, HashMapCellWithSavedHash<StringRef, char*, DefaultHash<StringRef>, HashTableNoState>, DefaultHash<StringRef>, TwoLevelHashTableGrower<8ul>, Allocator<true>, HashMapTable> >&, DB::Arena*, unsigned long, std::vector<DB::IColumn const*, std::allocator<DB::IColumn const*> >&, DB::Aggregator::AggregateFunctionInstruction*, std::vector<StringRef, std::allocator<StringRef> >&, bool, char*) const+0x154) [0x627a804]
2019-07-10 14:21:56.611042: 8. clickhouse-server(DB::Aggregator::executeOnBlock(DB::Block const&, DB::AggregatedDataVariants&, std::vector<DB::IColumn const*, std::allocator<DB::IColumn const*> >&, std::vector<std::vector<DB::IColumn const*, std::allocator<DB::IColumn const*> >, std::allocator<std::vector<DB::IColumn const*, std::allocator<DB::IColumn const*> > > >&, std::vector<StringRef, std::allocator<StringRef> >&, bool&)+0x18d7) [0x62264f7]
2019-07-10 14:21:56.611042: 9. clickhouse-server(DB::ParallelInputsProcessor<DB::ParallelAggregatingBlockInputStream::Handler>::thread(std::shared_ptr<DB::ThreadGroupStatus>, unsigned long)+0x3ba) [0x61da43a]
2019-07-10 14:21:56.611042: 10. clickhouse-server(_ZZN20ThreadFromGlobalPoolC4IZN2DB23ParallelInputsProcessorINS1_35ParallelAggregatingBlockInputStream7HandlerEE7processEvEUlvE_JEEEOT_DpOT0_ENKUlvE_clEv+0x5d) [0x61dab7d]
2019-07-10 14:21:56.611042: 11. clickhouse-server(ThreadPoolImpl<std::thread>::worker(std::_List_iterator<std::thread>)+0x187) [0x66c4bb7]
2019-07-10 14:21:56.611042: 12. clickhouse-server() [0x71eee5f]
2019-07-10 14:21:56.611042: 13. /lib64/libpthread.so.0(+0x7dd5) [0x7f717e4b6dd5]
2019-07-10 14:21:56.611042: 14. /lib64/libc.so.6(clone+0x6d) [0x7f717d7b8ead]
2019-07-10 14:21:56.611042: 
2019-07-10 14:21:56.637734: Iteration 7: 0.28
2019-07-10 14:21:56.728015: Thread 140567048488704 encountered an exception:
2019-07-10 14:21:56.728863: Code: 241.
2019-07-10 14:21:56.728916: DB::Exception: Memory limit (for query) exceeded: would use 9.38 GiB (attempt to allocate chunk of 134217728 bytes), maximum: 9.31 GiB. Stack trace:
2019-07-10 14:21:56.728916: 
2019-07-10 14:21:56.728916: 0. clickhouse-server(StackTrace::StackTrace()+0x16) [0x66bee66]
2019-07-10 14:21:56.728916: 1. clickhouse-server(MemoryTracker::alloc(long)+0x799) [0x66b7fc9]
2019-07-10 14:21:56.728916: 2. clickhouse-server(MemoryTracker::alloc(long)+0xa8) [0x66b78d8]
2019-07-10 14:21:56.728916: 3. clickhouse-server(Allocator<false>::alloc(unsigned long, unsigned long)+0x22) [0x66a29b2]
2019-07-10 14:21:56.728916: 4. clickhouse-server(DB::Arena::addChunk(unsigned long)+0x89) [0x31e4289]
2019-07-10 14:21:56.728916: 5. clickhouse-server(DB::Arena::alignedAlloc(unsigned long, unsigned long)+0x3b) [0x57cf0cb]
2019-07-10 14:21:56.728916: 6. clickhouse-server(void DB::Aggregator::executeImplCase<false, DB::AggregationMethodSerialized<TwoLevelHashMapTable<StringRef, HashMapCellWithSavedHash<StringRef, char*, DefaultHash<StringRef>, HashTableNoState>, DefaultHash<StringRef>, TwoLevelHashTableGrower<8ul>, Allocator<true>, HashMapTable> > >(DB::AggregationMethodSerialized<TwoLevelHashMapTable<StringRef, HashMapCellWithSavedHash<StringRef, char*, DefaultHash<StringRef>, HashTableNoState>, DefaultHash<StringRef>, TwoLevelHashTableGrower<8ul>, Allocator<true>, HashMapTable> >&, DB::AggregationMethodSerialized<TwoLevelHashMapTable<StringRef, HashMapCellWithSavedHash<StringRef, char*, DefaultHash<StringRef>, HashTableNoState>, DefaultHash<StringRef>, TwoLevelHashTableGrower<8ul>, Allocator<true>, HashMapTable> >::State&, DB::Arena*, unsigned long, std::vector<DB::IColumn const*, std::allocator<DB::IColumn const*> >&, DB::Aggregator::AggregateFunctionInstruction*, std::vector<StringRef, std::allocator<StringRef> >&, char*) const+0x29b) [0x627a4fb]
2019-07-10 14:21:56.728916: 7. clickhouse-server(void DB::Aggregator::executeImpl<DB::AggregationMethodSerialized<TwoLevelHashMapTable<StringRef, HashMapCellWithSavedHash<StringRef, char*, DefaultHash<StringRef>, HashTableNoState>, DefaultHash<StringRef>, TwoLevelHashTableGrower<8ul>, Allocator<true>, HashMapTable> > >(DB::AggregationMethodSerialized<TwoLevelHashMapTable<StringRef, HashMapCellWithSavedHash<StringRef, char*, DefaultHash<StringRef>, HashTableNoState>, DefaultHash<StringRef>, TwoLevelHashTableGrower<8ul>, Allocator<true>, HashMapTable> >&, DB::Arena*, unsigned long, std::vector<DB::IColumn const*, std::allocator<DB::IColumn const*> >&, DB::Aggregator::AggregateFunctionInstruction*, std::vector<StringRef, std::allocator<StringRef> >&, bool, char*) const+0x154) [0x627a804]
2019-07-10 14:21:56.728916: 8. clickhouse-server(DB::Aggregator::executeOnBlock(DB::Block const&, DB::AggregatedDataVariants&, std::vector<DB::IColumn const*, std::allocator<DB::IColumn const*> >&, std::vector<std::vector<DB::IColumn const*, std::allocator<DB::IColumn const*> >, std::allocator<std::vector<DB::IColumn const*, std::allocator<DB::IColumn const*> > > >&, std::vector<StringRef, std::allocator<StringRef> >&, bool&)+0x18d7) [0x62264f7]
2019-07-10 14:21:56.728916: 9. clickhouse-server(DB::ParallelInputsProcessor<DB::ParallelAggregatingBlockInputStream::Handler>::thread(std::shared_ptr<DB::ThreadGroupStatus>, unsigned long)+0x3ba) [0x61da43a]
2019-07-10 14:21:56.728916: 10. clickhouse-server(_ZZN20ThreadFromGlobalPoolC4IZN2DB23ParallelInputsProcessorINS1_35ParallelAggregatingBlockInputStream7HandlerEE7processEvEUlvE_JEEEOT_DpOT0_ENKUlvE_clEv+0x5d) [0x61dab7d]
2019-07-10 14:21:56.728916: 11. clickhouse-server(ThreadPoolImpl<std::thread>::worker(std::_List_iterator<std::thread>)+0x187) [0x66c4bb7]
2019-07-10 14:21:56.728916: 12. clickhouse-server() [0x71eee5f]
2019-07-10 14:21:56.728916: 13. /lib64/libpthread.so.0(+0x7dd5) [0x7f717e4b6dd5]
2019-07-10 14:21:56.728916: 14. /lib64/libc.so.6(clone+0x6d) [0x7f717d7b8ead]
2019-07-10 14:21:56.728916: 
2019-07-10 14:21:56.932193: Iteration 8: 0.29
2019-07-10 14:21:57.214993: Iteration 9: 0.28
2019-07-10 14:21:57.502361: Iteration 10: 0.29
2019-07-10 14:21:57.503374: 
2019-07-10 14:21:57.503391: Results for 100 records averaged over 11 repetitions:
2019-07-10 14:21:57.504390: Actual rows fetched: 100
2019-07-10 14:21:57.504901: Time to execute select: 0.27 seconds
2019-07-10 14:21:57.505412: Time to put into dataframe: 0.01 seconds
2019-07-10 14:21:57.505921: Total time: 0.29 seconds
2019-07-10 14:21:57.711471: Iteration 0: 0.21
2019-07-10 14:21:57.905706: Iteration 1: 0.19
2019-07-10 14:21:58.106333: Iteration 2: 0.20
2019-07-10 14:21:58.372424: Iteration 3: 0.27
2019-07-10 14:21:58.571172: Iteration 4: 0.20
2019-07-10 14:21:58.794470: Iteration 5: 0.22
2019-07-10 14:21:59.025441: Iteration 6: 0.23
2019-07-10 14:21:59.212408: Iteration 7: 0.19
2019-07-10 14:21:59.802402: Iteration 8: 0.59
2019-07-10 14:22:00.021051: Iteration 9: 0.22
2019-07-10 14:22:00.290919: Iteration 10: 0.27
2019-07-10 14:22:00.291634: 
2019-07-10 14:22:00.291648: Results for 500 records averaged over 11 repetitions:
2019-07-10 14:22:00.292567: Actual rows fetched: 500
2019-07-10 14:22:00.293016: Time to execute select: 0.24 seconds
2019-07-10 14:22:00.293441: Time to put into dataframe: 0.01 seconds
2019-07-10 14:22:00.293849: Total time: 0.25 seconds
2019-07-10 14:22:00.498560: Iteration 0: 0.20
2019-07-10 14:22:00.731466: Iteration 1: 0.23
2019-07-10 14:22:01.002442: Iteration 2: 0.27
2019-07-10 14:22:01.206678: Iteration 3: 0.20
2019-07-10 14:22:01.425532: Iteration 4: 0.22
2019-07-10 14:22:01.641597: Continuing after exception
2019-07-10 14:22:01.642873: Iteration 5: 0.22
2019-07-10 14:22:01.643077: Thread 140566998025984 starting background query: select tcp_flags,icmp_type,count(*) as connections,sum(in_pkts),avg(in_pkts),quantiles(.25,.5,.75)(in_pkts),median(in_pkts) from netflow.netflow_raw group by tcp_flags,icmp_type order by connections desc limit 50
2019-07-10 14:22:01.735906: Continuing after exception
2019-07-10 14:22:01.736941: Thread 140567048488704 starting background query: select flowset_id,count(*) as connections,sum(in_pkts),avg(in_pkts),quantiles(.25,.5,.75)(in_pkts),median(in_pkts) from netflow.netflow_raw group by flowset_id order by connections desc limit 50
2019-07-10 14:22:01.947447: Iteration 6: 0.30
2019-07-10 14:22:02.258530: Iteration 7: 0.31
2019-07-10 14:22:02.604536: Iteration 8: 0.35
2019-07-10 14:22:03.250800: Iteration 9: 0.65
2019-07-10 14:22:03.641641: Iteration 10: 0.39
2019-07-10 14:22:03.642267: 
2019-07-10 14:22:03.642281: Results for 1000 records averaged over 11 repetitions:
2019-07-10 14:22:03.643199: Actual rows fetched: 1000
2019-07-10 14:22:03.643482: Time to execute select: 0.29 seconds
2019-07-10 14:22:03.643907: Time to put into dataframe: 0.02 seconds
2019-07-10 14:22:03.644332: Total time: 0.30 seconds
2019-07-10 14:22:03.644759: 
2019-07-10 14:22:03.644771: Current Query: SELECT visitParamExtractInt(Message, 'partitionhash') AS partitionhash, 
2019-07-10 14:22:03.644771: visitParamExtractString(Message, 'hashcode') AS hashcode, 
2019-07-10 14:22:03.644771: visitParamExtractString(Message, 'accountnumber') AS accountnumber, 
2019-07-10 14:22:03.644771: visitParamExtractInt(Message, 'airtimeclass') AS airtimeclass, 
2019-07-10 14:22:03.644771: visitParamExtractFloat(Message, 'airtimeunits') AS airtimeunits, 
2019-07-10 14:22:03.644771: visitParamExtractString(Message, 'allocationcompletedate') AS allocationcompletedate, 
2019-07-10 14:22:03.644771: visitParamExtractString(Message, 'apn') AS apn, 
2019-07-10 14:22:03.644771: visitParamExtractString(Message, 'callednumber') AS callednumber, 
2019-07-10 14:22:03.644771: visitParamExtractString(Message, 'callingnumber') AS callingnumber, 
2019-07-10 14:22:03.644771: visitParamExtractInt(Message, 'carrierid') AS carrierid, 
2019-07-10 14:22:03.644771: visitParamExtractString(Message, 'cellid') AS cellid, 
2019-07-10 14:22:03.644771: visitParamExtractString(Message, 'chargingid') AS chargingid, 
2019-07-10 14:22:03.644771: visitParamExtractInt(Message, 'costcenterid') AS costcenterid, 
2019-07-10 14:22:03.644771: visitParamExtractInt(Message, 'downlinkvol') AS downlinkvol, 
2019-07-10 14:22:03.644771: visitParamExtractFloat(Message, 'duration') AS duration, 
2019-07-10 14:22:03.644771: visitParamExtractString(Message, 'exactusagedateonly') AS exactusagedateonly, 
2019-07-10 14:22:03.644771: visitParamExtractString(Message, 'exactusagetime') AS exactusagetime, 
2019-07-10 14:22:03.644771: visitParamExtractInt(Message, 'fileid') AS fileid, 
2019-07-10 14:22:03.644771: visitParamExtractString(Message, 'iccid') AS iccid, 
2019-07-10 14:22:03.644771: visitParamExtractString(Message, 'imei') AS imei, 
2019-07-10 14:22:03.644771: visitParamExtractString(Message, 'imsi') AS imsi, 
2019-07-10 14:22:03.644771: visitParamExtractInt(Message, 'lineid') AS lineid, 
2019-07-10 14:22:03.644771: visitParamExtractInt(Message, 'linenumber') AS linenumber, 
2019-07-10 14:22:03.644771: visitParamExtractString(Message, 'mobilecountrycode') AS mobilecountrycode, 
2019-07-10 14:22:03.644771: visitParamExtractString(Message, 'mobilenetworkcode') AS mobilenetworkcode, 
2019-07-10 14:22:03.644771: visitParamExtractBool(Message, 'mobileoriginated') AS mobileoriginated, 
2019-07-10 14:22:03.644771: visitParamExtractString(Message, 'msisdn') AS msisdn, 
2019-07-10 14:22:03.644771: visitParamExtractString(Message, 'network') AS network, 
2019-07-10 14:22:03.644771: visitParamExtractInt(Message, 'orgid') AS orgid, 
2019-07-10 14:22:03.644771: visitParamExtractString(Message, 'orgurn') AS orgurn, 
2019-07-10 14:22:03.644771: visitParamExtractString(Message, 'plmn') AS plmn, 
2019-07-10 14:22:03.644771: visitParamExtractRaw(Message, 'propertybag') AS propertybag, 
2019-07-10 14:22:03.644771: visitParamExtractString(Message, 'recordtype') AS recordtype, 
2019-07-10 14:22:03.644771: visitParamExtractString(Message, 'roamingindicator') AS roamingindicator, 
2019-07-10 14:22:03.644771: visitParamExtractString(Message, 'roundingdate') AS roundingdate, 
2019-07-10 14:22:03.644771: visitParamExtractString(Message, 'sender') AS sender, 
2019-07-10 14:22:03.644771: visitParamExtractInt(Message, 'subscriptionid') AS subscriptionid, 
2019-07-10 14:22:03.644771: visitParamExtractString(Message, 'subscriptionurn') AS subscriptionurn, 
2019-07-10 14:22:03.644771: visitParamExtractInt(Message, 'surrecordtypeid') AS surrecordtypeid, 
2019-07-10 14:22:03.644771: visitParamExtractString(Message, 'tapcode') AS tapcode, 
2019-07-10 14:22:03.644771: visitParamExtractInt(Message, 'uplinkvol') AS uplinkvol, 
2019-07-10 14:22:03.644771: visitParamExtractInt(Message, 'usagetypeid') AS usagetypeid 
2019-07-10 14:22:03.644771: FROM radius.udr 
2019-07-10 14:22:03.644771: WHERE partitionhash < 190512005 
2019-07-10 14:22:03.644771: LIMIT 
2019-07-10 14:22:03.752306: Iteration 0: 0.10
2019-07-10 14:22:03.898043: Iteration 1: 0.14
2019-07-10 14:22:03.979011: Iteration 2: 0.08
2019-07-10 14:22:04.053343: Iteration 3: 0.07
2019-07-10 14:22:04.226224: Iteration 4: 0.17
2019-07-10 14:22:04.344689: Iteration 5: 0.12
2019-07-10 14:22:04.441402: Iteration 6: 0.10
2019-07-10 14:22:04.581326: Iteration 7: 0.14
2019-07-10 14:22:04.735879: Iteration 8: 0.15
2019-07-10 14:22:04.870768: Iteration 9: 0.13
2019-07-10 14:22:05.010900: Iteration 10: 0.14
2019-07-10 14:22:05.012044: 
2019-07-10 14:22:05.012063: Results for 5 records averaged over 11 repetitions:
2019-07-10 14:22:05.013119: Actual rows fetched: 5
2019-07-10 14:22:05.013524: Time to execute select: 0.11 seconds
2019-07-10 14:22:05.014138: Time to put into dataframe: 0.01 seconds
2019-07-10 14:22:05.015130: Total time: 0.12 seconds
2019-07-10 14:22:05.164042: Iteration 0: 0.15
2019-07-10 14:22:05.482162: Iteration 1: 0.32
2019-07-10 14:22:05.716148: Iteration 2: 0.23
2019-07-10 14:22:05.878723: Iteration 3: 0.16
2019-07-10 14:22:05.952118: Iteration 4: 0.07
2019-07-10 14:22:06.081270: Iteration 5: 0.13
2019-07-10 14:22:06.546999: Iteration 6: 0.47
2019-07-10 14:22:06.621294: Iteration 7: 0.07
2019-07-10 14:22:06.793975: Iteration 8: 0.17
2019-07-10 14:22:06.930375: Iteration 9: 0.14
2019-07-10 14:22:07.090591: Iteration 10: 0.16
2019-07-10 14:22:07.091361: 
2019-07-10 14:22:07.091379: Results for 10 records averaged over 11 repetitions:
2019-07-10 14:22:07.092025: Actual rows fetched: 10
2019-07-10 14:22:07.092208: Time to execute select: 0.18 seconds
2019-07-10 14:22:07.092561: Time to put into dataframe: 0.01 seconds
2019-07-10 14:22:07.093022: Total time: 0.19 seconds
2019-07-10 14:22:07.266913: Iteration 0: 0.17
2019-07-10 14:22:07.432196: Iteration 1: 0.16
2019-07-10 14:22:07.571574: Iteration 2: 0.14
2019-07-10 14:22:07.677045: Iteration 3: 0.10
2019-07-10 14:22:07.795227: Iteration 4: 0.12
2019-07-10 14:22:07.922117: Iteration 5: 0.13
2019-07-10 14:22:08.037000: Iteration 6: 0.11
2019-07-10 14:22:08.177354: Iteration 7: 0.14
2019-07-10 14:22:08.410689: Iteration 8: 0.23
2019-07-10 14:22:08.562320: Iteration 9: 0.15
2019-07-10 14:22:08.636609: Iteration 10: 0.07
2019-07-10 14:22:08.637311: 
2019-07-10 14:22:08.637325: Results for 100 records averaged over 11 repetitions:
2019-07-10 14:22:08.637846: Actual rows fetched: 100
2019-07-10 14:22:08.638260: Time to execute select: 0.13 seconds
2019-07-10 14:22:08.638678: Time to put into dataframe: 0.01 seconds
2019-07-10 14:22:08.639091: Total time: 0.14 seconds
2019-07-10 14:22:08.784115: Iteration 0: 0.14
2019-07-10 14:22:08.938077: Iteration 1: 0.15
2019-07-10 14:22:09.079952: Iteration 2: 0.14
2019-07-10 14:22:09.161863: Iteration 3: 0.08
2019-07-10 14:22:09.317994: Iteration 4: 0.16
2019-07-10 14:22:09.478121: Iteration 5: 0.16
2019-07-10 14:22:09.599661: Iteration 6: 0.12
2019-07-10 14:22:09.772326: Iteration 7: 0.17
2019-07-10 14:22:10.005771: Iteration 8: 0.23
2019-07-10 14:22:10.130009: Iteration 9: 0.12
2019-07-10 14:22:10.535938: Iteration 10: 0.41
2019-07-10 14:22:10.536510: 
2019-07-10 14:22:10.536517: Results for 500 records averaged over 11 repetitions:
2019-07-10 14:22:10.537300: Actual rows fetched: 500
2019-07-10 14:22:10.537686: Time to execute select: 0.16 seconds
2019-07-10 14:22:10.538079: Time to put into dataframe: 0.01 seconds
2019-07-10 14:22:10.538468: Total time: 0.17 seconds
2019-07-10 14:22:10.634605: Iteration 0: 0.10
2019-07-10 14:22:10.867463: Iteration 1: 0.23
2019-07-10 14:22:11.059741: Iteration 2: 0.19
2019-07-10 14:22:11.276765: Iteration 3: 0.22
2019-07-10 14:22:11.415505: Iteration 4: 0.14
2019-07-10 14:22:11.603822: Iteration 5: 0.19
2019-07-10 14:22:11.726450: Iteration 6: 0.12
2019-07-10 14:22:11.986213: Iteration 7: 0.26
2019-07-10 14:22:12.127775: Iteration 8: 0.14
2019-07-10 14:22:12.281490: Iteration 9: 0.15
2019-07-10 14:22:12.392070: Iteration 10: 0.11
2019-07-10 14:22:12.392641: 
2019-07-10 14:22:12.392654: Results for 1000 records averaged over 11 repetitions:
2019-07-10 14:22:12.393144: Actual rows fetched: 1000
2019-07-10 14:22:12.393539: Time to execute select: 0.16 seconds
2019-07-10 14:22:12.393928: Time to put into dataframe: 0.01 seconds
2019-07-10 14:22:12.394125: Total time: 0.17 seconds
2019-07-10 14:22:12.394536: 
2019-07-10 14:22:12.394545: Current Query: SELECT visitParamExtractInt(Message, 'partitionhash') AS partitionhash, 
2019-07-10 14:22:12.394545: visitParamExtractString(Message, 'hashcode') AS hashcode, 
2019-07-10 14:22:12.394545: visitParamExtractString(Message, 'accountnumber') AS accountnumber, 
2019-07-10 14:22:12.394545: visitParamExtractInt(Message, 'airtimeclass') AS airtimeclass, 
2019-07-10 14:22:12.394545: visitParamExtractFloat(Message, 'airtimeunits') AS airtimeunits, 
2019-07-10 14:22:12.394545: visitParamExtractString(Message, 'allocationcompletedate') AS allocationcompletedate, 
2019-07-10 14:22:12.394545: visitParamExtractString(Message, 'apn') AS apn, 
2019-07-10 14:22:12.394545: visitParamExtractString(Message, 'callednumber') AS callednumber, 
2019-07-10 14:22:12.394545: visitParamExtractString(Message, 'callingnumber') AS callingnumber, 
2019-07-10 14:22:12.394545: visitParamExtractInt(Message, 'carrierid') AS carrierid, 
2019-07-10 14:22:12.394545: visitParamExtractString(Message, 'cellid') AS cellid, 
2019-07-10 14:22:12.394545: visitParamExtractString(Message, 'chargingid') AS chargingid, 
2019-07-10 14:22:12.394545: visitParamExtractInt(Message, 'costcenterid') AS costcenterid, 
2019-07-10 14:22:12.394545: visitParamExtractInt(Message, 'downlinkvol') AS downlinkvol, 
2019-07-10 14:22:12.394545: visitParamExtractFloat(Message, 'duration') AS duration, 
2019-07-10 14:22:12.394545: visitParamExtractString(Message, 'exactusagedateonly') AS exactusagedateonly, 
2019-07-10 14:22:12.394545: visitParamExtractString(Message, 'exactusagetime') AS exactusagetime, 
2019-07-10 14:22:12.394545: visitParamExtractInt(Message, 'fileid') AS fileid, 
2019-07-10 14:22:12.394545: visitParamExtractString(Message, 'iccid') AS iccid, 
2019-07-10 14:22:12.394545: visitParamExtractString(Message, 'imei') AS imei, 
2019-07-10 14:22:12.394545: visitParamExtractString(Message, 'imsi') AS imsi, 
2019-07-10 14:22:12.394545: visitParamExtractInt(Message, 'lineid') AS lineid, 
2019-07-10 14:22:12.394545: visitParamExtractInt(Message, 'linenumber') AS linenumber, 
2019-07-10 14:22:12.394545: visitParamExtractString(Message, 'mobilecountrycode') AS mobilecountrycode, 
2019-07-10 14:22:12.394545: visitParamExtractString(Message, 'mobilenetworkcode') AS mobilenetworkcode, 
2019-07-10 14:22:12.394545: visitParamExtractBool(Message, 'mobileoriginated') AS mobileoriginated, 
2019-07-10 14:22:12.394545: visitParamExtractString(Message, 'msisdn') AS msisdn, 
2019-07-10 14:22:12.394545: visitParamExtractString(Message, 'network') AS network, 
2019-07-10 14:22:12.394545: visitParamExtractInt(Message, 'orgid') AS orgid, 
2019-07-10 14:22:12.394545: visitParamExtractString(Message, 'orgurn') AS orgurn, 
2019-07-10 14:22:12.394545: visitParamExtractString(Message, 'plmn') AS plmn, 
2019-07-10 14:22:12.394545: visitParamExtractRaw(Message, 'propertybag') AS propertybag, 
2019-07-10 14:22:12.394545: visitParamExtractString(Message, 'recordtype') AS recordtype, 
2019-07-10 14:22:12.394545: visitParamExtractString(Message, 'roamingindicator') AS roamingindicator, 
2019-07-10 14:22:12.394545: visitParamExtractString(Message, 'roundingdate') AS roundingdate, 
2019-07-10 14:22:12.394545: visitParamExtractString(Message, 'sender') AS sender, 
2019-07-10 14:22:12.394545: visitParamExtractInt(Message, 'subscriptionid') AS subscriptionid, 
2019-07-10 14:22:12.394545: visitParamExtractString(Message, 'subscriptionurn') AS subscriptionurn, 
2019-07-10 14:22:12.394545: visitParamExtractInt(Message, 'surrecordtypeid') AS surrecordtypeid, 
2019-07-10 14:22:12.394545: visitParamExtractString(Message, 'tapcode') AS tapcode, 
2019-07-10 14:22:12.394545: visitParamExtractInt(Message, 'uplinkvol') AS uplinkvol, 
2019-07-10 14:22:12.394545: visitParamExtractInt(Message, 'usagetypeid') AS usagetypeid 
2019-07-10 14:22:12.394545: FROM radius.udr 
2019-07-10 14:22:12.394545: WHERE subscriptionid < 11400 AND subscriptionid > 11360 
2019-07-10 14:22:12.394545: LIMIT 
2019-07-10 14:22:12.572283: Iteration 0: 0.17
2019-07-10 14:22:12.756232: Iteration 1: 0.18
2019-07-10 14:22:13.009589: Iteration 2: 0.25
2019-07-10 14:22:13.404515: Iteration 3: 0.39
2019-07-10 14:22:13.884036: Iteration 4: 0.48
2019-07-10 14:22:14.126241: Iteration 5: 0.24
2019-07-10 14:22:14.210532: Iteration 6: 0.08
2019-07-10 14:22:14.337279: Iteration 7: 0.13
2019-07-10 14:22:14.650668: Iteration 8: 0.31
2019-07-10 14:22:14.821208: Iteration 9: 0.17
2019-07-10 14:22:15.096748: Iteration 10: 0.27
2019-07-10 14:22:15.097602: 
2019-07-10 14:22:15.097619: Results for 5 records averaged over 11 repetitions:
2019-07-10 14:22:15.098725: Actual rows fetched: 5
2019-07-10 14:22:15.099246: Time to execute select: 0.23 seconds
2019-07-10 14:22:15.099771: Time to put into dataframe: 0.01 seconds
2019-07-10 14:22:15.100290: Total time: 0.24 seconds
2019-07-10 14:22:15.214280: Iteration 0: 0.11
2019-07-10 14:22:15.305851: Iteration 1: 0.09
2019-07-10 14:22:15.499487: Iteration 2: 0.19
2019-07-10 14:22:15.666539: Iteration 3: 0.17
2019-07-10 14:22:15.809152: Iteration 4: 0.14
2019-07-10 14:22:16.005658: Iteration 5: 0.20
2019-07-10 14:22:16.471790: Iteration 6: 0.47
2019-07-10 14:22:16.650739: Iteration 7: 0.18
2019-07-10 14:22:17.123036: Iteration 8: 0.47
2019-07-10 14:22:17.321104: Iteration 9: 0.20
2019-07-10 14:22:17.481086: Iteration 10: 0.16
2019-07-10 14:22:17.481853: 
2019-07-10 14:22:17.481871: Results for 10 records averaged over 11 repetitions:
2019-07-10 14:22:17.482805: Actual rows fetched: 10
2019-07-10 14:22:17.483281: Time to execute select: 0.20 seconds
2019-07-10 14:22:17.483756: Time to put into dataframe: 0.01 seconds
2019-07-10 14:22:17.484058: Total time: 0.22 seconds
2019-07-10 14:22:17.644173: Iteration 0: 0.16
2019-07-10 14:22:17.738711: Iteration 1: 0.09
2019-07-10 14:22:17.952467: Iteration 2: 0.21
2019-07-10 14:22:18.053769: Iteration 3: 0.10
2019-07-10 14:22:18.242576: Iteration 4: 0.19
2019-07-10 14:22:18.472292: Iteration 5: 0.23
2019-07-10 14:22:18.627273: Iteration 6: 0.15
2019-07-10 14:22:18.808493: Iteration 7: 0.18
2019-07-10 14:22:19.004505: Iteration 8: 0.20
2019-07-10 14:22:19.151159: Iteration 9: 0.15
2019-07-10 14:22:19.308464: Iteration 10: 0.16
2019-07-10 14:22:19.309554: 
2019-07-10 14:22:19.309578: Results for 100 records averaged over 11 repetitions:
2019-07-10 14:22:19.310865: Actual rows fetched: 100
2019-07-10 14:22:19.311511: Time to execute select: 0.15 seconds
2019-07-10 14:22:19.312166: Time to put into dataframe: 0.01 seconds
2019-07-10 14:22:19.313189: Total time: 0.16 seconds
2019-07-10 14:22:19.634093: Iteration 0: 0.32
2019-07-10 14:22:19.748702: Iteration 1: 0.11
2019-07-10 14:22:19.882948: Iteration 2: 0.13
2019-07-10 14:22:19.993892: Iteration 3: 0.11
2019-07-10 14:22:20.475835: Iteration 4: 0.48
2019-07-10 14:22:20.701137: Iteration 5: 0.22
2019-07-10 14:22:20.836089: Iteration 6: 0.13
2019-07-10 14:22:20.974621: Iteration 7: 0.14
2019-07-10 14:22:21.154586: Iteration 8: 0.18
2019-07-10 14:22:21.349459: Iteration 9: 0.19
2019-07-10 14:22:21.562672: Iteration 10: 0.21
2019-07-10 14:22:21.565876: 
2019-07-10 14:22:21.565914: Results for 500 records averaged over 11 repetitions:
2019-07-10 14:22:21.567149: Actual rows fetched: 500
2019-07-10 14:22:21.567744: Time to execute select: 0.19 seconds
2019-07-10 14:22:21.568334: Time to put into dataframe: 0.01 seconds
2019-07-10 14:22:21.568930: Total time: 0.20 seconds
2019-07-10 14:22:21.708260: Iteration 0: 0.14
2019-07-10 14:22:21.908499: Iteration 1: 0.20
2019-07-10 14:22:22.089964: Iteration 2: 0.18
2019-07-10 14:22:22.265462: Iteration 3: 0.17
2019-07-10 14:22:22.807152: Iteration 4: 0.54
2019-07-10 14:22:22.971209: Iteration 5: 0.16
2019-07-10 14:22:23.232140: Iteration 6: 0.26
2019-07-10 14:22:23.495765: Iteration 7: 0.26
2019-07-10 14:22:23.774055: Iteration 8: 0.28
2019-07-10 14:22:23.955203: Iteration 9: 0.18
2019-07-10 14:22:24.104519: Iteration 10: 0.15
2019-07-10 14:22:24.104926: 
2019-07-10 14:22:24.104934: Results for 1000 records averaged over 11 repetitions:
2019-07-10 14:22:24.105232: Actual rows fetched: 1000
2019-07-10 14:22:24.105388: Time to execute select: 0.22 seconds
2019-07-10 14:22:24.105534: Time to put into dataframe: 0.01 seconds
2019-07-10 14:22:24.105690: Total time: 0.23 seconds
2019-07-10 14:22:24.105852: 
2019-07-10 14:22:24.105859: Current Query: SELECT visitParamExtractInt(Message, 'partitionhash') AS partitionhash, 
2019-07-10 14:22:24.105859: visitParamExtractString(Message, 'hashcode') AS hashcode, 
2019-07-10 14:22:24.105859: visitParamExtractString(Message, 'accountnumber') AS accountnumber, 
2019-07-10 14:22:24.105859: visitParamExtractInt(Message, 'airtimeclass') AS airtimeclass, 
2019-07-10 14:22:24.105859: visitParamExtractFloat(Message, 'airtimeunits') AS airtimeunits, 
2019-07-10 14:22:24.105859: visitParamExtractString(Message, 'allocationcompletedate') AS allocationcompletedate, 
2019-07-10 14:22:24.105859: visitParamExtractString(Message, 'apn') AS apn, 
2019-07-10 14:22:24.105859: visitParamExtractString(Message, 'callednumber') AS callednumber, 
2019-07-10 14:22:24.105859: visitParamExtractString(Message, 'callingnumber') AS callingnumber, 
2019-07-10 14:22:24.105859: visitParamExtractInt(Message, 'carrierid') AS carrierid, 
2019-07-10 14:22:24.105859: visitParamExtractString(Message, 'cellid') AS cellid, 
2019-07-10 14:22:24.105859: visitParamExtractString(Message, 'chargingid') AS chargingid, 
2019-07-10 14:22:24.105859: visitParamExtractInt(Message, 'costcenterid') AS costcenterid, 
2019-07-10 14:22:24.105859: visitParamExtractInt(Message, 'downlinkvol') AS downlinkvol, 
2019-07-10 14:22:24.105859: visitParamExtractFloat(Message, 'duration') AS duration, 
2019-07-10 14:22:24.105859: visitParamExtractString(Message, 'exactusagedateonly') AS exactusagedateonly, 
2019-07-10 14:22:24.105859: visitParamExtractString(Message, 'exactusagetime') AS exactusagetime, 
2019-07-10 14:22:24.105859: visitParamExtractInt(Message, 'fileid') AS fileid, 
2019-07-10 14:22:24.105859: visitParamExtractString(Message, 'iccid') AS iccid, 
2019-07-10 14:22:24.105859: visitParamExtractString(Message, 'imei') AS imei, 
2019-07-10 14:22:24.105859: visitParamExtractString(Message, 'imsi') AS imsi, 
2019-07-10 14:22:24.105859: visitParamExtractInt(Message, 'lineid') AS lineid, 
2019-07-10 14:22:24.105859: visitParamExtractInt(Message, 'linenumber') AS linenumber, 
2019-07-10 14:22:24.105859: visitParamExtractString(Message, 'mobilecountrycode') AS mobilecountrycode, 
2019-07-10 14:22:24.105859: visitParamExtractString(Message, 'mobilenetworkcode') AS mobilenetworkcode, 
2019-07-10 14:22:24.105859: visitParamExtractBool(Message, 'mobileoriginated') AS mobileoriginated, 
2019-07-10 14:22:24.105859: visitParamExtractString(Message, 'msisdn') AS msisdn, 
2019-07-10 14:22:24.105859: visitParamExtractString(Message, 'network') AS network, 
2019-07-10 14:22:24.105859: visitParamExtractInt(Message, 'orgid') AS orgid, 
2019-07-10 14:22:24.105859: visitParamExtractString(Message, 'orgurn') AS orgurn, 
2019-07-10 14:22:24.105859: visitParamExtractString(Message, 'plmn') AS plmn, 
2019-07-10 14:22:24.105859: visitParamExtractRaw(Message, 'propertybag') AS propertybag, 
2019-07-10 14:22:24.105859: visitParamExtractString(Message, 'recordtype') AS recordtype, 
2019-07-10 14:22:24.105859: visitParamExtractString(Message, 'roamingindicator') AS roamingindicator, 
2019-07-10 14:22:24.105859: visitParamExtractString(Message, 'roundingdate') AS roundingdate, 
2019-07-10 14:22:24.105859: visitParamExtractString(Message, 'sender') AS sender, 
2019-07-10 14:22:24.105859: visitParamExtractInt(Message, 'subscriptionid') AS subscriptionid, 
2019-07-10 14:22:24.105859: visitParamExtractString(Message, 'subscriptionurn') AS subscriptionurn, 
2019-07-10 14:22:24.105859: visitParamExtractInt(Message, 'surrecordtypeid') AS surrecordtypeid, 
2019-07-10 14:22:24.105859: visitParamExtractString(Message, 'tapcode') AS tapcode, 
2019-07-10 14:22:24.105859: visitParamExtractInt(Message, 'uplinkvol') AS uplinkvol, 
2019-07-10 14:22:24.105859: visitParamExtractInt(Message, 'usagetypeid') AS usagetypeid 
2019-07-10 14:22:24.105859: FROM radius.udr 
2019-07-10 14:22:24.105859: WHERE partitionhash = 190512005 AND subscriptionid < 11400 AND subscriptionid > 11360 
2019-07-10 14:22:24.105859: LIMIT 
2019-07-10 14:22:24.311409: Iteration 0: 0.20
2019-07-10 14:22:24.474771: Iteration 1: 0.16
2019-07-10 14:22:24.682830: Iteration 2: 0.21
2019-07-10 14:22:24.876534: Iteration 3: 0.19
2019-07-10 14:22:25.077211: Iteration 4: 0.20
2019-07-10 14:22:25.291749: Iteration 5: 0.21
2019-07-10 14:22:25.381903: Iteration 6: 0.09
2019-07-10 14:22:25.664293: Iteration 7: 0.28
2019-07-10 14:22:25.898118: Iteration 8: 0.23
2019-07-10 14:22:26.017044: Iteration 9: 0.12
2019-07-10 14:22:26.184615: Iteration 10: 0.17
2019-07-10 14:22:26.185680: 
2019-07-10 14:22:26.185713: Results for 5 records averaged over 11 repetitions:
2019-07-10 14:22:26.186747: Actual rows fetched: 5
2019-07-10 14:22:26.187392: Time to execute select: 0.18 seconds
2019-07-10 14:22:26.188034: Time to put into dataframe: 0.01 seconds
2019-07-10 14:22:26.188632: Total time: 0.19 seconds
2019-07-10 14:22:26.460413: Iteration 0: 0.27
2019-07-10 14:22:26.603457: Iteration 1: 0.14
2019-07-10 14:22:26.775364: Iteration 2: 0.17
2019-07-10 14:22:27.276705: Iteration 3: 0.50
2019-07-10 14:22:27.553072: Iteration 4: 0.28
2019-07-10 14:22:27.772063: Iteration 5: 0.22
2019-07-10 14:22:27.992556: Iteration 6: 0.22
2019-07-10 14:22:28.181706: Iteration 7: 0.19
2019-07-10 14:22:28.416194: Iteration 8: 0.23
2019-07-10 14:22:28.638460: Iteration 9: 0.22
2019-07-10 14:22:28.852754: Iteration 10: 0.21
2019-07-10 14:22:28.853577: 
2019-07-10 14:22:28.853593: Results for 10 records averaged over 11 repetitions:
2019-07-10 14:22:28.854598: Actual rows fetched: 10
2019-07-10 14:22:28.855107: Time to execute select: 0.23 seconds
2019-07-10 14:22:28.855617: Time to put into dataframe: 0.01 seconds
2019-07-10 14:22:28.856474: Total time: 0.24 seconds
2019-07-10 14:22:29.098818: Iteration 0: 0.24
2019-07-10 14:22:29.290216: Iteration 1: 0.19
2019-07-10 14:22:29.531745: Iteration 2: 0.24
2019-07-10 14:22:29.834183: Iteration 3: 0.30
2019-07-10 14:22:30.024677: Iteration 4: 0.19
2019-07-10 14:22:30.261664: Iteration 5: 0.24
2019-07-10 14:22:30.474046: Iteration 6: 0.21
2019-07-10 14:22:30.660231: Iteration 7: 0.19
2019-07-10 14:22:30.839177: Iteration 8: 0.18
2019-07-10 14:22:31.089958: Iteration 9: 0.25
2019-07-10 14:22:31.266824: Iteration 10: 0.18
2019-07-10 14:22:31.267853: 
2019-07-10 14:22:31.267877: Results for 100 records averaged over 11 repetitions:
2019-07-10 14:22:31.268987: Actual rows fetched: 100
2019-07-10 14:22:31.269561: Time to execute select: 0.20 seconds
2019-07-10 14:22:31.270128: Time to put into dataframe: 0.02 seconds
2019-07-10 14:22:31.270693: Total time: 0.22 seconds
2019-07-10 14:22:31.464524: Iteration 0: 0.19
2019-07-10 14:22:31.781960: Iteration 1: 0.32
2019-07-10 14:22:32.051170: Iteration 2: 0.27
2019-07-10 14:22:32.252947: Iteration 3: 0.20
2019-07-10 14:22:32.473704: Iteration 4: 0.22
2019-07-10 14:22:32.632412: Iteration 5: 0.16
2019-07-10 14:22:32.820280: Iteration 6: 0.19
2019-07-10 14:22:33.040076: Iteration 7: 0.22
2019-07-10 14:22:33.307130: Iteration 8: 0.27
2019-07-10 14:22:33.470144: Iteration 9: 0.16
2019-07-10 14:22:33.728235: Iteration 10: 0.26
2019-07-10 14:22:33.729255: 
2019-07-10 14:22:33.729280: Results for 500 records averaged over 11 repetitions:
2019-07-10 14:22:33.730433: Actual rows fetched: 500
2019-07-10 14:22:33.730871: Time to execute select: 0.21 seconds
2019-07-10 14:22:33.731235: Time to put into dataframe: 0.01 seconds
2019-07-10 14:22:33.731699: Total time: 0.22 seconds
2019-07-10 14:22:33.963312: Iteration 0: 0.23
2019-07-10 14:22:34.144033: Iteration 1: 0.18
2019-07-10 14:22:34.320460: Iteration 2: 0.18
2019-07-10 14:22:34.529379: Iteration 3: 0.21
2019-07-10 14:22:34.704062: Iteration 4: 0.17
2019-07-10 14:22:34.911175: Iteration 5: 0.21
2019-07-10 14:22:35.142059: Iteration 6: 0.23
2019-07-10 14:22:35.445759: Iteration 7: 0.30
2019-07-10 14:22:35.756241: Iteration 8: 0.31
2019-07-10 14:22:35.956063: Iteration 9: 0.20
2019-07-10 14:22:36.221922: Iteration 10: 0.27
2019-07-10 14:22:36.222545: 
2019-07-10 14:22:36.222552: Results for 1000 records averaged over 11 repetitions:
2019-07-10 14:22:36.223321: Actual rows fetched: 1000
2019-07-10 14:22:36.223710: Time to execute select: 0.21 seconds
2019-07-10 14:22:36.224103: Time to put into dataframe: 0.01 seconds
2019-07-10 14:22:36.224491: Total time: 0.23 seconds
2019-07-10 14:24:13.667969: 
2019-07-10 14:24:13.668006: 
2019-07-10 14:24:13.668006: Beginning Cassandra Test
2019-07-10 14:24:13.751209: 
2019-07-10 14:24:13.751232: Current Query: SELECT * FROM "udr" LIMIT 
2019-07-10 14:24:14.537849: Iteration 0: 0.03
2019-07-10 14:24:14.560942: Iteration 1: 0.02
2019-07-10 14:24:14.582202: Iteration 2: 0.02
2019-07-10 14:24:14.604074: Iteration 3: 0.02
2019-07-10 14:24:14.624449: Iteration 4: 0.02
2019-07-10 14:24:14.642707: Iteration 5: 0.02
2019-07-10 14:24:14.660570: Iteration 6: 0.02
2019-07-10 14:24:14.680408: Iteration 7: 0.02
2019-07-10 14:24:14.699172: Iteration 8: 0.02
2019-07-10 14:24:14.719679: Iteration 9: 0.02
2019-07-10 14:24:14.740498: Iteration 10: 0.02
2019-07-10 14:24:14.740965: 
2019-07-10 14:24:14.740972: Results for 5 records averaged over 11 repetitions:
2019-07-10 14:24:14.741728: Actual rows fetched: 5
2019-07-10 14:24:14.742107: Time to execute select: 0.02 seconds
2019-07-10 14:24:14.742484: Time to put into dataframe: 0.00 seconds
2019-07-10 14:24:14.742862: Total time: 0.02 seconds
2019-07-10 14:24:14.891356: Iteration 0: 0.03
2019-07-10 14:24:14.917803: Iteration 1: 0.03
2019-07-10 14:24:14.946711: Iteration 2: 0.03
2019-07-10 14:24:14.974989: Iteration 3: 0.03
2019-07-10 14:24:14.997363: Iteration 4: 0.02
2019-07-10 14:24:15.023224: Iteration 5: 0.03
2019-07-10 14:24:15.043514: Iteration 6: 0.02
2019-07-10 14:24:15.067908: Iteration 7: 0.02
2019-07-10 14:24:15.090068: Iteration 8: 0.02
2019-07-10 14:24:15.110474: Iteration 9: 0.02
2019-07-10 14:24:15.133758: Iteration 10: 0.02
2019-07-10 14:24:15.134456: 
2019-07-10 14:24:15.134467: Results for 10 records averaged over 11 repetitions:
2019-07-10 14:24:15.135314: Actual rows fetched: 10
2019-07-10 14:24:15.135710: Time to execute select: 0.02 seconds
2019-07-10 14:24:15.136091: Time to put into dataframe: 0.01 seconds
2019-07-10 14:24:15.136468: Total time: 0.02 seconds
2019-07-10 14:24:15.308393: Iteration 0: 0.06
2019-07-10 14:24:15.348340: Iteration 1: 0.04
2019-07-10 14:24:15.406162: Iteration 2: 0.06
2019-07-10 14:24:15.448012: Iteration 3: 0.04
2019-07-10 14:24:15.515066: Iteration 4: 0.07
2019-07-10 14:24:15.565031: Iteration 5: 0.05
2019-07-10 14:24:15.618153: Iteration 6: 0.05
2019-07-10 14:24:15.656884: Iteration 7: 0.04
2019-07-10 14:24:15.703986: Iteration 8: 0.05
2019-07-10 14:24:15.750295: Iteration 9: 0.05
2019-07-10 14:24:15.793490: Iteration 10: 0.04
2019-07-10 14:24:15.794101: 
2019-07-10 14:24:15.794118: Results for 100 records averaged over 11 repetitions:
2019-07-10 14:24:15.794792: Actual rows fetched: 100
2019-07-10 14:24:15.795024: Time to execute select: 0.04 seconds
2019-07-10 14:24:15.795411: Time to put into dataframe: 0.01 seconds
2019-07-10 14:24:15.795776: Total time: 0.05 seconds
2019-07-10 14:24:16.118415: Iteration 0: 0.20
2019-07-10 14:24:16.428635: Iteration 1: 0.31
2019-07-10 14:24:16.584314: Iteration 2: 0.16
2019-07-10 14:24:16.763356: Iteration 3: 0.18
2019-07-10 14:24:17.010098: Iteration 4: 0.25
2019-07-10 14:24:17.171920: Iteration 5: 0.16
2019-07-10 14:24:17.317497: Iteration 6: 0.14
2019-07-10 14:24:17.493170: Iteration 7: 0.18
2019-07-10 14:24:17.729787: Iteration 8: 0.24
2019-07-10 14:24:18.006336: Iteration 9: 0.28
2019-07-10 14:24:18.168271: Iteration 10: 0.16
2019-07-10 14:24:18.168706: 
2019-07-10 14:24:18.168716: Results for 500 records averaged over 11 repetitions:
2019-07-10 14:24:18.168949: Actual rows fetched: 500
2019-07-10 14:24:18.169070: Time to execute select: 0.20 seconds
2019-07-10 14:24:18.169174: Time to put into dataframe: 0.01 seconds
2019-07-10 14:24:18.169281: Total time: 0.20 seconds
2019-07-10 14:24:18.765191: Iteration 0: 0.47
2019-07-10 14:24:19.048650: Iteration 1: 0.28
2019-07-10 14:24:19.434144: Iteration 2: 0.39
2019-07-10 14:24:19.724097: Iteration 3: 0.29
2019-07-10 14:24:20.116867: Iteration 4: 0.39
2019-07-10 14:24:20.620485: Iteration 5: 0.50
2019-07-10 14:24:20.940521: Iteration 6: 0.32
2019-07-10 14:24:21.299866: Iteration 7: 0.36
2019-07-10 14:24:21.648045: Iteration 8: 0.35
2019-07-10 14:24:21.980851: Iteration 9: 0.33
2019-07-10 14:24:22.344848: Iteration 10: 0.36
2019-07-10 14:24:22.345401: 
2019-07-10 14:24:22.345409: Results for 1000 records averaged over 11 repetitions:
2019-07-10 14:24:22.346179: Actual rows fetched: 1000
2019-07-10 14:24:22.346566: Time to execute select: 0.36 seconds
2019-07-10 14:24:22.346956: Time to put into dataframe: 0.01 seconds
2019-07-10 14:24:22.347344: Total time: 0.37 seconds
2019-07-10 14:24:22.347902: 
2019-07-10 14:24:22.347909: Current Query: SELECT * FROM "udr" WHERE partitionhash = -1 LIMIT 
2019-07-10 14:24:22.487925: Iteration 0: 0.02
2019-07-10 14:24:22.500984: Iteration 1: 0.01
2019-07-10 14:24:22.513955: Iteration 2: 0.01
2019-07-10 14:24:22.526270: Iteration 3: 0.01
2019-07-10 14:24:22.539268: Iteration 4: 0.01
2019-07-10 14:24:22.552298: Iteration 5: 0.01
2019-07-10 14:24:22.564871: Iteration 6: 0.01
2019-07-10 14:24:22.576825: Iteration 7: 0.01
2019-07-10 14:24:22.589112: Iteration 8: 0.01
2019-07-10 14:24:22.601557: Iteration 9: 0.01
2019-07-10 14:24:22.613315: Iteration 10: 0.01
2019-07-10 14:24:22.613775: 
2019-07-10 14:24:22.613782: Results for 5 records averaged over 11 repetitions:
2019-07-10 14:24:22.614557: Actual rows fetched: 0
2019-07-10 14:24:22.614941: Time to execute select: 0.01 seconds
2019-07-10 14:24:22.615328: Time to put into dataframe: 0.00 seconds
2019-07-10 14:24:22.615713: Total time: 0.01 seconds
2019-07-10 14:24:22.616254: 
2019-07-10 14:24:22.616261: Current Query: SELECT * FROM "udr" WHERE carrierid = 18000 LIMIT 
2019-07-10 14:24:22.881792: Iteration 0: 0.14
2019-07-10 14:24:23.286164: Iteration 1: 0.40
2019-07-10 14:24:24.055872: Iteration 2: 0.77
2019-07-10 14:24:24.576703: Iteration 3: 0.52
2019-07-10 14:24:25.353313: Iteration 4: 0.78
2019-07-10 14:24:25.666607: Iteration 5: 0.31
2019-07-10 14:24:26.167565: Iteration 6: 0.50
2019-07-10 14:24:26.787000: Iteration 7: 0.62
2019-07-10 14:24:27.397591: Iteration 8: 0.61
2019-07-10 14:24:28.060166: Iteration 9: 0.66
2019-07-10 14:24:28.740871: Iteration 10: 0.68
2019-07-10 14:24:28.741488: 
2019-07-10 14:24:28.741496: Results for 5 records averaged over 11 repetitions:
2019-07-10 14:24:28.741981: Actual rows fetched: 5
2019-07-10 14:24:28.742092: Time to execute select: 0.54 seconds
2019-07-10 14:24:28.742269: Time to put into dataframe: 0.01 seconds
2019-07-10 14:24:28.742658: Total time: 0.54 seconds
2019-07-10 14:24:29.466292: Iteration 0: 0.13
2019-07-10 14:24:30.048121: Iteration 1: 0.58
2019-07-10 14:24:30.722054: Iteration 2: 0.67
2019-07-10 14:24:31.293054: Iteration 3: 0.57
2019-07-10 14:24:31.719519: Iteration 4: 0.43
2019-07-10 14:24:32.319410: Iteration 5: 0.60
2019-07-10 14:24:32.881558: Iteration 6: 0.56
2019-07-10 14:24:33.441860: Iteration 7: 0.56
2019-07-10 14:24:34.165479: Iteration 8: 0.72
2019-07-10 14:24:34.832934: Iteration 9: 0.67
2019-07-10 14:24:35.258438: Iteration 10: 0.42
2019-07-10 14:24:35.259063: 
2019-07-10 14:24:35.259074: Results for 10 records averaged over 11 repetitions:
2019-07-10 14:24:35.259665: Actual rows fetched: 10
2019-07-10 14:24:35.260084: Time to execute select: 0.53 seconds
2019-07-10 14:24:35.260388: Time to put into dataframe: 0.01 seconds
2019-07-10 14:24:35.260783: Total time: 0.54 seconds
2019-07-10 14:24:36.265823: Iteration 0: 0.32
2019-07-10 14:24:36.712515: Iteration 1: 0.45
2019-07-10 14:24:37.241954: Iteration 2: 0.53
2019-07-10 14:24:38.022285: Iteration 3: 0.78
2019-07-10 14:24:38.427119: Iteration 4: 0.40
2019-07-10 14:24:38.972574: Iteration 5: 0.55
2019-07-10 14:24:39.842498: Iteration 6: 0.87
2019-07-10 14:24:40.430062: Iteration 7: 0.59
2019-07-10 14:24:40.987318: Iteration 8: 0.56
2019-07-10 14:24:41.500676: Iteration 9: 0.51
2019-07-10 14:24:42.029617: Iteration 10: 0.53
2019-07-10 14:24:42.030140: 
2019-07-10 14:24:42.030150: Results for 100 records averaged over 11 repetitions:
2019-07-10 14:24:42.030855: Actual rows fetched: 100
2019-07-10 14:24:42.031236: Time to execute select: 0.55 seconds
2019-07-10 14:24:42.031621: Time to put into dataframe: 0.01 seconds
2019-07-10 14:24:42.031875: Total time: 0.55 seconds
2019-07-10 14:24:43.189366: Iteration 0: 0.43
2019-07-10 14:24:43.894199: Iteration 1: 0.70
2019-07-10 14:24:44.654172: Iteration 2: 0.76
2019-07-10 14:24:45.352607: Iteration 3: 0.70
2019-07-10 14:24:46.172324: Iteration 4: 0.82
2019-07-10 14:24:46.954618: Iteration 5: 0.78
2019-07-10 14:24:47.641742: Iteration 6: 0.69
2019-07-10 14:24:48.479012: Iteration 7: 0.84
2019-07-10 14:24:49.275800: Iteration 8: 0.80
2019-07-10 14:24:49.973980: Iteration 9: 0.70
2019-07-10 14:24:50.655082: Iteration 10: 0.68
2019-07-10 14:24:50.655636: 
2019-07-10 14:24:50.655643: Results for 500 records averaged over 11 repetitions:
2019-07-10 14:24:50.656416: Actual rows fetched: 500
2019-07-10 14:24:50.656808: Time to execute select: 0.71 seconds
2019-07-10 14:24:50.657155: Time to put into dataframe: 0.01 seconds
2019-07-10 14:24:50.657322: Total time: 0.72 seconds
2019-07-10 14:24:51.784887: Iteration 0: 0.65
2019-07-10 14:24:52.709547: Iteration 1: 0.92
2019-07-10 14:24:53.365378: Iteration 2: 0.66
2019-07-10 14:24:54.049341: Iteration 3: 0.68
2019-07-10 14:24:54.947158: Iteration 4: 0.90
2019-07-10 14:24:55.671199: Iteration 5: 0.72
2019-07-10 14:24:56.617541: Iteration 6: 0.95
2019-07-10 14:24:57.182068: Iteration 7: 0.56
2019-07-10 14:24:58.011197: Iteration 8: 0.83
2019-07-10 14:24:58.750654: Iteration 9: 0.74
2019-07-10 14:24:59.397543: Iteration 10: 0.65
2019-07-10 14:24:59.398086: 
2019-07-10 14:24:59.398095: Results for 1000 records averaged over 11 repetitions:
2019-07-10 14:24:59.398871: Actual rows fetched: 1000
2019-07-10 14:24:59.399265: Time to execute select: 0.74 seconds
2019-07-10 14:24:59.399652: Time to put into dataframe: 0.01 seconds
2019-07-10 14:24:59.400007: Total time: 0.75 seconds
2019-07-10 14:24:59.400482: 
2019-07-10 14:24:59.400489: Current Query: SELECT * FROM "udr" WHERE fileid = 278 LIMIT 
2019-07-10 14:25:09.673957: Coordinator Node Timeout
2019-07-10 14:25:09.674993: 
2019-07-10 14:25:09.675023: Results for 5 records averaged over 11 repetitions:
2019-07-10 14:25:09.676168: Actual rows fetched: 1000
2019-07-10 14:25:09.676727: Time to execute select: -1.00 seconds
2019-07-10 14:25:09.677283: Time to put into dataframe: -1.00 seconds
2019-07-10 14:25:09.677842: Total time: -2.00 seconds
2019-07-10 14:25:09.678757: 
2019-07-10 14:25:09.678804: Current Query: SELECT * FROM "udr" WHERE usagetypeid = 0 LIMIT 
2019-07-10 14:25:23.796137: Coordinator Node Timeout
2019-07-10 14:25:23.797178: 
2019-07-10 14:25:23.797208: Results for 5 records averaged over 11 repetitions:
2019-07-10 14:25:23.798442: Actual rows fetched: 1000
2019-07-10 14:25:23.799001: Time to execute select: -1.00 seconds
2019-07-10 14:25:23.799477: Time to put into dataframe: -1.00 seconds
2019-07-10 14:25:23.800035: Total time: -2.00 seconds
2019-07-10 14:25:23.800976: 
2019-07-10 14:25:23.801003: Current Query: SELECT * FROM "udr" WHERE partitionhash < 190512005 LIMIT 
2019-07-10 14:25:35.644469: Coordinator Node Timeout
2019-07-10 14:25:35.645676: 
2019-07-10 14:25:35.645727: Results for 5 records averaged over 11 repetitions:
2019-07-10 14:25:35.647892: Actual rows fetched: 1000
2019-07-10 14:25:35.648334: Time to execute select: -1.00 seconds
2019-07-10 14:25:35.648749: Time to put into dataframe: -1.00 seconds
2019-07-10 14:25:35.648998: Total time: -2.00 seconds
2019-07-10 14:25:35.649573: 
2019-07-10 14:25:35.649580: Current Query: SELECT * FROM "udr" WHERE subscriptionid < 11400 AND subscriptionid > 11360 LIMIT 
2019-07-10 14:25:40.766265: Error: At least one replica failed
2019-07-10 14:25:40.767280: 
2019-07-10 14:25:40.767310: Results for 5 records averaged over 11 repetitions:
2019-07-10 14:25:40.768258: Actual rows fetched: 1000
2019-07-10 14:25:40.768740: Time to execute select: -1.00 seconds
2019-07-10 14:25:40.769196: Time to put into dataframe: -1.00 seconds
2019-07-10 14:25:40.769662: Total time: -2.00 seconds
2019-07-10 14:25:40.770628: 
2019-07-10 14:25:40.770660: Current Query: SELECT * FROM "udr" WHERE partitionhash = 190512005 AND subscriptionid < 11400 AND subscriptionid > 11360 LIMIT 
2019-07-10 14:25:45.771960: Exception while connecting to cassandra: 
2019-07-10 14:25:45.772340: ("Unable to connect to any servers using keyspace 'CassandraPractice'", ['172.30.100.205', '172.30.100.206'])
2019-07-10 14:25:50.771039: retrying connection:
2019-07-10 14:26:01.541298: Coordinator Node Timeout
2019-07-10 14:26:01.542209: 
2019-07-10 14:26:01.542240: Results for 5 records averaged over 11 repetitions:
2019-07-10 14:26:01.542922: Actual rows fetched: 1000
2019-07-10 14:26:01.543206: Time to execute select: -1.00 seconds
2019-07-10 14:26:01.543464: Time to put into dataframe: -1.00 seconds
2019-07-10 14:26:01.543728: Total time: -2.00 seconds
